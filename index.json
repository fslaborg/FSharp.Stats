[{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop.html","title":"FSharp.NativeInterop","content":"NativArrayExtensionsForMatrix \nNativeOps \nNativeUtilities \nRef \nCMatrix\u003C\u0027T\u003E \nFortranMatrix\u003C\u0027T\u003E \nNativeArray\u003C\u0027T\u003E \nNativeArray2\u003C\u0027T\u003E \nPinnedArray\u003C\u0027T\u003E \nPinnedArray2\u003C\u0027T\u003E"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats.html","title":"FSharp.Stats","content":"Array \nBigRationalLarge \nBigRationalLargeImpl \nBlasStubs \nConfidenceInterval \nCorrelation \nDistanceMetrics \nDoubleImpl \nFSIPrinters \nFormatting \nGenericImpl \nGeometry \nGlobalAssociations \nHelpers \nInstances \nIntervals \nJaggedArray \nJaggedList \nLapackMKLStubs \nLapackStubs \nList \nMRandom \nMatrix \nMatrixExtension \nMatrixTopLevelOperators \nNumericLiteralN \nOps \nPermutation \nPrecision \nProviderService \nQuantile \nRandom \nRank \nRowVector \nRowVectorExtension \nRunningStats \nSeq \nServiceLocator \nSpecializedGenericImpl \nSummaryStats \nVector \nVectorExtension \nBigNum \nBigRational \nBigRationalLarge \nDenseMatrix\u003C\u0027T\u003E \nIFloating\u003C\u0027T\u003E \nIFractional\u003C\u0027T\u003E \nIFsiFormattable \nIIEEE\u003C\u0027T\u003E \nIIntegral\u003C\u0027T\u003E \nIMatrixFormattable \nINormFloat\u003C\u0027T\u003E \nINumeric\u003C\u0027T\u003E \nIRowVectorFormattable \nIVectorFormattable \nLinearAlgebraLAPACK \nLinearAlgebraMKL \nMatrix\u003C\u0027T\u003E \nOpsData\u003C\u0027T\u003E \nPermutation \nRank \nRowVectorDebugView\u003C\u0027T\u003E \nSparseMatrix\u003C\u0027T\u003E \nVectorDebugView\u003C\u0027T\u003E \nbignum \nmatrix \npermutation \nrowvec \nvector"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra.html","title":"FSharp.Stats.Algebra","content":"EVD \nLinearAlgebra \nLinearAlgebraManaged \nSVD \nILinearAlgebra \nLinearAlgebra"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions.html","title":"FSharp.Stats.Distributions","content":"Bandwidth \nContinuousDistribution \nDiscreteDistribution \nDistance \nEmpirical \nFrequency \nKernelDensity \nContinuousDistribution\u003C\u0027a, \u0027b\u003E \nDiscreteDistribution\u003C\u0027a, \u0027b\u003E \nDistribution\u003C\u0027a\u003E"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous.html","title":"FSharp.Stats.Distributions.Continuous","content":"Beta \nChi \nChiSquared \nExponential \nF \nGamma \nLogNormal \nMultivariateNormal \nNormal \nStudentT \nStudentizedRange \nUniform"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete.html","title":"FSharp.Stats.Distributions.Discrete","content":"Bernoulli \nBinomial \nHypergeometric \nPoisson"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting.html","title":"FSharp.Stats.Fitting","content":"CrossValidation \nGoodnessOfFit \nLinearRegression \nLogisticRegression \nNonLinearRegression \nQuantileNormalization \nSpline"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration.html","title":"FSharp.Stats.Integration","content":"Differentiation \nNumericalIntegration \nNumericalIntegrationMethod"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive.html","title":"FSharp.Stats.Interactive","content":"Formatters \nInteractiveConfig \nFormatterKernelExtension"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation.html","title":"FSharp.Stats.Interpolation","content":"Approximation \nCubicSpline \nLinearSpline \nPolynomial"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml.html","title":"FSharp.Stats.ML","content":"DistanceMetrics \nImpute \nSimilarityMetrics \nSurprisalAnalysis"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised.html","title":"FSharp.Stats.ML.Unsupervised","content":"ClusterNumber \nDbScan \nGapStatistics \nHierarchicalClustering \nIterativeClustering \nPCA"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization.html","title":"FSharp.Stats.Optimization","content":"Bisection \nBrent \nGradientDescent"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rootfinding.html","title":"FSharp.Stats.Rootfinding","content":"Brent"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal.html","title":"FSharp.Stats.Signal","content":"Baseline \nContinuousWavelet \nConvolution \nFFT \nFiltering \nNormalization \nOutliers \nPadding \nPeakDetection \nQQPlot \nWavelet \nQQPlot"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions.html","title":"FSharp.Stats.SpecialFunctions","content":"Beta \nBinomial \nErrorfunction \nFactorial \nGamma \nLogistic"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing.html","title":"FSharp.Stats.Testing","content":"Anova \nBartlett \nChiSquareTest \nCorrelation \nFTest \nFisherHotelling \nFriedmanTest \nHTest \nMultipleTesting \nOutliers \nPostHoc \nRMT \nSAM \nTTest \nTables \nTestStatistics \nWilcoxonTest \nBinaryConfusionMatrix \nComparisonMetrics \nMultiLabelConfusionMatrix"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativarrayextensionsformatrix.html","title":"NativArrayExtensionsForMatrix","content":"NativArrayExtensionsForMatrix \n \nNativArrayExtensionsForMatrix.pinObjUnscoped \npinObjUnscoped \nNativArrayExtensionsForMatrix.pinObj \npinObj \nNativArrayExtensionsForMatrix.of_vector \nof_vector \nNativArrayExtensionsForMatrix.of_rowvec \nof_rowvec \nNativArrayExtensionsForMatrix.of_matrix \nof_matrix"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativarrayextensionsformatrix.html#pinObjUnscoped","title":"NativArrayExtensionsForMatrix.pinObjUnscoped","content":"NativArrayExtensionsForMatrix.pinObjUnscoped \npinObjUnscoped \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativarrayextensionsformatrix.html#pinObj","title":"NativArrayExtensionsForMatrix.pinObj","content":"NativArrayExtensionsForMatrix.pinObj \npinObj \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativarrayextensionsformatrix.html#of_vector","title":"NativArrayExtensionsForMatrix.of_vector","content":"NativArrayExtensionsForMatrix.of_vector \nof_vector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativarrayextensionsformatrix.html#of_rowvec","title":"NativArrayExtensionsForMatrix.of_rowvec","content":"NativArrayExtensionsForMatrix.of_rowvec \nof_rowvec \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativarrayextensionsformatrix.html#of_matrix","title":"NativArrayExtensionsForMatrix.of_matrix","content":"NativArrayExtensionsForMatrix.of_matrix \nof_matrix \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeops.html","title":"NativeOps","content":"NativeOps \n \nNativeOps.pinObjUnscoped \npinObjUnscoped \nNativeOps.pinObj \npinObj"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeops.html#pinObjUnscoped","title":"NativeOps.pinObjUnscoped","content":"NativeOps.pinObjUnscoped \npinObjUnscoped \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeops.html#pinObj","title":"NativeOps.pinObj","content":"NativeOps.pinObj \npinObj \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html","title":"NativeUtilities","content":"NativeUtilities \n \nNativeUtilities.nativeArray_as_CMatrix_colvec \nnativeArray_as_CMatrix_colvec \nNativeUtilities.nativeArray_as_FortranMatrix_colvec \nnativeArray_as_FortranMatrix_colvec \nNativeUtilities.pinM \npinM \nNativeUtilities.pinV \npinV \nNativeUtilities.pinA \npinA \nNativeUtilities.pinA2 \npinA2 \nNativeUtilities.pinMV \npinMV \nNativeUtilities.pinVV \npinVV \nNativeUtilities.pinAA \npinAA \nNativeUtilities.pinMVV \npinMVV \nNativeUtilities.pinMM \npinMM \nNativeUtilities.pinMMM \npinMMM \nNativeUtilities.freeM \nfreeM \nNativeUtilities.freeV \nfreeV \nNativeUtilities.freeA \nfreeA \nNativeUtilities.freeA2 \nfreeA2 \nNativeUtilities.freeMV \nfreeMV \nNativeUtilities.freeVV \nfreeVV \nNativeUtilities.freeAA \nfreeAA \nNativeUtilities.freeMM \nfreeMM \nNativeUtilities.freeMMM \nfreeMMM \nNativeUtilities.freeMVV \nfreeMVV \nNativeUtilities.matrixDims \nmatrixDims \nNativeUtilities.matrixDim1 \nmatrixDim1 \nNativeUtilities.matrixDim2 \nmatrixDim2 \nNativeUtilities.vectorDim \nvectorDim \nNativeUtilities.assertDimensions \nassertDimensions"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#nativeArray_as_CMatrix_colvec","title":"NativeUtilities.nativeArray_as_CMatrix_colvec","content":"NativeUtilities.nativeArray_as_CMatrix_colvec \nnativeArray_as_CMatrix_colvec \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#nativeArray_as_FortranMatrix_colvec","title":"NativeUtilities.nativeArray_as_FortranMatrix_colvec","content":"NativeUtilities.nativeArray_as_FortranMatrix_colvec \nnativeArray_as_FortranMatrix_colvec \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinM","title":"NativeUtilities.pinM","content":"NativeUtilities.pinM \npinM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinV","title":"NativeUtilities.pinV","content":"NativeUtilities.pinV \npinV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinA","title":"NativeUtilities.pinA","content":"NativeUtilities.pinA \npinA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinA2","title":"NativeUtilities.pinA2","content":"NativeUtilities.pinA2 \npinA2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinMV","title":"NativeUtilities.pinMV","content":"NativeUtilities.pinMV \npinMV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinVV","title":"NativeUtilities.pinVV","content":"NativeUtilities.pinVV \npinVV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinAA","title":"NativeUtilities.pinAA","content":"NativeUtilities.pinAA \npinAA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinMVV","title":"NativeUtilities.pinMVV","content":"NativeUtilities.pinMVV \npinMVV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinMM","title":"NativeUtilities.pinMM","content":"NativeUtilities.pinMM \npinMM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#pinMMM","title":"NativeUtilities.pinMMM","content":"NativeUtilities.pinMMM \npinMMM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeM","title":"NativeUtilities.freeM","content":"NativeUtilities.freeM \nfreeM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeV","title":"NativeUtilities.freeV","content":"NativeUtilities.freeV \nfreeV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeA","title":"NativeUtilities.freeA","content":"NativeUtilities.freeA \nfreeA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeA2","title":"NativeUtilities.freeA2","content":"NativeUtilities.freeA2 \nfreeA2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeMV","title":"NativeUtilities.freeMV","content":"NativeUtilities.freeMV \nfreeMV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeVV","title":"NativeUtilities.freeVV","content":"NativeUtilities.freeVV \nfreeVV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeAA","title":"NativeUtilities.freeAA","content":"NativeUtilities.freeAA \nfreeAA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeMM","title":"NativeUtilities.freeMM","content":"NativeUtilities.freeMM \nfreeMM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeMMM","title":"NativeUtilities.freeMMM","content":"NativeUtilities.freeMMM \nfreeMMM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#freeMVV","title":"NativeUtilities.freeMVV","content":"NativeUtilities.freeMVV \nfreeMVV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#matrixDims","title":"NativeUtilities.matrixDims","content":"NativeUtilities.matrixDims \nmatrixDims \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#matrixDim1","title":"NativeUtilities.matrixDim1","content":"NativeUtilities.matrixDim1 \nmatrixDim1 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#matrixDim2","title":"NativeUtilities.matrixDim2","content":"NativeUtilities.matrixDim2 \nmatrixDim2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#vectorDim","title":"NativeUtilities.vectorDim","content":"NativeUtilities.vectorDim \nvectorDim \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativeutilities.html#assertDimensions","title":"NativeUtilities.assertDimensions","content":"NativeUtilities.assertDimensions \nassertDimensions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-refmodule.html","title":"Ref","content":"Ref \n \nRef.pin \npin"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-refmodule.html#pin","title":"Ref.pin","content":"Ref.pin \npin \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-cmatrix-1.html","title":"CMatrix\u003C\u0027T\u003E","content":"CMatrix\u003C\u0027T\u003E \n \nCMatrix\u003C\u0027T\u003E.Item \nItem \nCMatrix\u003C\u0027T\u003E.NativeTranspose \nNativeTranspose \nCMatrix\u003C\u0027T\u003E.NumCols \nNumCols \nCMatrix\u003C\u0027T\u003E.NumRows \nNumRows \nCMatrix\u003C\u0027T\u003E.Ptr \nPtr"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-cmatrix-1.html#Item","title":"CMatrix\u003C\u0027T\u003E.Item","content":"CMatrix\u003C\u0027T\u003E.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-cmatrix-1.html#NativeTranspose","title":"CMatrix\u003C\u0027T\u003E.NativeTranspose","content":"CMatrix\u003C\u0027T\u003E.NativeTranspose \nNativeTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-cmatrix-1.html#NumCols","title":"CMatrix\u003C\u0027T\u003E.NumCols","content":"CMatrix\u003C\u0027T\u003E.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-cmatrix-1.html#NumRows","title":"CMatrix\u003C\u0027T\u003E.NumRows","content":"CMatrix\u003C\u0027T\u003E.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-cmatrix-1.html#Ptr","title":"CMatrix\u003C\u0027T\u003E.Ptr","content":"CMatrix\u003C\u0027T\u003E.Ptr \nPtr \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-fortranmatrix-1.html","title":"FortranMatrix\u003C\u0027T\u003E","content":"FortranMatrix\u003C\u0027T\u003E \n \nFortranMatrix\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFortranMatrix\u003C\u0027T\u003E.Item \nItem \nFortranMatrix\u003C\u0027T\u003E.NativeTranspose \nNativeTranspose \nFortranMatrix\u003C\u0027T\u003E.NumCols \nNumCols \nFortranMatrix\u003C\u0027T\u003E.NumRows \nNumRows \nFortranMatrix\u003C\u0027T\u003E.Ptr \nPtr"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-fortranmatrix-1.html#\u0060\u0060.ctor\u0060\u0060","title":"FortranMatrix\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"FortranMatrix\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-fortranmatrix-1.html#Item","title":"FortranMatrix\u003C\u0027T\u003E.Item","content":"FortranMatrix\u003C\u0027T\u003E.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-fortranmatrix-1.html#NativeTranspose","title":"FortranMatrix\u003C\u0027T\u003E.NativeTranspose","content":"FortranMatrix\u003C\u0027T\u003E.NativeTranspose \nNativeTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-fortranmatrix-1.html#NumCols","title":"FortranMatrix\u003C\u0027T\u003E.NumCols","content":"FortranMatrix\u003C\u0027T\u003E.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-fortranmatrix-1.html#NumRows","title":"FortranMatrix\u003C\u0027T\u003E.NumRows","content":"FortranMatrix\u003C\u0027T\u003E.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-fortranmatrix-1.html#Ptr","title":"FortranMatrix\u003C\u0027T\u003E.Ptr","content":"FortranMatrix\u003C\u0027T\u003E.Ptr \nPtr \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray-1.html","title":"NativeArray\u003C\u0027T\u003E","content":"NativeArray\u003C\u0027T\u003E \n \nNativeArray\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNativeArray\u003C\u0027T\u003E.Item \nItem \nNativeArray\u003C\u0027T\u003E.Length \nLength \nNativeArray\u003C\u0027T\u003E.Ptr \nPtr"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray-1.html#\u0060\u0060.ctor\u0060\u0060","title":"NativeArray\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"NativeArray\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray-1.html#Item","title":"NativeArray\u003C\u0027T\u003E.Item","content":"NativeArray\u003C\u0027T\u003E.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray-1.html#Length","title":"NativeArray\u003C\u0027T\u003E.Length","content":"NativeArray\u003C\u0027T\u003E.Length \nLength \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray-1.html#Ptr","title":"NativeArray\u003C\u0027T\u003E.Ptr","content":"NativeArray\u003C\u0027T\u003E.Ptr \nPtr \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray2-1.html","title":"NativeArray2\u003C\u0027T\u003E","content":"NativeArray2\u003C\u0027T\u003E \n \nNativeArray2\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNativeArray2\u003C\u0027T\u003E.Item \nItem \nNativeArray2\u003C\u0027T\u003E.NativeTranspose \nNativeTranspose \nNativeArray2\u003C\u0027T\u003E.NumCols \nNumCols \nNativeArray2\u003C\u0027T\u003E.NumRows \nNumRows \nNativeArray2\u003C\u0027T\u003E.Ptr \nPtr"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray2-1.html#\u0060\u0060.ctor\u0060\u0060","title":"NativeArray2\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"NativeArray2\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray2-1.html#Item","title":"NativeArray2\u003C\u0027T\u003E.Item","content":"NativeArray2\u003C\u0027T\u003E.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray2-1.html#NativeTranspose","title":"NativeArray2\u003C\u0027T\u003E.NativeTranspose","content":"NativeArray2\u003C\u0027T\u003E.NativeTranspose \nNativeTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray2-1.html#NumCols","title":"NativeArray2\u003C\u0027T\u003E.NumCols","content":"NativeArray2\u003C\u0027T\u003E.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray2-1.html#NumRows","title":"NativeArray2\u003C\u0027T\u003E.NumRows","content":"NativeArray2\u003C\u0027T\u003E.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-nativearray2-1.html#Ptr","title":"NativeArray2\u003C\u0027T\u003E.Ptr","content":"NativeArray2\u003C\u0027T\u003E.Ptr \nPtr \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray-1.html","title":"PinnedArray\u003C\u0027T\u003E","content":"PinnedArray\u003C\u0027T\u003E \n \nPinnedArray\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nPinnedArray\u003C\u0027T\u003E.Free \nFree \nPinnedArray\u003C\u0027T\u003E.NativeArray \nNativeArray \nPinnedArray\u003C\u0027T\u003E.Length \nLength \nPinnedArray\u003C\u0027T\u003E.Ptr \nPtr \nPinnedArray\u003C\u0027T\u003E.of_array \nof_array"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray-1.html#\u0060\u0060.ctor\u0060\u0060","title":"PinnedArray\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"PinnedArray\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray-1.html#Free","title":"PinnedArray\u003C\u0027T\u003E.Free","content":"PinnedArray\u003C\u0027T\u003E.Free \nFree \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray-1.html#NativeArray","title":"PinnedArray\u003C\u0027T\u003E.NativeArray","content":"PinnedArray\u003C\u0027T\u003E.NativeArray \nNativeArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray-1.html#Length","title":"PinnedArray\u003C\u0027T\u003E.Length","content":"PinnedArray\u003C\u0027T\u003E.Length \nLength \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray-1.html#Ptr","title":"PinnedArray\u003C\u0027T\u003E.Ptr","content":"PinnedArray\u003C\u0027T\u003E.Ptr \nPtr \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray-1.html#of_array","title":"PinnedArray\u003C\u0027T\u003E.of_array","content":"PinnedArray\u003C\u0027T\u003E.of_array \nof_array \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray2-1.html","title":"PinnedArray2\u003C\u0027T\u003E","content":"PinnedArray2\u003C\u0027T\u003E \n \nPinnedArray2\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nPinnedArray2\u003C\u0027T\u003E.Free \nFree \nPinnedArray2\u003C\u0027T\u003E.NumCols \nNumCols \nPinnedArray2\u003C\u0027T\u003E.NativeArray \nNativeArray \nPinnedArray2\u003C\u0027T\u003E.NumRows \nNumRows \nPinnedArray2\u003C\u0027T\u003E.Ptr \nPtr \nPinnedArray2\u003C\u0027T\u003E.of_array2 \nof_array2 \nPinnedArray2\u003C\u0027T\u003E.of_array2D \nof_array2D"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray2-1.html#\u0060\u0060.ctor\u0060\u0060","title":"PinnedArray2\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"PinnedArray2\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray2-1.html#Free","title":"PinnedArray2\u003C\u0027T\u003E.Free","content":"PinnedArray2\u003C\u0027T\u003E.Free \nFree \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray2-1.html#NumCols","title":"PinnedArray2\u003C\u0027T\u003E.NumCols","content":"PinnedArray2\u003C\u0027T\u003E.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray2-1.html#NativeArray","title":"PinnedArray2\u003C\u0027T\u003E.NativeArray","content":"PinnedArray2\u003C\u0027T\u003E.NativeArray \nNativeArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray2-1.html#NumRows","title":"PinnedArray2\u003C\u0027T\u003E.NumRows","content":"PinnedArray2\u003C\u0027T\u003E.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray2-1.html#Ptr","title":"PinnedArray2\u003C\u0027T\u003E.Ptr","content":"PinnedArray2\u003C\u0027T\u003E.Ptr \nPtr \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray2-1.html#of_array2","title":"PinnedArray2\u003C\u0027T\u003E.of_array2","content":"PinnedArray2\u003C\u0027T\u003E.of_array2 \nof_array2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-nativeinterop-pinnedarray2-1.html#of_array2D","title":"PinnedArray2\u003C\u0027T\u003E.of_array2D","content":"PinnedArray2\u003C\u0027T\u003E.of_array2D \nof_array2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html","title":"Array","content":"Array \n\n Module to compute common statistical measure on array\n \nArray.range \nrange \nArray.swapInPlace \nswapInPlace \nArray.partitionSortInPlace \npartitionSortInPlace \nArray.quickSelectInPlaceWith \nquickSelectInPlaceWith \nArray.quickSelectInPlace \nquickSelectInPlace \nArray.quickSelect \nquickSelect \nArray.weightedMean \nweightedMean \nArray.varOf \nvarOf \nArray.weightedVariance \nweightedVariance \nArray.median \nmedian \nArray.medianAbsoluteDev \nmedianAbsoluteDev \nArray.sampleWithReplacement \nsampleWithReplacement \nArray.sampleWithOutReplacement \nsampleWithOutReplacement \nArray.shuffleFisherYates \nshuffleFisherYates \nArray.shuffleFisherYatesInPlace \nshuffleFisherYatesInPlace \nArray.seqInit \nseqInit \nArray.sort2InPlaceByKeys \nsort2InPlaceByKeys \nArray.covPopulation \ncovPopulation \nArray.covPopulationOfPairs \ncovPopulationOfPairs \nArray.covPopulationBy \ncovPopulationBy \nArray.cov \ncov \nArray.covOfPairs \ncovOfPairs \nArray.covBy \ncovBy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#range","title":"Array.range","content":"Array.range \nrange \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#swapInPlace","title":"Array.swapInPlace","content":"Array.swapInPlace \nswapInPlace \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#partitionSortInPlace","title":"Array.partitionSortInPlace","content":"Array.partitionSortInPlace \npartitionSortInPlace \n\n Arranges the items between the left and right border, that all items left of the pivot element are smaller and bigger on the right.\n Function works in place and returns the index of the pivote element (using Lomuto\u0027s partitioning algorithm)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#quickSelectInPlaceWith","title":"Array.quickSelectInPlaceWith","content":"Array.quickSelectInPlaceWith \nquickSelectInPlaceWith \n\n Finds the kth smallest element in an unordered array (note that k is ONE-based)\n Works in place and can change the order of the elements in the input array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#quickSelectInPlace","title":"Array.quickSelectInPlace","content":"Array.quickSelectInPlace \nquickSelectInPlace \n\n Finds the kth smallest element in an unordered array (note that k is ONE-based)\n Works in place and can change the order of the elements in the input array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#quickSelect","title":"Array.quickSelect","content":"Array.quickSelect \nquickSelect \n\n Finds the kth smallest element in an unordered array (note that k is ONE-based)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#weightedMean","title":"Array.weightedMean","content":"Array.weightedMean \nweightedMean \n\nOld partitionSortInPlace fails with dublicates\n Computes the Weighted Mean\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#varOf","title":"Array.varOf","content":"Array.varOf \nvarOf \n\n Computes the Variance N-1 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#weightedVariance","title":"Array.weightedVariance","content":"Array.weightedVariance \nweightedVariance \n\n Computes the Weighted Variance\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#median","title":"Array.median","content":"Array.median \nmedian \n\n Computes the sample median\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#medianAbsoluteDev","title":"Array.medianAbsoluteDev","content":"Array.medianAbsoluteDev \nmedianAbsoluteDev \n\n Median absolute deviation (MAD)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#sampleWithReplacement","title":"Array.sampleWithReplacement","content":"Array.sampleWithReplacement \nsampleWithReplacement \n\n Samples from an array of obj wit replacement (with putting back)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#sampleWithOutReplacement","title":"Array.sampleWithOutReplacement","content":"Array.sampleWithOutReplacement \nsampleWithOutReplacement \n\n Samples from an array of obj without replacement (without putting back)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#shuffleFisherYates","title":"Array.shuffleFisherYates","content":"Array.shuffleFisherYates \nshuffleFisherYates \n\n Shuffels the input array (method: Fisher-Yates)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#shuffleFisherYatesInPlace","title":"Array.shuffleFisherYatesInPlace","content":"Array.shuffleFisherYatesInPlace \nshuffleFisherYatesInPlace \n\n Shuffels the input array (method: Fisher-Yates) in place\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#seqInit","title":"Array.seqInit","content":"Array.seqInit \nseqInit \n\n Generates array sequence (like R! seq.int)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#sort2InPlaceByKeys","title":"Array.sort2InPlaceByKeys","content":"Array.sort2InPlaceByKeys \nsort2InPlaceByKeys \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#covPopulation","title":"Array.covPopulation","content":"Array.covPopulation \ncovPopulation \n\n   Computes the population covariance of two random variables\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#covPopulationOfPairs","title":"Array.covPopulationOfPairs","content":"Array.covPopulationOfPairs \ncovPopulationOfPairs \n\n   Computes the population covariance of two random variables.\n   The covariance will be calculated between the paired observations.\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#covPopulationBy","title":"Array.covPopulationBy","content":"Array.covPopulationBy \ncovPopulationBy \n\n   Computes the population covariance of two random variables generated by applying a function to the input array.\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#cov","title":"Array.cov","content":"Array.cov \ncov \n\n   Computes the sample covariance of two random variables\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#covOfPairs","title":"Array.covOfPairs","content":"Array.covOfPairs \ncovOfPairs \n\n   Computes the sample covariance of two random variables.\n   The covariance will be calculated between the paired observations.    \n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-array.html#covBy","title":"Array.covBy","content":"Array.covBy \ncovBy \n\n   Computes the sample covariance of two random variables generated by applying a function to the input array.\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html","title":"BigRationalLarge","content":"BigRationalLarge \n \nBigRationalLarge.inv \ninv \nBigRationalLarge.pown \npown \nBigRationalLarge.equal \nequal \nBigRationalLarge.lt \nlt \nBigRationalLarge.gt \ngt \nBigRationalLarge.lte \nlte \nBigRationalLarge.gte \ngte \nBigRationalLarge.ofBigInt \nofBigInt \nBigRationalLarge.ofInt \nofInt \nBigRationalLarge.of_bigint \nof_bigint \nBigRationalLarge.of_int \nof_int \nBigRationalLarge.integer \ninteger"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#inv","title":"BigRationalLarge.inv","content":"BigRationalLarge.inv \ninv \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#pown","title":"BigRationalLarge.pown","content":"BigRationalLarge.pown \npown \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#equal","title":"BigRationalLarge.equal","content":"BigRationalLarge.equal \nequal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#lt","title":"BigRationalLarge.lt","content":"BigRationalLarge.lt \nlt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#gt","title":"BigRationalLarge.gt","content":"BigRationalLarge.gt \ngt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#lte","title":"BigRationalLarge.lte","content":"BigRationalLarge.lte \nlte \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#gte","title":"BigRationalLarge.gte","content":"BigRationalLarge.gte \ngte \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#ofBigInt","title":"BigRationalLarge.ofBigInt","content":"BigRationalLarge.ofBigInt \nofBigInt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#ofInt","title":"BigRationalLarge.ofInt","content":"BigRationalLarge.ofInt \nofInt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#of_bigint","title":"BigRationalLarge.of_bigint","content":"BigRationalLarge.of_bigint \nof_bigint \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#of_int","title":"BigRationalLarge.of_int","content":"BigRationalLarge.of_int \nof_int \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargemodule.html#integer","title":"BigRationalLarge.integer","content":"BigRationalLarge.integer \ninteger \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargeimpl.html","title":"BigRationalLargeImpl","content":"BigRationalLargeImpl \n \nBigRationalLargeImpl.ZeroI \nZeroI \nBigRationalLargeImpl.OneI \nOneI \nBigRationalLargeImpl.bigint \nbigint \nBigRationalLargeImpl.ToDoubleI \nToDoubleI \nBigRationalLargeImpl.ToInt32I \nToInt32I"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargeimpl.html#ZeroI","title":"BigRationalLargeImpl.ZeroI","content":"BigRationalLargeImpl.ZeroI \nZeroI \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargeimpl.html#OneI","title":"BigRationalLargeImpl.OneI","content":"BigRationalLargeImpl.OneI \nOneI \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargeimpl.html#bigint","title":"BigRationalLargeImpl.bigint","content":"BigRationalLargeImpl.bigint \nbigint \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargeimpl.html#ToDoubleI","title":"BigRationalLargeImpl.ToDoubleI","content":"BigRationalLargeImpl.ToDoubleI \nToDoubleI \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallargeimpl.html#ToInt32I","title":"BigRationalLargeImpl.ToInt32I","content":"BigRationalLargeImpl.ToInt32I \nToInt32I \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-blasstubs.html","title":"BlasStubs","content":"BlasStubs \n \nBlasStubs.dgemm_ \ndgemm_"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-blasstubs.html#dgemm_","title":"BlasStubs.dgemm_","content":"BlasStubs.dgemm_ \ndgemm_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-confidenceinterval.html","title":"ConfidenceInterval","content":"ConfidenceInterval \n \nConfidenceInterval.ciDeviation \nciDeviation \nConfidenceInterval.ci \nci"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-confidenceinterval.html#ciDeviation","title":"ConfidenceInterval.ciDeviation","content":"ConfidenceInterval.ciDeviation \nciDeviation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-confidenceinterval.html#ci","title":"ConfidenceInterval.ci","content":"ConfidenceInterval.ci \nci \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation.html","title":"Correlation","content":"Correlation \n\n Contains correlation functions for different data types \n \nCorrelation.Matrix \nMatrix \nCorrelation.Seq \nSeq \nCorrelation.Vector \nVector"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-matrix.html","title":"Matrix","content":"Matrix \n\n Contains correlation functions optimized for matrices\n \nMatrix.rv2 \nrv2 \nMatrix.rowWiseCorrelationMatrix \nrowWiseCorrelationMatrix \nMatrix.columnWiseCorrelationMatrix \ncolumnWiseCorrelationMatrix \nMatrix.rowWisePearson \nrowWisePearson \nMatrix.columnWisePearson \ncolumnWisePearson \nMatrix.rowWiseBicor \nrowWiseBicor \nMatrix.columnWiseBicor \ncolumnWiseBicor"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-matrix.html#rv2","title":"Matrix.rv2","content":"Matrix.rv2 \nrv2 \n\n Computes the rv2 coefficient.  \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-matrix.html#rowWiseCorrelationMatrix","title":"Matrix.rowWiseCorrelationMatrix","content":"Matrix.rowWiseCorrelationMatrix \nrowWiseCorrelationMatrix \n\ncomputes a matrix that contains the metric given by the corrFunction parameter applied rowwise for every row against every other row of the input matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-matrix.html#columnWiseCorrelationMatrix","title":"Matrix.columnWiseCorrelationMatrix","content":"Matrix.columnWiseCorrelationMatrix \ncolumnWiseCorrelationMatrix \n\ncomputes a matrix that contains the metric given by the corrFunction parameter applied columnwise for every column against every other column of the input matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-matrix.html#rowWisePearson","title":"Matrix.rowWisePearson","content":"Matrix.rowWisePearson \nrowWisePearson \n\ncomputes the rowwise pearson correlation matrix for the input matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-matrix.html#columnWisePearson","title":"Matrix.columnWisePearson","content":"Matrix.columnWisePearson \ncolumnWisePearson \n\ncomputes the columnwise pearson correlation matrix for the input matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-matrix.html#rowWiseBicor","title":"Matrix.rowWiseBicor","content":"Matrix.rowWiseBicor \nrowWiseBicor \n\n Computes the rowwise biweighted midcorrelation matrix for the input matrix \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-matrix.html#columnWiseBicor","title":"Matrix.columnWiseBicor","content":"Matrix.columnWiseBicor \ncolumnWiseBicor \n\n Computes the columnwise biweighted midcorrelation matrix for the input matrix \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html","title":"Seq","content":"Seq \n\n Contains correlation functions optimized for sequences\n \nSeq.pearson \npearson \nSeq.pearsonOfPairs \npearsonOfPairs \nSeq.pearsonBy \npearsonBy \nSeq.pearsonWeighted \npearsonWeighted \nSeq.pearsonWeightedOfTriples \npearsonWeightedOfTriples \nSeq.pearsonWeightedBy \npearsonWeightedBy \nSeq.spearman \nspearman \nSeq.spearmanOfPairs \nspearmanOfPairs \nSeq.spearmanBy \nspearmanBy \nSeq.kendall \nkendall \nSeq.kendallOfPairs \nkendallOfPairs \nSeq.kendallBy \nkendallBy \nSeq.bicor \nbicor \nSeq.bicorOfPairs \nbicorOfPairs \nSeq.bicorBy \nbicorBy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#pearson","title":"Seq.pearson","content":"Seq.pearson \npearson \n\n Calculates the pearson correlation of two samples. Homoscedasticity must be assumed.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#pearsonOfPairs","title":"Seq.pearsonOfPairs","content":"Seq.pearsonOfPairs \npearsonOfPairs \n\n Calculates the pearson correlation of two samples given as a sequence of paired values. \n Homoscedasticity must be assumed.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#pearsonBy","title":"Seq.pearsonBy","content":"Seq.pearsonBy \npearsonBy \n\n Calculates the pearson correlation of two samples.\n The two samples are built by applying the given function to each element of the sequence.\n The function should transform each sequence element into a tuple of paired observations from the two samples.\n The correlation will be calculated between the paired observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#pearsonWeighted","title":"Seq.pearsonWeighted","content":"Seq.pearsonWeighted \npearsonWeighted \n\n weighted pearson correlation (http://sci.tech-archive.net/Archive/sci.stat.math/2006-02/msg00171.html)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#pearsonWeightedOfTriples","title":"Seq.pearsonWeightedOfTriples","content":"Seq.pearsonWeightedOfTriples \npearsonWeightedOfTriples \n\n Calculates the weighted pearson correlation of two samples. \n If the two samples are \u003Ccode\u003Ex\u003C/code\u003E and \u003Ccode\u003Ey\u003C/code\u003E then the elements of the input sequence should be triples of \u003Ccode\u003Ex * y * weight\u003C/code\u003E.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#pearsonWeightedBy","title":"Seq.pearsonWeightedBy","content":"Seq.pearsonWeightedBy \npearsonWeightedBy \n\n Calculates the weighted pearson correlation of two samples after \n applying the given function to each element of the sequence.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#spearman","title":"Seq.spearman","content":"Seq.spearman \nspearman \n\n Spearman Correlation (with ranks)\n \n Items that are tied are each allocated the average of the ranks that\n they would have had had they been distinguishable.\n \n Reference: Williams R.B.G. (1986) Spearman\u2019s and Kendall\u2019s Coefficients of Rank Correlation. \n Intermediate Statistics for Geographers and Earth Scientists, p453, https://doi.org/10.1007/978-1-349-06813-5_6\n \u003C/summary\u003E\n \u003Creturns\u003EThe spearman correlation.\u003C/returns\u003E\n \u003Cexample\u003E\n \u003Ccode\u003E\n let x = [5.05;6.75;3.21;2.66]\n let y = [1.65;2.64;2.64;6.95]\n \n // To get the correlation between x and y:\n Seq.spearman x y // evaluates to -0.632455532\n \u003C/code\u003E\n \u003C/example\u003E\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#spearmanOfPairs","title":"Seq.spearmanOfPairs","content":"Seq.spearmanOfPairs \nspearmanOfPairs \n\n Calculates the spearman correlation (with ranks) of two samples given as a sequence of paired values. \n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#spearmanBy","title":"Seq.spearmanBy","content":"Seq.spearmanBy \nspearmanBy \n\n Calculates the spearman correlation of two samples.\n The two samples are built by applying the given function to each element of the sequence.\n The function should transform each sequence element into a tuple of paired observations from the two samples.\n The correlation will be calculated between the paired observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#kendall","title":"Seq.kendall","content":"Seq.kendall \nkendall \n\n Kendall Correlation Coefficient \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#kendallOfPairs","title":"Seq.kendallOfPairs","content":"Seq.kendallOfPairs \nkendallOfPairs \n\n Calculates the kendall correlation coefficient of two samples given as a sequence of paired values. \n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#kendallBy","title":"Seq.kendallBy","content":"Seq.kendallBy \nkendallBy \n\n Calculates the kendall correlation of two samples.\n The two samples are built by applying the given function to each element of the sequence.\n The function should transform each sequence element into a tuple of paired observations from the two samples.\n The correlation will be calculated between the paired observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#bicor","title":"Seq.bicor","content":"Seq.bicor \nbicor \n\n Biweighted Midcorrelation. This is a median based correlation measure which is more robust against outliers.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#bicorOfPairs","title":"Seq.bicorOfPairs","content":"Seq.bicorOfPairs \nbicorOfPairs \n\n Calculates the Biweighted Midcorrelation of two samples given as a sequence of paired values. \n This is a median based correlation measure which is more robust against outliers.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-seq.html#bicorBy","title":"Seq.bicorBy","content":"Seq.bicorBy \nbicorBy \n\n Calculates the bicor correlation of two samples.\n The two samples are built by applying the given function to each element of the sequence.\n The function should transform each sequence element into a tuple of paired observations from the two samples.\n The correlation will be calculated between the paired observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-vector.html","title":"Vector","content":"Vector \n\n Contains correlation functions optimized for vectors\n \nVector.correlationOf \ncorrelationOf \nVector.autoCorrelation \nautoCorrelation \nVector.autoCovariance \nautoCovariance \nVector.normalizedXCorr \nnormalizedXCorr \nVector.xCorr \nxCorr \nVector.bicor \nbicor"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-vector.html#correlationOf","title":"Vector.correlationOf","content":"Vector.correlationOf \ncorrelationOf \n\n computes the sample correlation of two signal at a given lag.\n was tested in comparison to: https://www.wessa.net/rwasp_autocorrelation.wasp\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-vector.html#autoCorrelation","title":"Vector.autoCorrelation","content":"Vector.autoCorrelation \nautoCorrelation \n\n computes the sample auto correlation (using pearson correlation) of a signal at a given lag.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-vector.html#autoCovariance","title":"Vector.autoCovariance","content":"Vector.autoCovariance \nautoCovariance \n\n computes the sample auto corvariance of a signal at a given lag.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-vector.html#normalizedXCorr","title":"Vector.normalizedXCorr","content":"Vector.normalizedXCorr \nnormalizedXCorr \n\n computes the normalized (using pearson correlation) cross-correlation of signals v1 and v2 at a given lag.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-vector.html#xCorr","title":"Vector.xCorr","content":"Vector.xCorr \nxCorr \n\n computes the unnormalized (using only the dot product) cross-correlation of signals v1 and v2 at a given lag.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-correlation-vector.html#bicor","title":"Vector.bicor","content":"Vector.bicor \nbicor \n\n Biweighted Midcorrelation. This is a median based correlation measure which is more robust against outliers.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics.html","title":"DistanceMetrics","content":"DistanceMetrics \n\nFunctions for computing distances of elements or sets\n \nDistanceMetrics.Array \nArray \nDistanceMetrics.Vector \nVector \nDistanceMetrics.Distance\u003C\u0027a\u003E \nDistance\u003C\u0027a\u003E \nDistanceMetrics.euclidean \neuclidean \nDistanceMetrics.euclideanNaN \neuclideanNaN \nDistanceMetrics.euclideanNaNSquared \neuclideanNaNSquared \nDistanceMetrics.cityblock \ncityblock \nDistanceMetrics.cityblockNaN \ncityblockNaN \nDistanceMetrics.dissimilarity \ndissimilarity \nDistanceMetrics.wagnerFischerLazy \nwagnerFischerLazy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics.html#euclidean","title":"DistanceMetrics.euclidean","content":"DistanceMetrics.euclidean \neuclidean \n\n Euclidean distance of two coordinate sequences\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics.html#euclideanNaN","title":"DistanceMetrics.euclideanNaN","content":"DistanceMetrics.euclideanNaN \neuclideanNaN \n\n Euclidean distance of two coordinate float sequences (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics.html#euclideanNaNSquared","title":"DistanceMetrics.euclideanNaNSquared","content":"DistanceMetrics.euclideanNaNSquared \neuclideanNaNSquared \n\n Squared Euclidean distance of two coordinate float sequences (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics.html#cityblock","title":"DistanceMetrics.cityblock","content":"DistanceMetrics.cityblock \ncityblock \n\n Cityblock distance of two coordinate float sequences\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics.html#cityblockNaN","title":"DistanceMetrics.cityblockNaN","content":"DistanceMetrics.cityblockNaN \ncityblockNaN \n\n Cityblock distance of two coordinate float sequences\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics.html#dissimilarity","title":"DistanceMetrics.dissimilarity","content":"DistanceMetrics.dissimilarity \ndissimilarity \n\n \u0022Dissimilarity\u0022 uses 1. - pearsons correlation coefficient \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics.html#wagnerFischerLazy","title":"DistanceMetrics.wagnerFischerLazy","content":"DistanceMetrics.wagnerFischerLazy \nwagnerFischerLazy \n\n Levenshtein distance between\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-array.html","title":"Array","content":"Array \n \nArray.euclidean \neuclidean \nArray.euclideanNaN \neuclideanNaN \nArray.euclideanNaNSquared \neuclideanNaNSquared \nArray.cityblock \ncityblock \nArray.cityblockNaN \ncityblockNaN"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-array.html#euclidean","title":"Array.euclidean","content":"Array.euclidean \neuclidean \n\n Euclidean distance of two coordinate arrays\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-array.html#euclideanNaN","title":"Array.euclideanNaN","content":"Array.euclideanNaN \neuclideanNaN \n\n Euclidean distance of two coordinate float arrays (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-array.html#euclideanNaNSquared","title":"Array.euclideanNaNSquared","content":"Array.euclideanNaNSquared \neuclideanNaNSquared \n\n Squared Euclidean distance of two coordinate float arrays (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-array.html#cityblock","title":"Array.cityblock","content":"Array.cityblock \ncityblock \n\n Cityblock distance of two coordinate arrays\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-array.html#cityblockNaN","title":"Array.cityblockNaN","content":"Array.cityblockNaN \ncityblockNaN \n\n Cityblock distance of two coordinate float arrays (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-vector.html","title":"Vector","content":"Vector \n \nVector.euclidean \neuclidean \nVector.euclideanSquared \neuclideanSquared \nVector.euclideanNaN \neuclideanNaN \nVector.cityblock \ncityblock \nVector.cityblockNaN \ncityblockNaN"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-vector.html#euclidean","title":"Vector.euclidean","content":"Vector.euclidean \neuclidean \n\n Euclidean distance between 2 vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-vector.html#euclideanSquared","title":"Vector.euclideanSquared","content":"Vector.euclideanSquared \neuclideanSquared \n\n Squared Euclidean distance between 2 vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-vector.html#euclideanNaN","title":"Vector.euclideanNaN","content":"Vector.euclideanNaN \neuclideanNaN \n\n Euclidean distance between 2 vectors (ignores nan) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-vector.html#cityblock","title":"Vector.cityblock","content":"Vector.cityblock \ncityblock \n\n Cityblock distance of two vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-vector.html#cityblockNaN","title":"Vector.cityblockNaN","content":"Vector.cityblockNaN \ncityblockNaN \n\n Cityblock distance of two vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distancemetrics-distance-1.html","title":"Distance\u003C\u0027a\u003E","content":"Distance\u003C\u0027a\u003E \n\n Signiture type for distance functions\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html","title":"DoubleImpl","content":"DoubleImpl \n\n Implementations of operations specific to floating point types\n \nDoubleImpl.dmatrix \ndmatrix \nDoubleImpl.rowvec \nrowvec \nDoubleImpl.smatrix \nsmatrix \nDoubleImpl.vector \nvector \nDoubleImpl.zero \nzero \nDoubleImpl.one \none \nDoubleImpl.sub \nsub \nDoubleImpl.add \nadd \nDoubleImpl.mul \nmul \nDoubleImpl.neg \nneg \nDoubleImpl.FloatOps \nFloatOps \nDoubleImpl.initDenseMatrixDS \ninitDenseMatrixDS \nDoubleImpl.createRowVecDS \ncreateRowVecDS \nDoubleImpl.createVecDS \ncreateVecDS \nDoubleImpl.mkDenseMatrixDS \nmkDenseMatrixDS \nDoubleImpl.mkRowVecDS \nmkRowVecDS \nDoubleImpl.mkVecDS \nmkVecDS \nDoubleImpl.listDenseMatrixDS \nlistDenseMatrixDS \nDoubleImpl.colListDenseMatrixDS \ncolListDenseMatrixDS \nDoubleImpl.listRowVecDS \nlistRowVecDS \nDoubleImpl.listVecDS \nlistVecDS \nDoubleImpl.seqDenseMatrixDS \nseqDenseMatrixDS \nDoubleImpl.colSeqDenseMatrixDS \ncolSeqDenseMatrixDS \nDoubleImpl.arrayDenseMatrixDS \narrayDenseMatrixDS \nDoubleImpl.colArrayDenseMatrixDS \ncolArrayDenseMatrixDS \nDoubleImpl.seqRowVecDS \nseqRowVecDS \nDoubleImpl.seqVecDS \nseqVecDS \nDoubleImpl.constDenseMatrixDS \nconstDenseMatrixDS \nDoubleImpl.constRowVecDS \nconstRowVecDS \nDoubleImpl.constVecDS \nconstVecDS \nDoubleImpl.scalarDenseMatrixDS \nscalarDenseMatrixDS \nDoubleImpl.scalarRowVecDS \nscalarRowVecDS \nDoubleImpl.scalarVecDS \nscalarVecDS \nDoubleImpl.zeroDenseMatrixDS \nzeroDenseMatrixDS \nDoubleImpl.addDenseMatrixDS \naddDenseMatrixDS \nDoubleImpl.addSparseDS \naddSparseDS \nDoubleImpl.addRowVecDS \naddRowVecDS \nDoubleImpl.addVecDS \naddVecDS \nDoubleImpl.subDenseMatrixDS \nsubDenseMatrixDS \nDoubleImpl.subSparseDS \nsubSparseDS \nDoubleImpl.mulSparseDS \nmulSparseDS \nDoubleImpl.subRowVecDS \nsubRowVecDS \nDoubleImpl.subVecDS \nsubVecDS \nDoubleImpl.cptMulDenseMatrixDS \ncptMulDenseMatrixDS \nDoubleImpl.cptMulSparseDS \ncptMulSparseDS \nDoubleImpl.cptMulRowVecDS \ncptMulRowVecDS \nDoubleImpl.cptMulVecDS \ncptMulVecDS \nDoubleImpl.cptMaxDenseMatrixDS \ncptMaxDenseMatrixDS \nDoubleImpl.cptMinDenseMatrixDS \ncptMinDenseMatrixDS \nDoubleImpl.cptMaxSparseDS \ncptMaxSparseDS \nDoubleImpl.cptMinSparseDS \ncptMinSparseDS \nDoubleImpl.cptMaxVecDS \ncptMaxVecDS \nDoubleImpl.cptMinVecDS \ncptMinVecDS \nDoubleImpl.mulDenseMatrixDS \nmulDenseMatrixDS \nDoubleImpl.mulRowVecDenseMatrixDS \nmulRowVecDenseMatrixDS \nDoubleImpl.mulDenseMatrixVecDS \nmulDenseMatrixVecDS \nDoubleImpl.mulRowVecVecDS \nmulRowVecVecDS \nDoubleImpl.rowvecDenseMatrixDS \nrowvecDenseMatrixDS \nDoubleImpl.vectorDenseMatrixDS \nvectorDenseMatrixDS \nDoubleImpl.mulVecRowVecDS \nmulVecRowVecDS \nDoubleImpl.scaleDenseMatrixDS \nscaleDenseMatrixDS \nDoubleImpl.scaleSparseDS \nscaleSparseDS \nDoubleImpl.scaleRowVecDS \nscaleRowVecDS \nDoubleImpl.scaleVecDS \nscaleVecDS \nDoubleImpl.addScalarDenseMatrixDS \naddScalarDenseMatrixDS \nDoubleImpl.addScalarSparseDS \naddScalarSparseDS \nDoubleImpl.addScalarRowVecDS \naddScalarRowVecDS \nDoubleImpl.addScalarVecDS \naddScalarVecDS \nDoubleImpl.subScalarDenseMatrixDS \nsubScalarDenseMatrixDS \nDoubleImpl.subScalarSparseDS \nsubScalarSparseDS \nDoubleImpl.subScalarRowVecDS \nsubScalarRowVecDS \nDoubleImpl.subScalarVecDS \nsubScalarVecDS \nDoubleImpl.negDenseMatrixDS \nnegDenseMatrixDS \nDoubleImpl.negSparseDS \nnegSparseDS \nDoubleImpl.negRowVecDS \nnegRowVecDS \nDoubleImpl.negVecDS \nnegVecDS \nDoubleImpl.traceDenseMatrixDS \ntraceDenseMatrixDS \nDoubleImpl.sumDenseMatrixDS \nsumDenseMatrixDS \nDoubleImpl.sumVecDS \nsumVecDS \nDoubleImpl.prodDenseMatrixDS \nprodDenseMatrixDS \nDoubleImpl.prodVecDS \nprodVecDS \nDoubleImpl.dotDenseMatrixDS \ndotDenseMatrixDS \nDoubleImpl.dotVecDS \ndotVecDS \nDoubleImpl.sumfDenseMatrixDS \nsumfDenseMatrixDS \nDoubleImpl.normDenseMatrixDS \nnormDenseMatrixDS \nDoubleImpl.inplaceAddDenseMatrixDS \ninplaceAddDenseMatrixDS \nDoubleImpl.inplaceAddVecDS \ninplaceAddVecDS \nDoubleImpl.inplace_addRowVecDS \ninplace_addRowVecDS \nDoubleImpl.inplaceSubDenseMatrixDS \ninplaceSubDenseMatrixDS \nDoubleImpl.inplaceSubVecDS \ninplaceSubVecDS \nDoubleImpl.inplace_subRowVecDS \ninplace_subRowVecDS \nDoubleImpl.inplaceCptMulDenseMatrixDS \ninplaceCptMulDenseMatrixDS \nDoubleImpl.inplaceCptMulVecDS \ninplaceCptMulVecDS \nDoubleImpl.inplace_cptMulRowVecDS \ninplace_cptMulRowVecDS \nDoubleImpl.inplaceScaleDenseMatrixDS \ninplaceScaleDenseMatrixDS \nDoubleImpl.inplaceScaleVecDS \ninplaceScaleVecDS \nDoubleImpl.inplace_scaleRowVecDS \ninplace_scaleRowVecDS"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#zero","title":"DoubleImpl.zero","content":"DoubleImpl.zero \nzero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#one","title":"DoubleImpl.one","content":"DoubleImpl.one \none \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#sub","title":"DoubleImpl.sub","content":"DoubleImpl.sub \nsub \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#add","title":"DoubleImpl.add","content":"DoubleImpl.add \nadd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mul","title":"DoubleImpl.mul","content":"DoubleImpl.mul \nmul \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#neg","title":"DoubleImpl.neg","content":"DoubleImpl.neg \nneg \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#FloatOps","title":"DoubleImpl.FloatOps","content":"DoubleImpl.FloatOps \nFloatOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#initDenseMatrixDS","title":"DoubleImpl.initDenseMatrixDS","content":"DoubleImpl.initDenseMatrixDS \ninitDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#createRowVecDS","title":"DoubleImpl.createRowVecDS","content":"DoubleImpl.createRowVecDS \ncreateRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#createVecDS","title":"DoubleImpl.createVecDS","content":"DoubleImpl.createVecDS \ncreateVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mkDenseMatrixDS","title":"DoubleImpl.mkDenseMatrixDS","content":"DoubleImpl.mkDenseMatrixDS \nmkDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mkRowVecDS","title":"DoubleImpl.mkRowVecDS","content":"DoubleImpl.mkRowVecDS \nmkRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mkVecDS","title":"DoubleImpl.mkVecDS","content":"DoubleImpl.mkVecDS \nmkVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#listDenseMatrixDS","title":"DoubleImpl.listDenseMatrixDS","content":"DoubleImpl.listDenseMatrixDS \nlistDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#colListDenseMatrixDS","title":"DoubleImpl.colListDenseMatrixDS","content":"DoubleImpl.colListDenseMatrixDS \ncolListDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#listRowVecDS","title":"DoubleImpl.listRowVecDS","content":"DoubleImpl.listRowVecDS \nlistRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#listVecDS","title":"DoubleImpl.listVecDS","content":"DoubleImpl.listVecDS \nlistVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#seqDenseMatrixDS","title":"DoubleImpl.seqDenseMatrixDS","content":"DoubleImpl.seqDenseMatrixDS \nseqDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#colSeqDenseMatrixDS","title":"DoubleImpl.colSeqDenseMatrixDS","content":"DoubleImpl.colSeqDenseMatrixDS \ncolSeqDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#arrayDenseMatrixDS","title":"DoubleImpl.arrayDenseMatrixDS","content":"DoubleImpl.arrayDenseMatrixDS \narrayDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#colArrayDenseMatrixDS","title":"DoubleImpl.colArrayDenseMatrixDS","content":"DoubleImpl.colArrayDenseMatrixDS \ncolArrayDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#seqRowVecDS","title":"DoubleImpl.seqRowVecDS","content":"DoubleImpl.seqRowVecDS \nseqRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#seqVecDS","title":"DoubleImpl.seqVecDS","content":"DoubleImpl.seqVecDS \nseqVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#constDenseMatrixDS","title":"DoubleImpl.constDenseMatrixDS","content":"DoubleImpl.constDenseMatrixDS \nconstDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#constRowVecDS","title":"DoubleImpl.constRowVecDS","content":"DoubleImpl.constRowVecDS \nconstRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#constVecDS","title":"DoubleImpl.constVecDS","content":"DoubleImpl.constVecDS \nconstVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#scalarDenseMatrixDS","title":"DoubleImpl.scalarDenseMatrixDS","content":"DoubleImpl.scalarDenseMatrixDS \nscalarDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#scalarRowVecDS","title":"DoubleImpl.scalarRowVecDS","content":"DoubleImpl.scalarRowVecDS \nscalarRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#scalarVecDS","title":"DoubleImpl.scalarVecDS","content":"DoubleImpl.scalarVecDS \nscalarVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#zeroDenseMatrixDS","title":"DoubleImpl.zeroDenseMatrixDS","content":"DoubleImpl.zeroDenseMatrixDS \nzeroDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#addDenseMatrixDS","title":"DoubleImpl.addDenseMatrixDS","content":"DoubleImpl.addDenseMatrixDS \naddDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#addSparseDS","title":"DoubleImpl.addSparseDS","content":"DoubleImpl.addSparseDS \naddSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#addRowVecDS","title":"DoubleImpl.addRowVecDS","content":"DoubleImpl.addRowVecDS \naddRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#addVecDS","title":"DoubleImpl.addVecDS","content":"DoubleImpl.addVecDS \naddVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#subDenseMatrixDS","title":"DoubleImpl.subDenseMatrixDS","content":"DoubleImpl.subDenseMatrixDS \nsubDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#subSparseDS","title":"DoubleImpl.subSparseDS","content":"DoubleImpl.subSparseDS \nsubSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mulSparseDS","title":"DoubleImpl.mulSparseDS","content":"DoubleImpl.mulSparseDS \nmulSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#subRowVecDS","title":"DoubleImpl.subRowVecDS","content":"DoubleImpl.subRowVecDS \nsubRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#subVecDS","title":"DoubleImpl.subVecDS","content":"DoubleImpl.subVecDS \nsubVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMulDenseMatrixDS","title":"DoubleImpl.cptMulDenseMatrixDS","content":"DoubleImpl.cptMulDenseMatrixDS \ncptMulDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMulSparseDS","title":"DoubleImpl.cptMulSparseDS","content":"DoubleImpl.cptMulSparseDS \ncptMulSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMulRowVecDS","title":"DoubleImpl.cptMulRowVecDS","content":"DoubleImpl.cptMulRowVecDS \ncptMulRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMulVecDS","title":"DoubleImpl.cptMulVecDS","content":"DoubleImpl.cptMulVecDS \ncptMulVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMaxDenseMatrixDS","title":"DoubleImpl.cptMaxDenseMatrixDS","content":"DoubleImpl.cptMaxDenseMatrixDS \ncptMaxDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMinDenseMatrixDS","title":"DoubleImpl.cptMinDenseMatrixDS","content":"DoubleImpl.cptMinDenseMatrixDS \ncptMinDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMaxSparseDS","title":"DoubleImpl.cptMaxSparseDS","content":"DoubleImpl.cptMaxSparseDS \ncptMaxSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMinSparseDS","title":"DoubleImpl.cptMinSparseDS","content":"DoubleImpl.cptMinSparseDS \ncptMinSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMaxVecDS","title":"DoubleImpl.cptMaxVecDS","content":"DoubleImpl.cptMaxVecDS \ncptMaxVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#cptMinVecDS","title":"DoubleImpl.cptMinVecDS","content":"DoubleImpl.cptMinVecDS \ncptMinVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mulDenseMatrixDS","title":"DoubleImpl.mulDenseMatrixDS","content":"DoubleImpl.mulDenseMatrixDS \nmulDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mulRowVecDenseMatrixDS","title":"DoubleImpl.mulRowVecDenseMatrixDS","content":"DoubleImpl.mulRowVecDenseMatrixDS \nmulRowVecDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mulDenseMatrixVecDS","title":"DoubleImpl.mulDenseMatrixVecDS","content":"DoubleImpl.mulDenseMatrixVecDS \nmulDenseMatrixVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mulRowVecVecDS","title":"DoubleImpl.mulRowVecVecDS","content":"DoubleImpl.mulRowVecVecDS \nmulRowVecVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#rowvecDenseMatrixDS","title":"DoubleImpl.rowvecDenseMatrixDS","content":"DoubleImpl.rowvecDenseMatrixDS \nrowvecDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#vectorDenseMatrixDS","title":"DoubleImpl.vectorDenseMatrixDS","content":"DoubleImpl.vectorDenseMatrixDS \nvectorDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#mulVecRowVecDS","title":"DoubleImpl.mulVecRowVecDS","content":"DoubleImpl.mulVecRowVecDS \nmulVecRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#scaleDenseMatrixDS","title":"DoubleImpl.scaleDenseMatrixDS","content":"DoubleImpl.scaleDenseMatrixDS \nscaleDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#scaleSparseDS","title":"DoubleImpl.scaleSparseDS","content":"DoubleImpl.scaleSparseDS \nscaleSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#scaleRowVecDS","title":"DoubleImpl.scaleRowVecDS","content":"DoubleImpl.scaleRowVecDS \nscaleRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#scaleVecDS","title":"DoubleImpl.scaleVecDS","content":"DoubleImpl.scaleVecDS \nscaleVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#addScalarDenseMatrixDS","title":"DoubleImpl.addScalarDenseMatrixDS","content":"DoubleImpl.addScalarDenseMatrixDS \naddScalarDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#addScalarSparseDS","title":"DoubleImpl.addScalarSparseDS","content":"DoubleImpl.addScalarSparseDS \naddScalarSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#addScalarRowVecDS","title":"DoubleImpl.addScalarRowVecDS","content":"DoubleImpl.addScalarRowVecDS \naddScalarRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#addScalarVecDS","title":"DoubleImpl.addScalarVecDS","content":"DoubleImpl.addScalarVecDS \naddScalarVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#subScalarDenseMatrixDS","title":"DoubleImpl.subScalarDenseMatrixDS","content":"DoubleImpl.subScalarDenseMatrixDS \nsubScalarDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#subScalarSparseDS","title":"DoubleImpl.subScalarSparseDS","content":"DoubleImpl.subScalarSparseDS \nsubScalarSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#subScalarRowVecDS","title":"DoubleImpl.subScalarRowVecDS","content":"DoubleImpl.subScalarRowVecDS \nsubScalarRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#subScalarVecDS","title":"DoubleImpl.subScalarVecDS","content":"DoubleImpl.subScalarVecDS \nsubScalarVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#negDenseMatrixDS","title":"DoubleImpl.negDenseMatrixDS","content":"DoubleImpl.negDenseMatrixDS \nnegDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#negSparseDS","title":"DoubleImpl.negSparseDS","content":"DoubleImpl.negSparseDS \nnegSparseDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#negRowVecDS","title":"DoubleImpl.negRowVecDS","content":"DoubleImpl.negRowVecDS \nnegRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#negVecDS","title":"DoubleImpl.negVecDS","content":"DoubleImpl.negVecDS \nnegVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#traceDenseMatrixDS","title":"DoubleImpl.traceDenseMatrixDS","content":"DoubleImpl.traceDenseMatrixDS \ntraceDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#sumDenseMatrixDS","title":"DoubleImpl.sumDenseMatrixDS","content":"DoubleImpl.sumDenseMatrixDS \nsumDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#sumVecDS","title":"DoubleImpl.sumVecDS","content":"DoubleImpl.sumVecDS \nsumVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#prodDenseMatrixDS","title":"DoubleImpl.prodDenseMatrixDS","content":"DoubleImpl.prodDenseMatrixDS \nprodDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#prodVecDS","title":"DoubleImpl.prodVecDS","content":"DoubleImpl.prodVecDS \nprodVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#dotDenseMatrixDS","title":"DoubleImpl.dotDenseMatrixDS","content":"DoubleImpl.dotDenseMatrixDS \ndotDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#dotVecDS","title":"DoubleImpl.dotVecDS","content":"DoubleImpl.dotVecDS \ndotVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#sumfDenseMatrixDS","title":"DoubleImpl.sumfDenseMatrixDS","content":"DoubleImpl.sumfDenseMatrixDS \nsumfDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#normDenseMatrixDS","title":"DoubleImpl.normDenseMatrixDS","content":"DoubleImpl.normDenseMatrixDS \nnormDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplaceAddDenseMatrixDS","title":"DoubleImpl.inplaceAddDenseMatrixDS","content":"DoubleImpl.inplaceAddDenseMatrixDS \ninplaceAddDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplaceAddVecDS","title":"DoubleImpl.inplaceAddVecDS","content":"DoubleImpl.inplaceAddVecDS \ninplaceAddVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplace_addRowVecDS","title":"DoubleImpl.inplace_addRowVecDS","content":"DoubleImpl.inplace_addRowVecDS \ninplace_addRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplaceSubDenseMatrixDS","title":"DoubleImpl.inplaceSubDenseMatrixDS","content":"DoubleImpl.inplaceSubDenseMatrixDS \ninplaceSubDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplaceSubVecDS","title":"DoubleImpl.inplaceSubVecDS","content":"DoubleImpl.inplaceSubVecDS \ninplaceSubVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplace_subRowVecDS","title":"DoubleImpl.inplace_subRowVecDS","content":"DoubleImpl.inplace_subRowVecDS \ninplace_subRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplaceCptMulDenseMatrixDS","title":"DoubleImpl.inplaceCptMulDenseMatrixDS","content":"DoubleImpl.inplaceCptMulDenseMatrixDS \ninplaceCptMulDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplaceCptMulVecDS","title":"DoubleImpl.inplaceCptMulVecDS","content":"DoubleImpl.inplaceCptMulVecDS \ninplaceCptMulVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplace_cptMulRowVecDS","title":"DoubleImpl.inplace_cptMulRowVecDS","content":"DoubleImpl.inplace_cptMulRowVecDS \ninplace_cptMulRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplaceScaleDenseMatrixDS","title":"DoubleImpl.inplaceScaleDenseMatrixDS","content":"DoubleImpl.inplaceScaleDenseMatrixDS \ninplaceScaleDenseMatrixDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplaceScaleVecDS","title":"DoubleImpl.inplaceScaleVecDS","content":"DoubleImpl.inplaceScaleVecDS \ninplaceScaleVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl.html#inplace_scaleRowVecDS","title":"DoubleImpl.inplace_scaleRowVecDS","content":"DoubleImpl.inplace_scaleRowVecDS \ninplace_scaleRowVecDS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-dmatrix.html","title":"dmatrix","content":"dmatrix \n \ndmatrix.Item \nItem \ndmatrix.ElementOps \nElementOps \ndmatrix.NumCols \nNumCols \ndmatrix.OpsData \nOpsData \ndmatrix.NumRows \nNumRows \ndmatrix.Values \nValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-dmatrix.html#Item","title":"dmatrix.Item","content":"dmatrix.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-dmatrix.html#ElementOps","title":"dmatrix.ElementOps","content":"dmatrix.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-dmatrix.html#NumCols","title":"dmatrix.NumCols","content":"dmatrix.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-dmatrix.html#OpsData","title":"dmatrix.OpsData","content":"dmatrix.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-dmatrix.html#NumRows","title":"dmatrix.NumRows","content":"dmatrix.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-dmatrix.html#Values","title":"dmatrix.Values","content":"dmatrix.Values \nValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html","title":"rowvec","content":"rowvec \n \nrowvec.NumCols \nNumCols \nrowvec.Transpose \nTranspose \nrowvec.Item \nItem \nrowvec.DebugDisplay \nDebugDisplay \nrowvec.StructuredDisplayAsArray \nStructuredDisplayAsArray \nrowvec.Length \nLength \nrowvec.Values \nValues \nrowvec.Details \nDetails \nrowvec.OpsData \nOpsData \nrowvec.ElementOps \nElementOps \nrowvec.InternalValues \nInternalValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#NumCols","title":"rowvec.NumCols","content":"rowvec.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#Transpose","title":"rowvec.Transpose","content":"rowvec.Transpose \nTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#Item","title":"rowvec.Item","content":"rowvec.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#DebugDisplay","title":"rowvec.DebugDisplay","content":"rowvec.DebugDisplay \nDebugDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#StructuredDisplayAsArray","title":"rowvec.StructuredDisplayAsArray","content":"rowvec.StructuredDisplayAsArray \nStructuredDisplayAsArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#Length","title":"rowvec.Length","content":"rowvec.Length \nLength \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#Values","title":"rowvec.Values","content":"rowvec.Values \nValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#Details","title":"rowvec.Details","content":"rowvec.Details \nDetails \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#OpsData","title":"rowvec.OpsData","content":"rowvec.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#ElementOps","title":"rowvec.ElementOps","content":"rowvec.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-rowvec.html#InternalValues","title":"rowvec.InternalValues","content":"rowvec.InternalValues \nInternalValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-smatrix.html","title":"smatrix","content":"smatrix \n \nsmatrix.Item \nItem \nsmatrix.SparseColumnValues \nSparseColumnValues \nsmatrix.SparseValues \nSparseValues \nsmatrix.ElementOps \nElementOps \nsmatrix.NumCols \nNumCols \nsmatrix.SparseRowOffsets \nSparseRowOffsets \nsmatrix.OpsData \nOpsData \nsmatrix.NumRows \nNumRows"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-smatrix.html#Item","title":"smatrix.Item","content":"smatrix.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-smatrix.html#SparseColumnValues","title":"smatrix.SparseColumnValues","content":"smatrix.SparseColumnValues \nSparseColumnValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-smatrix.html#SparseValues","title":"smatrix.SparseValues","content":"smatrix.SparseValues \nSparseValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-smatrix.html#ElementOps","title":"smatrix.ElementOps","content":"smatrix.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-smatrix.html#NumCols","title":"smatrix.NumCols","content":"smatrix.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-smatrix.html#SparseRowOffsets","title":"smatrix.SparseRowOffsets","content":"smatrix.SparseRowOffsets \nSparseRowOffsets \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-smatrix.html#OpsData","title":"smatrix.OpsData","content":"smatrix.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-smatrix.html#NumRows","title":"smatrix.NumRows","content":"smatrix.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html","title":"vector","content":"vector \n \nvector.Transpose \nTranspose \nvector.Item \nItem \nvector.DebugDisplay \nDebugDisplay \nvector.StructuredDisplayAsArray \nStructuredDisplayAsArray \nvector.Length \nLength \nvector.Values \nValues \nvector.Details \nDetails \nvector.OpsData \nOpsData \nvector.ElementOps \nElementOps \nvector.NumRows \nNumRows \nvector.InternalValues \nInternalValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#Transpose","title":"vector.Transpose","content":"vector.Transpose \nTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#Item","title":"vector.Item","content":"vector.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#DebugDisplay","title":"vector.DebugDisplay","content":"vector.DebugDisplay \nDebugDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#StructuredDisplayAsArray","title":"vector.StructuredDisplayAsArray","content":"vector.StructuredDisplayAsArray \nStructuredDisplayAsArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#Length","title":"vector.Length","content":"vector.Length \nLength \n\nLength of vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#Values","title":"vector.Values","content":"vector.Values \nValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#Details","title":"vector.Details","content":"vector.Details \nDetails \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#OpsData","title":"vector.OpsData","content":"vector.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#ElementOps","title":"vector.ElementOps","content":"vector.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#NumRows","title":"vector.NumRows","content":"vector.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-doubleimpl-vector.html#InternalValues","title":"vector.InternalValues","content":"vector.InternalValues \nInternalValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fsiprinters.html","title":"FSIPrinters","content":"FSIPrinters \n \nFSIPrinters.matrix \nmatrix"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fsiprinters.html#matrix","title":"FSIPrinters.matrix","content":"FSIPrinters.matrix \nmatrix \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting.html","title":"Formatting","content":"Formatting \n \nFormatting.Matrix \nMatrix \nFormatting.RowVector \nRowVector \nFormatting.Vector \nVector \nFormatting.formatValue \nformatValue \nFormatting.formatTable \nformatTable"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting.html#formatValue","title":"Formatting.formatValue","content":"Formatting.formatValue \nformatValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting.html#formatTable","title":"Formatting.formatTable","content":"Formatting.formatTable \nformatTable \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting-matrix.html","title":"Matrix","content":"Matrix \n \nMatrix.RowStartItemCount \nRowStartItemCount \nMatrix.RowEndItemCount \nRowEndItemCount \nMatrix.ColumnStartItemCount \nColumnStartItemCount \nMatrix.ColumnEndItemCount \nColumnEndItemCount"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting-matrix.html#RowStartItemCount","title":"Matrix.RowStartItemCount","content":"Matrix.RowStartItemCount \nRowStartItemCount \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting-matrix.html#RowEndItemCount","title":"Matrix.RowEndItemCount","content":"Matrix.RowEndItemCount \nRowEndItemCount \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting-matrix.html#ColumnStartItemCount","title":"Matrix.ColumnStartItemCount","content":"Matrix.ColumnStartItemCount \nColumnStartItemCount \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting-matrix.html#ColumnEndItemCount","title":"Matrix.ColumnEndItemCount","content":"Matrix.ColumnEndItemCount \nColumnEndItemCount \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting-rowvector.html","title":"RowVector","content":"RowVector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-formatting-vector.html","title":"Vector","content":"Vector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html","title":"GenericImpl","content":"GenericImpl \n\n Implementations of operations that will work for any type\n \nGenericImpl.OpsData\u003C\u0027T\u003E \nOpsData\u003C\u0027T\u003E \nGenericImpl.opsOfOpsData \nopsOfOpsData \nGenericImpl.getNormOps \ngetNormOps \nGenericImpl.mkDenseMatrixGU \nmkDenseMatrixGU \nGenericImpl.mkSparseMatrixGU \nmkSparseMatrixGU \nGenericImpl.mkRowVecGU \nmkRowVecGU \nGenericImpl.mkVecGU \nmkVecGU \nGenericImpl.getArray2D \ngetArray2D \nGenericImpl.setArray2D \nsetArray2D \nGenericImpl.createArray \ncreateArray \nGenericImpl.createArray2D \ncreateArray2D \nGenericImpl.assignArray2D \nassignArray2D \nGenericImpl.assignConstArray2D \nassignConstArray2D \nGenericImpl.assignDenseMatrixGU \nassignDenseMatrixGU \nGenericImpl.assignArray \nassignArray \nGenericImpl.assignConstArray \nassignConstArray \nGenericImpl.assignVecGU \nassignVecGU \nGenericImpl.assignRowVecGU \nassignRowVecGU \nGenericImpl.createConstDenseMatrixGU \ncreateConstDenseMatrixGU \nGenericImpl.createConstRowVecGU \ncreateConstRowVecGU \nGenericImpl.createConstVecGU \ncreateConstVecGU \nGenericImpl.createDenseMatrixGU \ncreateDenseMatrixGU \nGenericImpl.createRowVecGU \ncreateRowVecGU \nGenericImpl.createVecGU \ncreateVecGU \nGenericImpl.initSparseMatrixGU \ninitSparseMatrixGU \nGenericImpl.zeroizeDenseMatrixGUA \nzeroizeDenseMatrixGUA \nGenericImpl.zeroizeArray \nzeroizeArray \nGenericImpl.zeroizeVecGUA \nzeroizeVecGUA \nGenericImpl.zeroizeRowVecGUA \nzeroizeRowVecGUA \nGenericImpl.listDenseMatrixGU \nlistDenseMatrixGU \nGenericImpl.colListDenseMatrixGU \ncolListDenseMatrixGU \nGenericImpl.listVecGU \nlistVecGU \nGenericImpl.listRowVecGU \nlistRowVecGU \nGenericImpl.seqDenseMatrixGU \nseqDenseMatrixGU \nGenericImpl.colSeqDenseMatrixGU \ncolSeqDenseMatrixGU \nGenericImpl.seqVecGU \nseqVecGU \nGenericImpl.seqRowVecGU \nseqRowVecGU \nGenericImpl.arrayDenseMatrixGU \narrayDenseMatrixGU \nGenericImpl.colArrayDenseMatrixGU \ncolArrayDenseMatrixGU \nGenericImpl.binaryOpDenseMatrixGU \nbinaryOpDenseMatrixGU \nGenericImpl.nonZeroEntriesSparseMatrixGU \nnonZeroEntriesSparseMatrixGU \nGenericImpl.nonzeroEntriesDenseMatrixGU \nnonzeroEntriesDenseMatrixGU \nGenericImpl.binaryOpSparseMatrixGU \nbinaryOpSparseMatrixGU \nGenericImpl.binaryOpRowVecGU \nbinaryOpRowVecGU \nGenericImpl.binaryOpVecGU \nbinaryOpVecGU \nGenericImpl.unaryOpDenseMatrixGU \nunaryOpDenseMatrixGU \nGenericImpl.unaryOpRowVecGU \nunaryOpRowVecGU \nGenericImpl.unaryOpVectorGU \nunaryOpVectorGU \nGenericImpl.unaryOpSparseGU \nunaryOpSparseGU \nGenericImpl.copySparseGU \ncopySparseGU \nGenericImpl.addDenseMatrixGU \naddDenseMatrixGU \nGenericImpl.addSparseMatrixGU \naddSparseMatrixGU \nGenericImpl.addRowVecGU \naddRowVecGU \nGenericImpl.addVecGU \naddVecGU \nGenericImpl.subDenseMatrixGU \nsubDenseMatrixGU \nGenericImpl.subSparseMatrixGU \nsubSparseMatrixGU \nGenericImpl.subRowVecGU \nsubRowVecGU \nGenericImpl.subVecGU \nsubVecGU \nGenericImpl.cptMulDenseMatrixGU \ncptMulDenseMatrixGU \nGenericImpl.cptMulSparseMatrixGU \ncptMulSparseMatrixGU \nGenericImpl.cptMulRowVecGU \ncptMulRowVecGU \nGenericImpl.cptMulVecGU \ncptMulVecGU \nGenericImpl.cptMaxDenseMatrixGU \ncptMaxDenseMatrixGU \nGenericImpl.cptMinDenseMatrixGU \ncptMinDenseMatrixGU \nGenericImpl.cptMaxSparseMatrixGU \ncptMaxSparseMatrixGU \nGenericImpl.cptMinSparseMatrixGU \ncptMinSparseMatrixGU \nGenericImpl.cptMaxVecGU \ncptMaxVecGU \nGenericImpl.cptMinVecGU \ncptMinVecGU \nGenericImpl.add \nadd \nGenericImpl.sub \nsub \nGenericImpl.mul \nmul \nGenericImpl.foldR \nfoldR \nGenericImpl.sumfR \nsumfR \nGenericImpl.sumRGU \nsumRGU \nGenericImpl.genericMulDenseMatrix \ngenericMulDenseMatrix \nGenericImpl.debug \ndebug \nGenericImpl.NormalizeOrdering \nNormalizeOrdering \nGenericImpl.NormalizeZeros \nNormalizeZeros \nGenericImpl.Normalize \nNormalize \nGenericImpl.genericMulSparse \ngenericMulSparse \nGenericImpl.mulSparseMatrixGU \nmulSparseMatrixGU \nGenericImpl.mulRowVecVecGU \nmulRowVecVecGU \nGenericImpl.rowvecDenseMatrixGU \nrowvecDenseMatrixGU \nGenericImpl.vectorDenseMatrixGU \nvectorDenseMatrixGU \nGenericImpl.mulVecRowVecGU \nmulVecRowVecGU \nGenericImpl.mulRowVecDenseMatrixGU \nmulRowVecDenseMatrixGU \nGenericImpl.mulDenseMatrixVecGU \nmulDenseMatrixVecGU \nGenericImpl.mulSparseVecGU \nmulSparseVecGU \nGenericImpl.mulRVSparseMatrixGU \nmulRVSparseMatrixGU \nGenericImpl.scaleDenseMatrixGU \nscaleDenseMatrixGU \nGenericImpl.scaleRowVecGU \nscaleRowVecGU \nGenericImpl.scaleVecGU \nscaleVecGU \nGenericImpl.scaleSparseMatrixGU \nscaleSparseMatrixGU \nGenericImpl.addScalarDenseMatrixGU \naddScalarDenseMatrixGU \nGenericImpl.addScalarRowVecGU \naddScalarRowVecGU \nGenericImpl.addScalarVecGU \naddScalarVecGU \nGenericImpl.addScalarSparseMatrixGU \naddScalarSparseMatrixGU \nGenericImpl.subScalarDenseMatrixGU \nsubScalarDenseMatrixGU \nGenericImpl.subScalarRowVecGU \nsubScalarRowVecGU \nGenericImpl.subScalarVecGU \nsubScalarVecGU \nGenericImpl.subScalarSparseMatrixGU \nsubScalarSparseMatrixGU \nGenericImpl.negDenseMatrixGU \nnegDenseMatrixGU \nGenericImpl.negRowVecGU \nnegRowVecGU \nGenericImpl.negVecGU \nnegVecGU \nGenericImpl.negSparseMatrixGU \nnegSparseMatrixGU \nGenericImpl.mapDenseMatrixGU \nmapDenseMatrixGU \nGenericImpl.mapVecGU \nmapVecGU \nGenericImpl.map2VecGU \nmap2VecGU \nGenericImpl.map3VecGU \nmap3VecGU \nGenericImpl.zipVecGU \nzipVecGU \nGenericImpl.unzipVecGU \nunzipVecGU \nGenericImpl.copyDenseMatrixGU \ncopyDenseMatrixGU \nGenericImpl.copyVecGU \ncopyVecGU \nGenericImpl.copyRowVecGU \ncopyRowVecGU \nGenericImpl.toDenseSparseMatrixGU \ntoDenseSparseMatrixGU \nGenericImpl.mapiDenseMatrixGU \nmapiDenseMatrixGU \nGenericImpl.mapRowVecGU \nmapRowVecGU \nGenericImpl.mapiRowVecGU \nmapiRowVecGU \nGenericImpl.mapiVecGU \nmapiVecGU \nGenericImpl.permuteVecGU \npermuteVecGU \nGenericImpl.permuteRowVecGU \npermuteRowVecGU \nGenericImpl.inplace_mapDenseMatrixGU \ninplace_mapDenseMatrixGU \nGenericImpl.inplace_mapRowVecGU \ninplace_mapRowVecGU \nGenericImpl.inplace_mapVecGU \ninplace_mapVecGU \nGenericImpl.inplace_mapiDenseMatrixGU \ninplace_mapiDenseMatrixGU \nGenericImpl.inplace_mapiRowVecGU \ninplace_mapiRowVecGU \nGenericImpl.inplace_mapiVecGU \ninplace_mapiVecGU \nGenericImpl.foldDenseMatrixGU \nfoldDenseMatrixGU \nGenericImpl.foldVecGU \nfoldVecGU \nGenericImpl.foldiDenseMatrixGU \nfoldiDenseMatrixGU \nGenericImpl.foldiVecGU \nfoldiVecGU \nGenericImpl.forallR \nforallR \nGenericImpl.existsR \nexistsR \nGenericImpl.foralliDenseMatrixGU \nforalliDenseMatrixGU \nGenericImpl.foralliVecGU \nforalliVecGU \nGenericImpl.existsiDenseMatrixGU \nexistsiDenseMatrixGU \nGenericImpl.existsiVecGU \nexistsiVecGU \nGenericImpl.sumDenseMatrixGU \nsumDenseMatrixGU \nGenericImpl.sumSparseMatrixGU \nsumSparseMatrixGU \nGenericImpl.sumVecGU \nsumVecGU \nGenericImpl.prodDenseMatrixGU \nprodDenseMatrixGU \nGenericImpl.prodSparseMatrixGU \nprodSparseMatrixGU \nGenericImpl.fold2DenseMatrixGU \nfold2DenseMatrixGU \nGenericImpl.fold2VecGU \nfold2VecGU \nGenericImpl.dotDenseMatrixGU \ndotDenseMatrixGU \nGenericImpl.dotVecGU \ndotVecGU \nGenericImpl.normDenseMatrixGU \nnormDenseMatrixGU \nGenericImpl.normSparseMatrixGU \nnormSparseMatrixGU \nGenericImpl.inplaceAddDenseMatrixGU \ninplaceAddDenseMatrixGU \nGenericImpl.inplaceAddVecGU \ninplaceAddVecGU \nGenericImpl.inplaceAddRowVecGU \ninplaceAddRowVecGU \nGenericImpl.inplaceSubDenseMatrixGU \ninplaceSubDenseMatrixGU \nGenericImpl.inplaceSubVecGU \ninplaceSubVecGU \nGenericImpl.inplaceSubRowVecGU \ninplaceSubRowVecGU \nGenericImpl.inplaceCptMulDenseMatrixGU \ninplaceCptMulDenseMatrixGU \nGenericImpl.inplaceCptMulVecGU \ninplaceCptMulVecGU \nGenericImpl.inplaceCptMulRowVecGU \ninplaceCptMulRowVecGU \nGenericImpl.inplaceScaleDenseMatrixGU \ninplaceScaleDenseMatrixGU \nGenericImpl.inplaceScaleVecGU \ninplaceScaleVecGU \nGenericImpl.inplaceScaleRowVecGU \ninplaceScaleRowVecGU \nGenericImpl.wrapList \nwrapList \nGenericImpl.showItem \nshowItem \nGenericImpl.mapR \nmapR \nGenericImpl.primShowDenseMatrixGU \nprimShowDenseMatrixGU \nGenericImpl.showDenseMatrixGU \nshowDenseMatrixGU \nGenericImpl.debugShowDenseMatrixGU \ndebugShowDenseMatrixGU \nGenericImpl.showVecGU \nshowVecGU \nGenericImpl.showRowVecGU \nshowRowVecGU"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#opsOfOpsData","title":"GenericImpl.opsOfOpsData","content":"GenericImpl.opsOfOpsData \nopsOfOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#getNormOps","title":"GenericImpl.getNormOps","content":"GenericImpl.getNormOps \ngetNormOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mkDenseMatrixGU","title":"GenericImpl.mkDenseMatrixGU","content":"GenericImpl.mkDenseMatrixGU \nmkDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mkSparseMatrixGU","title":"GenericImpl.mkSparseMatrixGU","content":"GenericImpl.mkSparseMatrixGU \nmkSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mkRowVecGU","title":"GenericImpl.mkRowVecGU","content":"GenericImpl.mkRowVecGU \nmkRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mkVecGU","title":"GenericImpl.mkVecGU","content":"GenericImpl.mkVecGU \nmkVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#getArray2D","title":"GenericImpl.getArray2D","content":"GenericImpl.getArray2D \ngetArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#setArray2D","title":"GenericImpl.setArray2D","content":"GenericImpl.setArray2D \nsetArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#createArray","title":"GenericImpl.createArray","content":"GenericImpl.createArray \ncreateArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#createArray2D","title":"GenericImpl.createArray2D","content":"GenericImpl.createArray2D \ncreateArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#assignArray2D","title":"GenericImpl.assignArray2D","content":"GenericImpl.assignArray2D \nassignArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#assignConstArray2D","title":"GenericImpl.assignConstArray2D","content":"GenericImpl.assignConstArray2D \nassignConstArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#assignDenseMatrixGU","title":"GenericImpl.assignDenseMatrixGU","content":"GenericImpl.assignDenseMatrixGU \nassignDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#assignArray","title":"GenericImpl.assignArray","content":"GenericImpl.assignArray \nassignArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#assignConstArray","title":"GenericImpl.assignConstArray","content":"GenericImpl.assignConstArray \nassignConstArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#assignVecGU","title":"GenericImpl.assignVecGU","content":"GenericImpl.assignVecGU \nassignVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#assignRowVecGU","title":"GenericImpl.assignRowVecGU","content":"GenericImpl.assignRowVecGU \nassignRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#createConstDenseMatrixGU","title":"GenericImpl.createConstDenseMatrixGU","content":"GenericImpl.createConstDenseMatrixGU \ncreateConstDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#createConstRowVecGU","title":"GenericImpl.createConstRowVecGU","content":"GenericImpl.createConstRowVecGU \ncreateConstRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#createConstVecGU","title":"GenericImpl.createConstVecGU","content":"GenericImpl.createConstVecGU \ncreateConstVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#createDenseMatrixGU","title":"GenericImpl.createDenseMatrixGU","content":"GenericImpl.createDenseMatrixGU \ncreateDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#createRowVecGU","title":"GenericImpl.createRowVecGU","content":"GenericImpl.createRowVecGU \ncreateRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#createVecGU","title":"GenericImpl.createVecGU","content":"GenericImpl.createVecGU \ncreateVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#initSparseMatrixGU","title":"GenericImpl.initSparseMatrixGU","content":"GenericImpl.initSparseMatrixGU \ninitSparseMatrixGU \n\n Create a matrix from a sparse sequence \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#zeroizeDenseMatrixGUA","title":"GenericImpl.zeroizeDenseMatrixGUA","content":"GenericImpl.zeroizeDenseMatrixGUA \nzeroizeDenseMatrixGUA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#zeroizeArray","title":"GenericImpl.zeroizeArray","content":"GenericImpl.zeroizeArray \nzeroizeArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#zeroizeVecGUA","title":"GenericImpl.zeroizeVecGUA","content":"GenericImpl.zeroizeVecGUA \nzeroizeVecGUA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#zeroizeRowVecGUA","title":"GenericImpl.zeroizeRowVecGUA","content":"GenericImpl.zeroizeRowVecGUA \nzeroizeRowVecGUA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#listDenseMatrixGU","title":"GenericImpl.listDenseMatrixGU","content":"GenericImpl.listDenseMatrixGU \nlistDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#colListDenseMatrixGU","title":"GenericImpl.colListDenseMatrixGU","content":"GenericImpl.colListDenseMatrixGU \ncolListDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#listVecGU","title":"GenericImpl.listVecGU","content":"GenericImpl.listVecGU \nlistVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#listRowVecGU","title":"GenericImpl.listRowVecGU","content":"GenericImpl.listRowVecGU \nlistRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#seqDenseMatrixGU","title":"GenericImpl.seqDenseMatrixGU","content":"GenericImpl.seqDenseMatrixGU \nseqDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#colSeqDenseMatrixGU","title":"GenericImpl.colSeqDenseMatrixGU","content":"GenericImpl.colSeqDenseMatrixGU \ncolSeqDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#seqVecGU","title":"GenericImpl.seqVecGU","content":"GenericImpl.seqVecGU \nseqVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#seqRowVecGU","title":"GenericImpl.seqRowVecGU","content":"GenericImpl.seqRowVecGU \nseqRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#arrayDenseMatrixGU","title":"GenericImpl.arrayDenseMatrixGU","content":"GenericImpl.arrayDenseMatrixGU \narrayDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#colArrayDenseMatrixGU","title":"GenericImpl.colArrayDenseMatrixGU","content":"GenericImpl.colArrayDenseMatrixGU \ncolArrayDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#binaryOpDenseMatrixGU","title":"GenericImpl.binaryOpDenseMatrixGU","content":"GenericImpl.binaryOpDenseMatrixGU \nbinaryOpDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#nonZeroEntriesSparseMatrixGU","title":"GenericImpl.nonZeroEntriesSparseMatrixGU","content":"GenericImpl.nonZeroEntriesSparseMatrixGU \nnonZeroEntriesSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#nonzeroEntriesDenseMatrixGU","title":"GenericImpl.nonzeroEntriesDenseMatrixGU","content":"GenericImpl.nonzeroEntriesDenseMatrixGU \nnonzeroEntriesDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#binaryOpSparseMatrixGU","title":"GenericImpl.binaryOpSparseMatrixGU","content":"GenericImpl.binaryOpSparseMatrixGU \nbinaryOpSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#binaryOpRowVecGU","title":"GenericImpl.binaryOpRowVecGU","content":"GenericImpl.binaryOpRowVecGU \nbinaryOpRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#binaryOpVecGU","title":"GenericImpl.binaryOpVecGU","content":"GenericImpl.binaryOpVecGU \nbinaryOpVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#unaryOpDenseMatrixGU","title":"GenericImpl.unaryOpDenseMatrixGU","content":"GenericImpl.unaryOpDenseMatrixGU \nunaryOpDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#unaryOpRowVecGU","title":"GenericImpl.unaryOpRowVecGU","content":"GenericImpl.unaryOpRowVecGU \nunaryOpRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#unaryOpVectorGU","title":"GenericImpl.unaryOpVectorGU","content":"GenericImpl.unaryOpVectorGU \nunaryOpVectorGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#unaryOpSparseGU","title":"GenericImpl.unaryOpSparseGU","content":"GenericImpl.unaryOpSparseGU \nunaryOpSparseGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#copySparseGU","title":"GenericImpl.copySparseGU","content":"GenericImpl.copySparseGU \ncopySparseGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#addDenseMatrixGU","title":"GenericImpl.addDenseMatrixGU","content":"GenericImpl.addDenseMatrixGU \naddDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#addSparseMatrixGU","title":"GenericImpl.addSparseMatrixGU","content":"GenericImpl.addSparseMatrixGU \naddSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#addRowVecGU","title":"GenericImpl.addRowVecGU","content":"GenericImpl.addRowVecGU \naddRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#addVecGU","title":"GenericImpl.addVecGU","content":"GenericImpl.addVecGU \naddVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#subDenseMatrixGU","title":"GenericImpl.subDenseMatrixGU","content":"GenericImpl.subDenseMatrixGU \nsubDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#subSparseMatrixGU","title":"GenericImpl.subSparseMatrixGU","content":"GenericImpl.subSparseMatrixGU \nsubSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#subRowVecGU","title":"GenericImpl.subRowVecGU","content":"GenericImpl.subRowVecGU \nsubRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#subVecGU","title":"GenericImpl.subVecGU","content":"GenericImpl.subVecGU \nsubVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMulDenseMatrixGU","title":"GenericImpl.cptMulDenseMatrixGU","content":"GenericImpl.cptMulDenseMatrixGU \ncptMulDenseMatrixGU \n\nPoint-wise multiplication \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMulSparseMatrixGU","title":"GenericImpl.cptMulSparseMatrixGU","content":"GenericImpl.cptMulSparseMatrixGU \ncptMulSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMulRowVecGU","title":"GenericImpl.cptMulRowVecGU","content":"GenericImpl.cptMulRowVecGU \ncptMulRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMulVecGU","title":"GenericImpl.cptMulVecGU","content":"GenericImpl.cptMulVecGU \ncptMulVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMaxDenseMatrixGU","title":"GenericImpl.cptMaxDenseMatrixGU","content":"GenericImpl.cptMaxDenseMatrixGU \ncptMaxDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMinDenseMatrixGU","title":"GenericImpl.cptMinDenseMatrixGU","content":"GenericImpl.cptMinDenseMatrixGU \ncptMinDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMaxSparseMatrixGU","title":"GenericImpl.cptMaxSparseMatrixGU","content":"GenericImpl.cptMaxSparseMatrixGU \ncptMaxSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMinSparseMatrixGU","title":"GenericImpl.cptMinSparseMatrixGU","content":"GenericImpl.cptMinSparseMatrixGU \ncptMinSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMaxVecGU","title":"GenericImpl.cptMaxVecGU","content":"GenericImpl.cptMaxVecGU \ncptMaxVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#cptMinVecGU","title":"GenericImpl.cptMinVecGU","content":"GenericImpl.cptMinVecGU \ncptMinVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#add","title":"GenericImpl.add","content":"GenericImpl.add \nadd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#sub","title":"GenericImpl.sub","content":"GenericImpl.sub \nsub \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mul","title":"GenericImpl.mul","content":"GenericImpl.mul \nmul \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#foldR","title":"GenericImpl.foldR","content":"GenericImpl.foldR \nfoldR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#sumfR","title":"GenericImpl.sumfR","content":"GenericImpl.sumfR \nsumfR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#sumRGU","title":"GenericImpl.sumRGU","content":"GenericImpl.sumRGU \nsumRGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#genericMulDenseMatrix","title":"GenericImpl.genericMulDenseMatrix","content":"GenericImpl.genericMulDenseMatrix \ngenericMulDenseMatrix \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#debug","title":"GenericImpl.debug","content":"GenericImpl.debug \ndebug \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#NormalizeOrdering","title":"GenericImpl.NormalizeOrdering","content":"GenericImpl.NormalizeOrdering \nNormalizeOrdering \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#NormalizeZeros","title":"GenericImpl.NormalizeZeros","content":"GenericImpl.NormalizeZeros \nNormalizeZeros \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#Normalize","title":"GenericImpl.Normalize","content":"GenericImpl.Normalize \nNormalize \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#genericMulSparse","title":"GenericImpl.genericMulSparse","content":"GenericImpl.genericMulSparse \ngenericMulSparse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mulSparseMatrixGU","title":"GenericImpl.mulSparseMatrixGU","content":"GenericImpl.mulSparseMatrixGU \nmulSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mulRowVecVecGU","title":"GenericImpl.mulRowVecVecGU","content":"GenericImpl.mulRowVecVecGU \nmulRowVecVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#rowvecDenseMatrixGU","title":"GenericImpl.rowvecDenseMatrixGU","content":"GenericImpl.rowvecDenseMatrixGU \nrowvecDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#vectorDenseMatrixGU","title":"GenericImpl.vectorDenseMatrixGU","content":"GenericImpl.vectorDenseMatrixGU \nvectorDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mulVecRowVecGU","title":"GenericImpl.mulVecRowVecGU","content":"GenericImpl.mulVecRowVecGU \nmulVecRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mulRowVecDenseMatrixGU","title":"GenericImpl.mulRowVecDenseMatrixGU","content":"GenericImpl.mulRowVecDenseMatrixGU \nmulRowVecDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mulDenseMatrixVecGU","title":"GenericImpl.mulDenseMatrixVecGU","content":"GenericImpl.mulDenseMatrixVecGU \nmulDenseMatrixVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mulSparseVecGU","title":"GenericImpl.mulSparseVecGU","content":"GenericImpl.mulSparseVecGU \nmulSparseVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mulRVSparseMatrixGU","title":"GenericImpl.mulRVSparseMatrixGU","content":"GenericImpl.mulRVSparseMatrixGU \nmulRVSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#scaleDenseMatrixGU","title":"GenericImpl.scaleDenseMatrixGU","content":"GenericImpl.scaleDenseMatrixGU \nscaleDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#scaleRowVecGU","title":"GenericImpl.scaleRowVecGU","content":"GenericImpl.scaleRowVecGU \nscaleRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#scaleVecGU","title":"GenericImpl.scaleVecGU","content":"GenericImpl.scaleVecGU \nscaleVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#scaleSparseMatrixGU","title":"GenericImpl.scaleSparseMatrixGU","content":"GenericImpl.scaleSparseMatrixGU \nscaleSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#addScalarDenseMatrixGU","title":"GenericImpl.addScalarDenseMatrixGU","content":"GenericImpl.addScalarDenseMatrixGU \naddScalarDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#addScalarRowVecGU","title":"GenericImpl.addScalarRowVecGU","content":"GenericImpl.addScalarRowVecGU \naddScalarRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#addScalarVecGU","title":"GenericImpl.addScalarVecGU","content":"GenericImpl.addScalarVecGU \naddScalarVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#addScalarSparseMatrixGU","title":"GenericImpl.addScalarSparseMatrixGU","content":"GenericImpl.addScalarSparseMatrixGU \naddScalarSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#subScalarDenseMatrixGU","title":"GenericImpl.subScalarDenseMatrixGU","content":"GenericImpl.subScalarDenseMatrixGU \nsubScalarDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#subScalarRowVecGU","title":"GenericImpl.subScalarRowVecGU","content":"GenericImpl.subScalarRowVecGU \nsubScalarRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#subScalarVecGU","title":"GenericImpl.subScalarVecGU","content":"GenericImpl.subScalarVecGU \nsubScalarVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#subScalarSparseMatrixGU","title":"GenericImpl.subScalarSparseMatrixGU","content":"GenericImpl.subScalarSparseMatrixGU \nsubScalarSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#negDenseMatrixGU","title":"GenericImpl.negDenseMatrixGU","content":"GenericImpl.negDenseMatrixGU \nnegDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#negRowVecGU","title":"GenericImpl.negRowVecGU","content":"GenericImpl.negRowVecGU \nnegRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#negVecGU","title":"GenericImpl.negVecGU","content":"GenericImpl.negVecGU \nnegVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#negSparseMatrixGU","title":"GenericImpl.negSparseMatrixGU","content":"GenericImpl.negSparseMatrixGU \nnegSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mapDenseMatrixGU","title":"GenericImpl.mapDenseMatrixGU","content":"GenericImpl.mapDenseMatrixGU \nmapDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mapVecGU","title":"GenericImpl.mapVecGU","content":"GenericImpl.mapVecGU \nmapVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#map2VecGU","title":"GenericImpl.map2VecGU","content":"GenericImpl.map2VecGU \nmap2VecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#map3VecGU","title":"GenericImpl.map3VecGU","content":"GenericImpl.map3VecGU \nmap3VecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#zipVecGU","title":"GenericImpl.zipVecGU","content":"GenericImpl.zipVecGU \nzipVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#unzipVecGU","title":"GenericImpl.unzipVecGU","content":"GenericImpl.unzipVecGU \nunzipVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#copyDenseMatrixGU","title":"GenericImpl.copyDenseMatrixGU","content":"GenericImpl.copyDenseMatrixGU \ncopyDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#copyVecGU","title":"GenericImpl.copyVecGU","content":"GenericImpl.copyVecGU \ncopyVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#copyRowVecGU","title":"GenericImpl.copyRowVecGU","content":"GenericImpl.copyRowVecGU \ncopyRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#toDenseSparseMatrixGU","title":"GenericImpl.toDenseSparseMatrixGU","content":"GenericImpl.toDenseSparseMatrixGU \ntoDenseSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mapiDenseMatrixGU","title":"GenericImpl.mapiDenseMatrixGU","content":"GenericImpl.mapiDenseMatrixGU \nmapiDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mapRowVecGU","title":"GenericImpl.mapRowVecGU","content":"GenericImpl.mapRowVecGU \nmapRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mapiRowVecGU","title":"GenericImpl.mapiRowVecGU","content":"GenericImpl.mapiRowVecGU \nmapiRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mapiVecGU","title":"GenericImpl.mapiVecGU","content":"GenericImpl.mapiVecGU \nmapiVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#permuteVecGU","title":"GenericImpl.permuteVecGU","content":"GenericImpl.permuteVecGU \npermuteVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#permuteRowVecGU","title":"GenericImpl.permuteRowVecGU","content":"GenericImpl.permuteRowVecGU \npermuteRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplace_mapDenseMatrixGU","title":"GenericImpl.inplace_mapDenseMatrixGU","content":"GenericImpl.inplace_mapDenseMatrixGU \ninplace_mapDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplace_mapRowVecGU","title":"GenericImpl.inplace_mapRowVecGU","content":"GenericImpl.inplace_mapRowVecGU \ninplace_mapRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplace_mapVecGU","title":"GenericImpl.inplace_mapVecGU","content":"GenericImpl.inplace_mapVecGU \ninplace_mapVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplace_mapiDenseMatrixGU","title":"GenericImpl.inplace_mapiDenseMatrixGU","content":"GenericImpl.inplace_mapiDenseMatrixGU \ninplace_mapiDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplace_mapiRowVecGU","title":"GenericImpl.inplace_mapiRowVecGU","content":"GenericImpl.inplace_mapiRowVecGU \ninplace_mapiRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplace_mapiVecGU","title":"GenericImpl.inplace_mapiVecGU","content":"GenericImpl.inplace_mapiVecGU \ninplace_mapiVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#foldDenseMatrixGU","title":"GenericImpl.foldDenseMatrixGU","content":"GenericImpl.foldDenseMatrixGU \nfoldDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#foldVecGU","title":"GenericImpl.foldVecGU","content":"GenericImpl.foldVecGU \nfoldVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#foldiDenseMatrixGU","title":"GenericImpl.foldiDenseMatrixGU","content":"GenericImpl.foldiDenseMatrixGU \nfoldiDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#foldiVecGU","title":"GenericImpl.foldiVecGU","content":"GenericImpl.foldiVecGU \nfoldiVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#forallR","title":"GenericImpl.forallR","content":"GenericImpl.forallR \nforallR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#existsR","title":"GenericImpl.existsR","content":"GenericImpl.existsR \nexistsR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#foralliDenseMatrixGU","title":"GenericImpl.foralliDenseMatrixGU","content":"GenericImpl.foralliDenseMatrixGU \nforalliDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#foralliVecGU","title":"GenericImpl.foralliVecGU","content":"GenericImpl.foralliVecGU \nforalliVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#existsiDenseMatrixGU","title":"GenericImpl.existsiDenseMatrixGU","content":"GenericImpl.existsiDenseMatrixGU \nexistsiDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#existsiVecGU","title":"GenericImpl.existsiVecGU","content":"GenericImpl.existsiVecGU \nexistsiVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#sumDenseMatrixGU","title":"GenericImpl.sumDenseMatrixGU","content":"GenericImpl.sumDenseMatrixGU \nsumDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#sumSparseMatrixGU","title":"GenericImpl.sumSparseMatrixGU","content":"GenericImpl.sumSparseMatrixGU \nsumSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#sumVecGU","title":"GenericImpl.sumVecGU","content":"GenericImpl.sumVecGU \nsumVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#prodDenseMatrixGU","title":"GenericImpl.prodDenseMatrixGU","content":"GenericImpl.prodDenseMatrixGU \nprodDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#prodSparseMatrixGU","title":"GenericImpl.prodSparseMatrixGU","content":"GenericImpl.prodSparseMatrixGU \nprodSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#fold2DenseMatrixGU","title":"GenericImpl.fold2DenseMatrixGU","content":"GenericImpl.fold2DenseMatrixGU \nfold2DenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#fold2VecGU","title":"GenericImpl.fold2VecGU","content":"GenericImpl.fold2VecGU \nfold2VecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#dotDenseMatrixGU","title":"GenericImpl.dotDenseMatrixGU","content":"GenericImpl.dotDenseMatrixGU \ndotDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#dotVecGU","title":"GenericImpl.dotVecGU","content":"GenericImpl.dotVecGU \ndotVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#normDenseMatrixGU","title":"GenericImpl.normDenseMatrixGU","content":"GenericImpl.normDenseMatrixGU \nnormDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#normSparseMatrixGU","title":"GenericImpl.normSparseMatrixGU","content":"GenericImpl.normSparseMatrixGU \nnormSparseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceAddDenseMatrixGU","title":"GenericImpl.inplaceAddDenseMatrixGU","content":"GenericImpl.inplaceAddDenseMatrixGU \ninplaceAddDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceAddVecGU","title":"GenericImpl.inplaceAddVecGU","content":"GenericImpl.inplaceAddVecGU \ninplaceAddVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceAddRowVecGU","title":"GenericImpl.inplaceAddRowVecGU","content":"GenericImpl.inplaceAddRowVecGU \ninplaceAddRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceSubDenseMatrixGU","title":"GenericImpl.inplaceSubDenseMatrixGU","content":"GenericImpl.inplaceSubDenseMatrixGU \ninplaceSubDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceSubVecGU","title":"GenericImpl.inplaceSubVecGU","content":"GenericImpl.inplaceSubVecGU \ninplaceSubVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceSubRowVecGU","title":"GenericImpl.inplaceSubRowVecGU","content":"GenericImpl.inplaceSubRowVecGU \ninplaceSubRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceCptMulDenseMatrixGU","title":"GenericImpl.inplaceCptMulDenseMatrixGU","content":"GenericImpl.inplaceCptMulDenseMatrixGU \ninplaceCptMulDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceCptMulVecGU","title":"GenericImpl.inplaceCptMulVecGU","content":"GenericImpl.inplaceCptMulVecGU \ninplaceCptMulVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceCptMulRowVecGU","title":"GenericImpl.inplaceCptMulRowVecGU","content":"GenericImpl.inplaceCptMulRowVecGU \ninplaceCptMulRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceScaleDenseMatrixGU","title":"GenericImpl.inplaceScaleDenseMatrixGU","content":"GenericImpl.inplaceScaleDenseMatrixGU \ninplaceScaleDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceScaleVecGU","title":"GenericImpl.inplaceScaleVecGU","content":"GenericImpl.inplaceScaleVecGU \ninplaceScaleVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#inplaceScaleRowVecGU","title":"GenericImpl.inplaceScaleRowVecGU","content":"GenericImpl.inplaceScaleRowVecGU \ninplaceScaleRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#wrapList","title":"GenericImpl.wrapList","content":"GenericImpl.wrapList \nwrapList \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#showItem","title":"GenericImpl.showItem","content":"GenericImpl.showItem \nshowItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#mapR","title":"GenericImpl.mapR","content":"GenericImpl.mapR \nmapR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#primShowDenseMatrixGU","title":"GenericImpl.primShowDenseMatrixGU","content":"GenericImpl.primShowDenseMatrixGU \nprimShowDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#showDenseMatrixGU","title":"GenericImpl.showDenseMatrixGU","content":"GenericImpl.showDenseMatrixGU \nshowDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#debugShowDenseMatrixGU","title":"GenericImpl.debugShowDenseMatrixGU","content":"GenericImpl.debugShowDenseMatrixGU \ndebugShowDenseMatrixGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#showVecGU","title":"GenericImpl.showVecGU","content":"GenericImpl.showVecGU \nshowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl.html#showRowVecGU","title":"GenericImpl.showRowVecGU","content":"GenericImpl.showRowVecGU \nshowRowVecGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl-opsdata-1.html","title":"OpsData\u003C\u0027T\u003E","content":"OpsData\u003C\u0027T\u003E \n \nOpsData\u003C\u0027T\u003E.IsNone \nIsNone \nOpsData\u003C\u0027T\u003E.IsSome \nIsSome \nOpsData\u003C\u0027T\u003E.Value \nValue \nOpsData\u003C\u0027T\u003E.None \nNone"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl-opsdata-1.html#IsNone","title":"OpsData\u003C\u0027T\u003E.IsNone","content":"OpsData\u003C\u0027T\u003E.IsNone \nIsNone \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl-opsdata-1.html#IsSome","title":"OpsData\u003C\u0027T\u003E.IsSome","content":"OpsData\u003C\u0027T\u003E.IsSome \nIsSome \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl-opsdata-1.html#Value","title":"OpsData\u003C\u0027T\u003E.Value","content":"OpsData\u003C\u0027T\u003E.Value \nValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-genericimpl-opsdata-1.html#None","title":"OpsData\u003C\u0027T\u003E.None","content":"OpsData\u003C\u0027T\u003E.None \nNone \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-geometry.html","title":"Geometry","content":"Geometry \n\n Module to \n \nGeometry.hypot \nhypot"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-geometry.html#hypot","title":"Geometry.hypot","content":"Geometry.hypot \nhypot \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-globalassociations.html","title":"GlobalAssociations","content":"GlobalAssociations \n \nGlobalAssociations.ht \nht \nGlobalAssociations.Put \nPut \nGlobalAssociations.TryGetNumericAssociation \nTryGetNumericAssociation \nGlobalAssociations.GetNumericAssociation \nGetNumericAssociation \nGlobalAssociations.RegisterNumericAssociation \nRegisterNumericAssociation"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-globalassociations.html#ht","title":"GlobalAssociations.ht","content":"GlobalAssociations.ht \nht \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-globalassociations.html#Put","title":"GlobalAssociations.Put","content":"GlobalAssociations.Put \nPut \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-globalassociations.html#TryGetNumericAssociation","title":"GlobalAssociations.TryGetNumericAssociation","content":"GlobalAssociations.TryGetNumericAssociation \nTryGetNumericAssociation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-globalassociations.html#GetNumericAssociation","title":"GlobalAssociations.GetNumericAssociation","content":"GlobalAssociations.GetNumericAssociation \nGetNumericAssociation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-globalassociations.html#RegisterNumericAssociation","title":"GlobalAssociations.RegisterNumericAssociation","content":"GlobalAssociations.RegisterNumericAssociation \nRegisterNumericAssociation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-helpers.html","title":"Helpers","content":"Helpers \n \nHelpers.sparseNYI \nsparseNYI \nHelpers.sparseNotMutable \nsparseNotMutable \nHelpers.opsdata \nopsdata \nHelpers.DenseMaxDisplay \nDenseMaxDisplay \nHelpers.VectorMaxDisplay \nVectorMaxDisplay"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-helpers.html#sparseNYI","title":"Helpers.sparseNYI","content":"Helpers.sparseNYI \nsparseNYI \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-helpers.html#sparseNotMutable","title":"Helpers.sparseNotMutable","content":"Helpers.sparseNotMutable \nsparseNotMutable \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-helpers.html#opsdata","title":"Helpers.opsdata","content":"Helpers.opsdata \nopsdata \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-helpers.html#DenseMaxDisplay","title":"Helpers.DenseMaxDisplay","content":"Helpers.DenseMaxDisplay \nDenseMaxDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-helpers.html#VectorMaxDisplay","title":"Helpers.VectorMaxDisplay","content":"Helpers.VectorMaxDisplay \nVectorMaxDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-instances.html","title":"Instances","content":"Instances \n \nInstances.Int32Numerics \nInt32Numerics \nInstances.Int64Numerics \nInt64Numerics \nInstances.FloatNumerics \nFloatNumerics \nInstances.Float32Numerics \nFloat32Numerics \nInstances.BigRationalNumerics \nBigRationalNumerics \nInstances.BigIntNumerics \nBigIntNumerics"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-instances.html#Int32Numerics","title":"Instances.Int32Numerics","content":"Instances.Int32Numerics \nInt32Numerics \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-instances.html#Int64Numerics","title":"Instances.Int64Numerics","content":"Instances.Int64Numerics \nInt64Numerics \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-instances.html#FloatNumerics","title":"Instances.FloatNumerics","content":"Instances.FloatNumerics \nFloatNumerics \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-instances.html#Float32Numerics","title":"Instances.Float32Numerics","content":"Instances.Float32Numerics \nFloat32Numerics \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-instances.html#BigRationalNumerics","title":"Instances.BigRationalNumerics","content":"Instances.BigRationalNumerics \nBigRationalNumerics \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-instances.html#BigIntNumerics","title":"Instances.BigIntNumerics","content":"Instances.BigIntNumerics \nBigIntNumerics \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html","title":"Intervals","content":"Intervals \n \nIntervals.Interval\u003C\u0027a\u003E \nInterval\u003C\u0027a\u003E \nIntervals.create \ncreate \nIntervals.ofSize \nofSize \nIntervals.ofSeq \nofSeq \nIntervals.ofSeqBy \nofSeqBy \nIntervals.values \nvalues \nIntervals.getStart \ngetStart \nIntervals.getEnd \ngetEnd \nIntervals.getSize \ngetSize \nIntervals.getRange \ngetRange \nIntervals.getSizeBy \ngetSizeBy \nIntervals.getRangeBy \ngetRangeBy \nIntervals.trySize \ntrySize \nIntervals.toString \ntoString \nIntervals.add \nadd \nIntervals.subtract \nsubtract \nIntervals.isIntersection \nisIntersection \nIntervals.intersect \nintersect \nIntervals.getValueAt \ngetValueAt \nIntervals.liesInInterval \nliesInInterval"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#create","title":"Intervals.create","content":"Intervals.create \ncreate \n\n Creates closed interval [min,max] by given min and max\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#ofSize","title":"Intervals.ofSize","content":"Intervals.ofSize \nofSize \n\n Creates closed interval [min,max] by given start and size\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#ofSeq","title":"Intervals.ofSeq","content":"Intervals.ofSeq \nofSeq \n\n Creates closed interval of the given data based on its minimum and maximum. If the collection contains nan\n an exception is thrown.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#ofSeqBy","title":"Intervals.ofSeqBy","content":"Intervals.ofSeqBy \nofSeqBy \n\n Creates closed interval [min,max] of the given data based on the extreme values obtained by applying the projection function.\nIf the collection contains nan an exception is thrown.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#values","title":"Intervals.values","content":"Intervals.values \nvalues \n\n Returns min and max value of an Interval [min,max]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#getStart","title":"Intervals.getStart","content":"Intervals.getStart \ngetStart \n\n Returns min/start value of an Interval [min,max]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#getEnd","title":"Intervals.getEnd","content":"Intervals.getEnd \ngetEnd \n\n Returns max/end value of an Interval [min,max]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#getSize","title":"Intervals.getSize","content":"Intervals.getSize \ngetSize \n\n Returns the size of an Interval [min,max] (max - min)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#getRange","title":"Intervals.getRange","content":"Intervals.getRange \ngetRange \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#getSizeBy","title":"Intervals.getSizeBy","content":"Intervals.getSizeBy \ngetSizeBy \n\n Returns the range of an Interval [min,max] (projection max - projection min)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#getRangeBy","title":"Intervals.getRangeBy","content":"Intervals.getRangeBy \ngetRangeBy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#trySize","title":"Intervals.trySize","content":"Intervals.trySize \ntrySize \n\n Returns the size of an closed interval\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#toString","title":"Intervals.toString","content":"Intervals.toString \ntoString \n\n Returns the interval as a string\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#add","title":"Intervals.add","content":"Intervals.add \nadd \n\n Add two given intervals.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#subtract","title":"Intervals.subtract","content":"Intervals.subtract \nsubtract \n\n Subtract a given interval from the other interval.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#isIntersection","title":"Intervals.isIntersection","content":"Intervals.isIntersection \nisIntersection \n\n Checking for intersection of both intervals\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#intersect","title":"Intervals.intersect","content":"Intervals.intersect \nintersect \n\n Returns the intersection of this interval with another.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#getValueAt","title":"Intervals.getValueAt","content":"Intervals.getValueAt \ngetValueAt \n\n Get the value at a given percentage within (0.0 - 1.0) or outside (\u003C 0.0, \u003E 1.0) of the interval. Rounding to nearest neighbour occurs when needed.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals.html#liesInInterval","title":"Intervals.liesInInterval","content":"Intervals.liesInInterval \nliesInInterval \n\n   Does the given value lie in the interval or not.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals-interval-1.html","title":"Interval\u003C\u0027a\u003E","content":"Interval\u003C\u0027a\u003E \n\n Closed interval [Start,End]\n \nInterval\u003C\u0027a\u003E.ClosedInterval \nClosedInterval \nInterval\u003C\u0027a\u003E.Empty \nEmpty"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals-interval-1.html#ClosedInterval","title":"Interval\u003C\u0027a\u003E.ClosedInterval","content":"Interval\u003C\u0027a\u003E.ClosedInterval \nClosedInterval \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-intervals-interval-1.html#Empty","title":"Interval\u003C\u0027a\u003E.Empty","content":"Interval\u003C\u0027a\u003E.Empty \nEmpty \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html","title":"JaggedArray","content":"JaggedArray \n \nJaggedArray.init \ninit \nJaggedArray.zeroCreate \nzeroCreate \nJaggedArray.copy \ncopy \nJaggedArray.transpose \ntranspose \nJaggedArray.toArray2D \ntoArray2D \nJaggedArray.ofArray2D \nofArray2D \nJaggedArray.ofJaggedList \nofJaggedList \nJaggedArray.toJaggedList \ntoJaggedList \nJaggedArray.ofJaggedSeq \nofJaggedSeq \nJaggedArray.toJaggedSeq \ntoJaggedSeq \nJaggedArray.map \nmap \nJaggedArray.map2 \nmap2 \nJaggedArray.map3 \nmap3 \nJaggedArray.mapi \nmapi \nJaggedArray.innerFold \ninnerFold \nJaggedArray.fold \nfold \nJaggedArray.innerFilter \ninnerFilter \nJaggedArray.innerChoose \ninnerChoose \nJaggedArray.shuffleColumnWiseInPlace \nshuffleColumnWiseInPlace \nJaggedArray.shuffleRowWiseInPlace \nshuffleRowWiseInPlace \nJaggedArray.shuffleInPlace \nshuffleInPlace \nJaggedArray.shuffleColumnWise \nshuffleColumnWise \nJaggedArray.shuffleRowWise \nshuffleRowWise \nJaggedArray.shuffle \nshuffle"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#init","title":"JaggedArray.init","content":"JaggedArray.init \ninit \n\n Creates an jagged array with the given dimensions and a generator function to compute the elements\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#zeroCreate","title":"JaggedArray.zeroCreate","content":"JaggedArray.zeroCreate \nzeroCreate \n\n Creates an jagged array where the entries are initially the default value Unchecked.defaultof\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#copy","title":"JaggedArray.copy","content":"JaggedArray.copy \ncopy \n\n Copies the jagged array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#transpose","title":"JaggedArray.transpose","content":"JaggedArray.transpose \ntranspose \n\n Transposes a jagged array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#toArray2D","title":"JaggedArray.toArray2D","content":"JaggedArray.toArray2D \ntoArray2D \n\n Converts from an Array2D into an jagged array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#ofArray2D","title":"JaggedArray.ofArray2D","content":"JaggedArray.ofArray2D \nofArray2D \n\n Converts a jagged array into an Array2D\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#ofJaggedList","title":"JaggedArray.ofJaggedList","content":"JaggedArray.ofJaggedList \nofJaggedList \n\n Converts a jagged list into a jagged array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#toJaggedList","title":"JaggedArray.toJaggedList","content":"JaggedArray.toJaggedList \ntoJaggedList \n\n Converts a jagged array into a jagged list\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#ofJaggedSeq","title":"JaggedArray.ofJaggedSeq","content":"JaggedArray.ofJaggedSeq \nofJaggedSeq \n\n Converts a jagged Seq into a jagged array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#toJaggedSeq","title":"JaggedArray.toJaggedSeq","content":"JaggedArray.toJaggedSeq \ntoJaggedSeq \n\n Converts a jagged array into a jagged seq\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#map","title":"JaggedArray.map","content":"JaggedArray.map \nmap \n\n Builds a new jagged array whose inner arrays are the results of applying the given function to each of their elements.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#map2","title":"JaggedArray.map2","content":"JaggedArray.map2 \nmap2 \n\n Builds a new jagged array whose inner arrays are the results of applying the given function to the corresponding elements of the inner arrays of the two jagged arrays pairwise. \n All corresponding inner arrays must be of the same length, otherwise ArgumentException is raised.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#map3","title":"JaggedArray.map3","content":"JaggedArray.map3 \nmap3 \n\n Builds a new jagged array whose inner arrays are the results of applying the given function to the corresponding elements of the inner arrays of the tree jagged arrays triplewise. \n All corresponding inner arrays must be of the same length, otherwise ArgumentException is raised.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#mapi","title":"JaggedArray.mapi","content":"JaggedArray.mapi \nmapi \n\nBuilds a new jagged array whose inner arrays are the results of applying the given function to each of their elements. The integer index passed to the function indicates the index of element in the inner array being transformed.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#innerFold","title":"JaggedArray.innerFold","content":"JaggedArray.innerFold \ninnerFold \n\nApplies a function to each element of the inner arrays of the jagged array, threading an accumulator argument through the computation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#fold","title":"JaggedArray.fold","content":"JaggedArray.fold \nfold \n\nApplies a function to each element of the inner arrays of the jagged array, threading an accumulator argument through the computation. \nA second function is the applied to each result of the predeceding computation, again passing an accumulater through the computation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#innerFilter","title":"JaggedArray.innerFilter","content":"JaggedArray.innerFilter \ninnerFilter \n\nReturns a new jagged array whose inner arrays only contain the elements for which the given predicate returns true\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#innerChoose","title":"JaggedArray.innerChoose","content":"JaggedArray.innerChoose \ninnerChoose \n\nApplies the given function to each element in the inner arrays of the jagged array. Returns the jagged array whose inner arrays are comprised of the results x for each element where the function returns Some(x)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#shuffleColumnWiseInPlace","title":"JaggedArray.shuffleColumnWiseInPlace","content":"JaggedArray.shuffleColumnWiseInPlace \nshuffleColumnWiseInPlace \n\n Shuffles each column of a jagged array separately (method: Fisher-Yates) in place\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#shuffleRowWiseInPlace","title":"JaggedArray.shuffleRowWiseInPlace","content":"JaggedArray.shuffleRowWiseInPlace \nshuffleRowWiseInPlace \n\n Shuffles each row of a jagged array separately (method: Fisher-Yates) in place\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#shuffleInPlace","title":"JaggedArray.shuffleInPlace","content":"JaggedArray.shuffleInPlace \nshuffleInPlace \n\n Shuffels a jagged array (method: Fisher-Yates) in place\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#shuffleColumnWise","title":"JaggedArray.shuffleColumnWise","content":"JaggedArray.shuffleColumnWise \nshuffleColumnWise \n\n Shuffles each column of a jagged array separately (method: Fisher-Yates)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#shuffleRowWise","title":"JaggedArray.shuffleRowWise","content":"JaggedArray.shuffleRowWise \nshuffleRowWise \n\n Shuffles each row of a jagged array separately (method: Fisher-Yates)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedarray.html#shuffle","title":"JaggedArray.shuffle","content":"JaggedArray.shuffle \nshuffle \n\n Shuffels a jagged array (method: Fisher-Yates)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html","title":"JaggedList","content":"JaggedList \n \nJaggedList.transpose \ntranspose \nJaggedList.toJaggedList \ntoJaggedList \nJaggedList.ofJaggedArray \nofJaggedArray \nJaggedList.ofJaggedSeq \nofJaggedSeq \nJaggedList.toJaggedSeq \ntoJaggedSeq \nJaggedList.map \nmap \nJaggedList.map2 \nmap2 \nJaggedList.map3 \nmap3 \nJaggedList.mapi \nmapi \nJaggedList.innerFold \ninnerFold \nJaggedList.fold \nfold \nJaggedList.innerFilter \ninnerFilter \nJaggedList.innerChoose \ninnerChoose"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#transpose","title":"JaggedList.transpose","content":"JaggedList.transpose \ntranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#toJaggedList","title":"JaggedList.toJaggedList","content":"JaggedList.toJaggedList \ntoJaggedList \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#ofJaggedArray","title":"JaggedList.ofJaggedArray","content":"JaggedList.ofJaggedArray \nofJaggedArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#ofJaggedSeq","title":"JaggedList.ofJaggedSeq","content":"JaggedList.ofJaggedSeq \nofJaggedSeq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#toJaggedSeq","title":"JaggedList.toJaggedSeq","content":"JaggedList.toJaggedSeq \ntoJaggedSeq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#map","title":"JaggedList.map","content":"JaggedList.map \nmap \n\n Builds a new jagged list whose inner lists are the results of applying the given function to each of their elements.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#map2","title":"JaggedList.map2","content":"JaggedList.map2 \nmap2 \n\n Builds a new jagged list whose inner lists are the results of applying the given function to the corresponding elements of the inner lists of the two jagged lists pairwise. \n All corresponding inner lists must be of the same length, otherwise ArgumentException is raised.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#map3","title":"JaggedList.map3","content":"JaggedList.map3 \nmap3 \n\n Builds a new jagged list whose inner lists are the results of applying the given function to the corresponding elements of the inner lists of the tree jagged lists triplewise. \n All corresponding inner lists must be of the same length, otherwise ArgumentException is raised.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#mapi","title":"JaggedList.mapi","content":"JaggedList.mapi \nmapi \n\nBuilds a new jagged list whose inner lists are the results of applying the given function to each of their elements. The integer index passed to the function indicates the index of element in the inner list being transformed.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#innerFold","title":"JaggedList.innerFold","content":"JaggedList.innerFold \ninnerFold \n\nApplies a function to each element of the inner lists of the jagged list, threading an accumulator argument through the computation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#fold","title":"JaggedList.fold","content":"JaggedList.fold \nfold \n\nApplies a function to each element of the inner lists of the jagged list, threading an accumulator argument through the computation. \nA second function is the applied to each result of the predeceding computation, again passing an accumulater through the computation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#innerFilter","title":"JaggedList.innerFilter","content":"JaggedList.innerFilter \ninnerFilter \n\nReturns a new jagged list whose inner lists only contain the elements for which the given predicate returns true\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-jaggedlist.html#innerChoose","title":"JaggedList.innerChoose","content":"JaggedList.innerChoose \ninnerChoose \n\nApplies the given function to each element in the inner lists of the jagged List. Returns the jagged list whose inner lists are comprised of the results x for each element where the function returns Some(x)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html","title":"LapackMKLStubs","content":"LapackMKLStubs \n\n Warning:\n IMPORTANT WARNING NOTICE:\n INTEL MATH KERNEL LIBRARY 9.1 FOR WINDOWS IS THIRD PARTY TECHNOLOGY.\n IT IS CLEARED ONLY FOR USE BY A SPECIFIC MSR RESEARCH TEAM.\n DO NOT USE IT UNTIL YOU HAVE CLEARED ITS USE FOR YOUR PROJECT WITH YOUR LEGAL CONTACT.\n \n The following stubs bind directly to Intel MKL functionality.\n You should not use them without:\n a) Intel MKL developer licenses.\n b) Seeking local legal approval.\n \nLapackMKLStubs.CBLASLAYOUT \nCBLASLAYOUT \nLapackMKLStubs.CBLASTRANSPOSE \nCBLASTRANSPOSE \nLapackMKLStubs.dgemm_ \ndgemm_ \nLapackMKLStubs.dtrsm_ \ndtrsm_ \nLapackMKLStubs.dgesv_ \ndgesv_ \nLapackMKLStubs.dgeev_ \ndgeev_ \nLapackMKLStubs.dgels_ \ndgels_ \nLapackMKLStubs.dsyev_ \ndsyev_ \nLapackMKLStubs.dgesvd_ \ndgesvd_ \nLapackMKLStubs.dgesdd_ \ndgesdd_ \nLapackMKLStubs.dsygv_ \ndsygv_ \nLapackMKLStubs.dsygvd_ \ndsygvd_ \nLapackMKLStubs.dggev_ \ndggev_ \nLapackMKLStubs.dgesvx_ \ndgesvx_ \nLapackMKLStubs.dposvx_ \ndposvx_ \nLapackMKLStubs.dpotrf_ \ndpotrf_ \nLapackMKLStubs.dgetrf_ \ndgetrf_ \nLapackMKLStubs.dgeqrf_ \ndgeqrf_ \nLapackMKLStubs.dgemv_ \ndgemv_"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgemm_","title":"LapackMKLStubs.dgemm_","content":"LapackMKLStubs.dgemm_ \ndgemm_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dtrsm_","title":"LapackMKLStubs.dtrsm_","content":"LapackMKLStubs.dtrsm_ \ndtrsm_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgesv_","title":"LapackMKLStubs.dgesv_","content":"LapackMKLStubs.dgesv_ \ndgesv_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgeev_","title":"LapackMKLStubs.dgeev_","content":"LapackMKLStubs.dgeev_ \ndgeev_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgels_","title":"LapackMKLStubs.dgels_","content":"LapackMKLStubs.dgels_ \ndgels_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dsyev_","title":"LapackMKLStubs.dsyev_","content":"LapackMKLStubs.dsyev_ \ndsyev_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgesvd_","title":"LapackMKLStubs.dgesvd_","content":"LapackMKLStubs.dgesvd_ \ndgesvd_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgesdd_","title":"LapackMKLStubs.dgesdd_","content":"LapackMKLStubs.dgesdd_ \ndgesdd_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dsygv_","title":"LapackMKLStubs.dsygv_","content":"LapackMKLStubs.dsygv_ \ndsygv_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dsygvd_","title":"LapackMKLStubs.dsygvd_","content":"LapackMKLStubs.dsygvd_ \ndsygvd_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dggev_","title":"LapackMKLStubs.dggev_","content":"LapackMKLStubs.dggev_ \ndggev_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgesvx_","title":"LapackMKLStubs.dgesvx_","content":"LapackMKLStubs.dgesvx_ \ndgesvx_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dposvx_","title":"LapackMKLStubs.dposvx_","content":"LapackMKLStubs.dposvx_ \ndposvx_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dpotrf_","title":"LapackMKLStubs.dpotrf_","content":"LapackMKLStubs.dpotrf_ \ndpotrf_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgetrf_","title":"LapackMKLStubs.dgetrf_","content":"LapackMKLStubs.dgetrf_ \ndgetrf_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgeqrf_","title":"LapackMKLStubs.dgeqrf_","content":"LapackMKLStubs.dgeqrf_ \ndgeqrf_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs.html#dgemv_","title":"LapackMKLStubs.dgemv_","content":"LapackMKLStubs.dgemv_ \ndgemv_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs-cblaslayout.html","title":"CBLASLAYOUT","content":"CBLASLAYOUT \n \nCBLASLAYOUT.CblasRowMajor \nCblasRowMajor \nCBLASLAYOUT.CblasColMajor \nCblasColMajor"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs-cblaslayout.html#CblasRowMajor","title":"CBLASLAYOUT.CblasRowMajor","content":"CBLASLAYOUT.CblasRowMajor \nCblasRowMajor \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs-cblaslayout.html#CblasColMajor","title":"CBLASLAYOUT.CblasColMajor","content":"CBLASLAYOUT.CblasColMajor \nCblasColMajor \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs-cblastranspose.html","title":"CBLASTRANSPOSE","content":"CBLASTRANSPOSE \n \nCBLASTRANSPOSE.CblasNoTrans \nCblasNoTrans \nCBLASTRANSPOSE.CblasTrans \nCblasTrans \nCBLASTRANSPOSE.CblasConjTrans \nCblasConjTrans"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs-cblastranspose.html#CblasNoTrans","title":"CBLASTRANSPOSE.CblasNoTrans","content":"CBLASTRANSPOSE.CblasNoTrans \nCblasNoTrans \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs-cblastranspose.html#CblasTrans","title":"CBLASTRANSPOSE.CblasTrans","content":"CBLASTRANSPOSE.CblasTrans \nCblasTrans \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackmklstubs-cblastranspose.html#CblasConjTrans","title":"CBLASTRANSPOSE.CblasConjTrans","content":"CBLASTRANSPOSE.CblasConjTrans \nCblasConjTrans \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackstubs.html","title":"LapackStubs","content":"LapackStubs \n \nLapackStubs.dgesvd_ \ndgesvd_ \nLapackStubs.dgesdd_ \ndgesdd_ \nLapackStubs.dgeev_ \ndgeev_ \nLapackStubs.dsyevd_ \ndsyevd_"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackstubs.html#dgesvd_","title":"LapackStubs.dgesvd_","content":"LapackStubs.dgesvd_ \ndgesvd_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackstubs.html#dgesdd_","title":"LapackStubs.dgesdd_","content":"LapackStubs.dgesdd_ \ndgesdd_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackstubs.html#dgeev_","title":"LapackStubs.dgeev_","content":"LapackStubs.dgeev_ \ndgeev_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-lapackstubs.html#dsyevd_","title":"LapackStubs.dsyevd_","content":"LapackStubs.dsyevd_ \ndsyevd_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html","title":"List","content":"List \n\n Module to compute common statistical measure on list\n \nList.range \nrange \nList.mean \nmean \nList.median \nmedian \nList.covPopulation \ncovPopulation \nList.covPopulationOfPairs \ncovPopulationOfPairs \nList.covPopulationBy \ncovPopulationBy \nList.cov \ncov \nList.covOfPairs \ncovOfPairs \nList.covBy \ncovBy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html#range","title":"List.range","content":"List.range \nrange \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html#mean","title":"List.mean","content":"List.mean \nmean \n\n computes the population mean (normalized by n)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html#median","title":"List.median","content":"List.median \nmedian \n\n Calculate the median of a list of items.\n The result is a tuple of two items whose mean is the median.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html#covPopulation","title":"List.covPopulation","content":"List.covPopulation \ncovPopulation \n\n   Computes the population covariance of two random variables\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html#covPopulationOfPairs","title":"List.covPopulationOfPairs","content":"List.covPopulationOfPairs \ncovPopulationOfPairs \n\n   Computes the population covariance of two random variables.\n   The covariance will be calculated between the paired observations.\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html#covPopulationBy","title":"List.covPopulationBy","content":"List.covPopulationBy \ncovPopulationBy \n\n   Computes the population covariance of two random variables generated by applying a function to the input list.\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html#cov","title":"List.cov","content":"List.cov \ncov \n\n   Computes the sample covariance of two random variables\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html#covOfPairs","title":"List.covOfPairs","content":"List.covOfPairs \ncovOfPairs \n\n   Computes the sample covariance of two random variables.\n   The covariance will be calculated between the paired observations.    \n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-list.html#covBy","title":"List.covBy","content":"List.covBy \ncovBy \n\n   Computes the sample covariance of two random variables generated by applying a function to the input list.\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-mrandom.html","title":"MRandom","content":"MRandom \n \nMRandom.randomGen \nrandomGen \nMRandom.float \nfloat"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-mrandom.html#randomGen","title":"MRandom.randomGen","content":"MRandom.randomGen \nrandomGen \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-mrandom.html#float","title":"MRandom.float","content":"MRandom.float \nfloat \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html","title":"Matrix","content":"Matrix \n \nMatrix.Generic \nGeneric \nMatrix.DataSource \nDataSource \nMatrix.Orientation \nOrientation \nMatrix.elem \nelem \nMatrix.get \nget \nMatrix.set \nset \nMatrix.init \ninit \nMatrix.ofJaggedList \nofJaggedList \nMatrix.ofJaggedColList \nofJaggedColList \nMatrix.ofJaggedSeq \nofJaggedSeq \nMatrix.ofJaggedColSeq \nofJaggedColSeq \nMatrix.ofJaggedArray \nofJaggedArray \nMatrix.ofJaggedColArray \nofJaggedColArray \nMatrix.ofRows \nofRows \nMatrix.ofCols \nofCols \nMatrix.diag \ndiag \nMatrix.initDiagonal \ninitDiagonal \nMatrix.constDiag \nconstDiag \nMatrix.create \ncreate \nMatrix.ofScalar \nofScalar \nMatrix.ofArray2D \nofArray2D \nMatrix.sparseOfArray2D \nsparseOfArray2D \nMatrix.toArray2D \ntoArray2D \nMatrix.toJaggedArray \ntoJaggedArray \nMatrix.toJaggedColArray \ntoJaggedColArray \nMatrix.toJaggedSeq \ntoJaggedSeq \nMatrix.toJaggedColSeq \ntoJaggedColSeq \nMatrix.getDiagN \ngetDiagN \nMatrix.getDiag \ngetDiag \nMatrix.add \nadd \nMatrix.sub \nsub \nMatrix.mul \nmul \nMatrix.mulV \nmulV \nMatrix.mulRV \nmulRV \nMatrix.cptMul \ncptMul \nMatrix.cptMax \ncptMax \nMatrix.cptMin \ncptMin \nMatrix.scale \nscale \nMatrix.neg \nneg \nMatrix.trace \ntrace \nMatrix.transpose \ntranspose \nMatrix.forall \nforall \nMatrix.exists \nexists \nMatrix.foralli \nforalli \nMatrix.existsi \nexistsi \nMatrix.x \nx \nMatrix.map \nmap \nMatrix.copy \ncopy \nMatrix.mapi \nmapi \nMatrix.fold \nfold \nMatrix.foldi \nfoldi \nMatrix.toDense \ntoDense \nMatrix.toSparse \ntoSparse \nMatrix.initDense \ninitDense \nMatrix.initSparse \ninitSparse \nMatrix.nonzero_entries \nnonzero_entries \nMatrix.zero \nzero \nMatrix.identity \nidentity \nMatrix.ones \nones \nMatrix.getRow \ngetRow \nMatrix.setRow \nsetRow \nMatrix.getCol \ngetCol \nMatrix.setCol \nsetCol \nMatrix.getCols \ngetCols \nMatrix.getRows \ngetRows \nMatrix.countBy \ncountBy \nMatrix.getRegion \ngetRegion \nMatrix.rowRange \nrowRange \nMatrix.colRange \ncolRange \nMatrix.wholeRegion \nwholeRegion \nMatrix.foldByRow \nfoldByRow \nMatrix.foldByCol \nfoldByCol \nMatrix.foldRow \nfoldRow \nMatrix.foldCol \nfoldCol \nMatrix.sum \nsum \nMatrix.prod \nprod \nMatrix.norm \nnorm \nMatrix.dot \ndot \nMatrix.cptPow \ncptPow \nMatrix.randomize \nrandomize \nMatrix.ofRowVector \nofRowVector \nMatrix.ofVector \nofVector \nMatrix.toVector \ntoVector \nMatrix.toRowVector \ntoRowVector \nMatrix.toScalar \ntoScalar \nMatrix.inplaceAdd \ninplaceAdd \nMatrix.inplaceSub \ninplaceSub \nMatrix.inplace_assign \ninplace_assign \nMatrix.inplace_mapi \ninplace_mapi \nMatrix.inplace_cptMul \ninplace_cptMul \nMatrix.inplace_scale \ninplace_scale \nMatrix.inplace_add \ninplace_add \nMatrix.inplace_sub \ninplace_sub \nMatrix.of_rowvec \nof_rowvec \nMatrix.of_vector \nof_vector \nMatrix.to_vector \nto_vector \nMatrix.to_rowvec \nto_rowvec \nMatrix.to_scalar \nto_scalar \nMatrix.of_array2D \nof_array2D \nMatrix.sparse_of_array2D \nsparse_of_array2D \nMatrix.to_array2D \nto_array2D \nMatrix.of_list \nof_list \nMatrix.of_seq \nof_seq \nMatrix.init_diagonal \ninit_diagonal \nMatrix.of_scalar \nof_scalar \nMatrix.to_dense \nto_dense \nMatrix.to_sparse \nto_sparse \nMatrix.init_dense \ninit_dense \nMatrix.init_sparse \ninit_sparse \nMatrix.getUpperTriangular \ngetUpperTriangular \nMatrix.getLowerTriangular \ngetLowerTriangular \nMatrix.toDiagonal \ntoDiagonal \nMatrix.sumRows \nsumRows \nMatrix.sumColumns \nsumColumns \nMatrix.meanRowWise \nmeanRowWise \nMatrix.meanColumnWise \nmeanColumnWise \nMatrix.meanAsSeq \nmeanAsSeq \nMatrix.columnCovarianceMatrixOf \ncolumnCovarianceMatrixOf \nMatrix.columnPopulationCovarianceMatrixOf \ncolumnPopulationCovarianceMatrixOf \nMatrix.columnSampleCovarianceMatrixOf \ncolumnSampleCovarianceMatrixOf \nMatrix.rowPopulationCovarianceMatrixOf \nrowPopulationCovarianceMatrixOf \nMatrix.rowSampleCovarianceMatrixOf \nrowSampleCovarianceMatrixOf \nMatrix.covarianceMatrixOf \ncovarianceMatrixOf \nMatrix.mapRows \nmapRows \nMatrix.enumerateRowWise \nenumerateRowWise \nMatrix.mapiRows \nmapiRows \nMatrix.mapCols \nmapCols \nMatrix.enumerateColumnWise \nenumerateColumnWise \nMatrix.mapiCols \nmapiCols \nMatrix.flattenRowWise \nflattenRowWise \nMatrix.flattenColWise \nflattenColWise \nMatrix.removeRowAt \nremoveRowAt \nMatrix.filterRows \nfilterRows \nMatrix.filterCols \nfilterCols \nMatrix.removeColAt \nremoveColAt \nMatrix.splitRows \nsplitRows \nMatrix.splitCols \nsplitCols"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#get","title":"Matrix.get","content":"Matrix.get \nget \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#set","title":"Matrix.set","content":"Matrix.set \nset \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#init","title":"Matrix.init","content":"Matrix.init \ninit \n\nreturns a dense matrix with m rows and n rows, applying the init function with the two indices as arguments\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofJaggedList","title":"Matrix.ofJaggedList","content":"Matrix.ofJaggedList \nofJaggedList \n\nreturns a dense matrix with the inner lists of the input jagged list as its rows\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofJaggedColList","title":"Matrix.ofJaggedColList","content":"Matrix.ofJaggedColList \nofJaggedColList \n\nreturns a dense matrix with the inner lists of the input jagged list as its columns\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofJaggedSeq","title":"Matrix.ofJaggedSeq","content":"Matrix.ofJaggedSeq \nofJaggedSeq \n\nreturns a dense matrix with the inner sequences of the input jagged sequences as its rows\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofJaggedColSeq","title":"Matrix.ofJaggedColSeq","content":"Matrix.ofJaggedColSeq \nofJaggedColSeq \n\nreturns a dense matrix with the inner sequences of the input jagged sequence as its columns\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofJaggedArray","title":"Matrix.ofJaggedArray","content":"Matrix.ofJaggedArray \nofJaggedArray \n\nreturns a dense matrix with the inner arrays of the input jagged array as its rows\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofJaggedColArray","title":"Matrix.ofJaggedColArray","content":"Matrix.ofJaggedColArray \nofJaggedColArray \n\nreturns a dense matrix with the inner arrays of the input jagged array as its columns\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofRows","title":"Matrix.ofRows","content":"Matrix.ofRows \nofRows \n\nreturns a dense matrix with the inner rowvectors of the input vector as its rows\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofCols","title":"Matrix.ofCols","content":"Matrix.ofCols \nofCols \n\nreturns a dense matrix with the inner vectors of the input rowvector as its columns\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#diag","title":"Matrix.diag","content":"Matrix.diag \ndiag \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#initDiagonal","title":"Matrix.initDiagonal","content":"Matrix.initDiagonal \ninitDiagonal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#constDiag","title":"Matrix.constDiag","content":"Matrix.constDiag \nconstDiag \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#create","title":"Matrix.create","content":"Matrix.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofScalar","title":"Matrix.ofScalar","content":"Matrix.ofScalar \nofScalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofArray2D","title":"Matrix.ofArray2D","content":"Matrix.ofArray2D \nofArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#sparseOfArray2D","title":"Matrix.sparseOfArray2D","content":"Matrix.sparseOfArray2D \nsparseOfArray2D \n\nCreates a sparse matrix based on the CSR format\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toArray2D","title":"Matrix.toArray2D","content":"Matrix.toArray2D \ntoArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toJaggedArray","title":"Matrix.toJaggedArray","content":"Matrix.toJaggedArray \ntoJaggedArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toJaggedColArray","title":"Matrix.toJaggedColArray","content":"Matrix.toJaggedColArray \ntoJaggedColArray \n\n converts the matrix into an array of column arrays\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toJaggedSeq","title":"Matrix.toJaggedSeq","content":"Matrix.toJaggedSeq \ntoJaggedSeq \n\nconverts the matrix into an seq of row seqs\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toJaggedColSeq","title":"Matrix.toJaggedColSeq","content":"Matrix.toJaggedColSeq \ntoJaggedColSeq \n\n converts the matrix into an seq of column seqs\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#getDiagN","title":"Matrix.getDiagN","content":"Matrix.getDiagN \ngetDiagN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#getDiag","title":"Matrix.getDiag","content":"Matrix.getDiag \ngetDiag \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#add","title":"Matrix.add","content":"Matrix.add \nadd \n\n Performs a element wise addition of matrices a and b (a\u002Bb).\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#sub","title":"Matrix.sub","content":"Matrix.sub \nsub \n\n Performs a element wise substraction of matrices a and b (a-b).\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#mul","title":"Matrix.mul","content":"Matrix.mul \nmul \n\n Performs a left sided matrix multiplication of a and b (a*b).\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#mulV","title":"Matrix.mulV","content":"Matrix.mulV \nmulV \n\n Performs a matrix multiplication m*n matrix a and the m*1 vector b (a*b).\n Only usable if column number (n) of the matrix equals the row number (m) of the vector.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#mulRV","title":"Matrix.mulRV","content":"Matrix.mulRV \nmulRV \n\n Performs a matrix multiplication of the 1*n rowvector a and the m*n matrix b (a*b).\n Only usable if column number (n) of the vector equals the row number (m) of the matrix.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#cptMul","title":"Matrix.cptMul","content":"Matrix.cptMul \ncptMul \n\n Performs a element wise multiplication of matrices a and b (a\u002Bb, Hadamard-Product).\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#cptMax","title":"Matrix.cptMax","content":"Matrix.cptMax \ncptMax \n\n Performs a element wise comparison of matrices a and b always preserving the greater value.\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#cptMin","title":"Matrix.cptMin","content":"Matrix.cptMin \ncptMin \n\n Performs a element wise comparison of matrices a and b always preserving the smaller value.\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#scale","title":"Matrix.scale","content":"Matrix.scale \nscale \n\n Builds a new matrix where the elements are the result of multiplying every element of the given matrix with the given value\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#neg","title":"Matrix.neg","content":"Matrix.neg \nneg \n\n Scales matrix a by element wise mulitplication with minus 1.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#trace","title":"Matrix.trace","content":"Matrix.trace \ntrace \n\n Computes the trace of matrix a by summing elements of the diagonal.\n Only usable if matrices a is a square matrix (m*m).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#transpose","title":"Matrix.transpose","content":"Matrix.transpose \ntranspose \n\n Returns the transpose of matrix a\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#forall","title":"Matrix.forall","content":"Matrix.forall \nforall \n\n Iterates the given Matrix row wise and applies function f element wise.\n The iteration stops and returns false if an element fails the condition or true when the end of\n the matrix is reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#exists","title":"Matrix.exists","content":"Matrix.exists \nexists \n\n Iterates the given Matrix row wise and applies function f element wise.\n The iteration stops and returns true if an element satisfies the condition or false when the end of\n the matrix is reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#foralli","title":"Matrix.foralli","content":"Matrix.foralli \nforalli \n\n Iterates the given Matrix row wise and applies function f element wise.\n The iteration stops and returns false if an element fails the condition or true when the end of\n the matrix is reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#existsi","title":"Matrix.existsi","content":"Matrix.existsi \nexistsi \n\n Iterates the given Matrix row wise and applies function f element wise.\n The iteration stops and returns true if an element satisfies the condition or false when the end of\n the matrix is reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#x","title":"Matrix.x","content":"Matrix.x \nx \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#map","title":"Matrix.map","content":"Matrix.map \nmap \n\n Builds a new matrix whose elements are the result of row wise applying the given function on each element of a.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#copy","title":"Matrix.copy","content":"Matrix.copy \ncopy \n\n Builds a new matrix whose elements are identical to the elements of a.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#mapi","title":"Matrix.mapi","content":"Matrix.mapi \nmapi \n\n Builds a new matrix whose elements are the result of row wise applying the given function on each element of a. The integer index\n passed to the function indicates the index (from 0) the of the element being transformed.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#fold","title":"Matrix.fold","content":"Matrix.fold \nfold \n\n Applies a function f row wise to each element of the matrix, threading an accumulator argument through the computation.\n The fold function takes the second argument, and applies the function f to it and the first element of the matrix.\n Then, it feeds this result into the function f along with the second element, and so on. It returns the final result.\n If the input function is f and the elements are i0...iN, then this function computes f (... (f s i0) i1 ...) iN.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#foldi","title":"Matrix.foldi","content":"Matrix.foldi \nfoldi \n\n Applies a function f row wise to each element of the matrix, threading an accumulator argument through the computation.\n The fold function takes the second argument, and applies the function f to it and the first element of the matrix.\n Then, it feeds this result into the function f along with the second element, and so on. It returns the final result.\n If the input function is f and the elements are i0...iN, then this function computes f (... (f s i0) i1 ...) iN.\n The integers indicies passed to the function indicate row and column position (from 0) the of the element being transformed.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toDense","title":"Matrix.toDense","content":"Matrix.toDense \ntoDense \n\n Transforms the matrix a to a dense matrix representation\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toSparse","title":"Matrix.toSparse","content":"Matrix.toSparse \ntoSparse \n\n Transforms the matrix a to a sparse matrix representation\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#initDense","title":"Matrix.initDense","content":"Matrix.initDense \ninitDense \n\n Creates a dense matrix with i rows and j columns. All values are initialized to the value of a.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#initSparse","title":"Matrix.initSparse","content":"Matrix.initSparse \ninitSparse \n\n Creates a sparse matrix with i rows and j columns. All values are initialized to the value of a.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#nonzero_entries","title":"Matrix.nonzero_entries","content":"Matrix.nonzero_entries \nnonzero_entries \n\n Iterates the m*n matrix a row wise and returns a list of tuples (mi,ni,v) containing non zero elements of a\n and their row (m) and column (n) indicies.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#zero","title":"Matrix.zero","content":"Matrix.zero \nzero \n\n Creates a dense matrix with i rows and j columns. All values are initialized to yero (0.).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#identity","title":"Matrix.identity","content":"Matrix.identity \nidentity \n\n Creates a dense identiy m*m matrix. A identity matrix is always squared and the elements are set to zero exept elements\n on the diagonal, which are set to 1.\n e.g.\n [[1.;0.;0.]\n  [0.;1.;0.]\n  [0.;0.;1.]]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ones","title":"Matrix.ones","content":"Matrix.ones \nones \n\n Creates a dense matrix with i rows and j columns. All values are initialized to one (1.).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#getRow","title":"Matrix.getRow","content":"Matrix.getRow \ngetRow \n\n Returns row of index i of matrix a\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#setRow","title":"Matrix.setRow","content":"Matrix.setRow \nsetRow \n\n Replaces row of index i of matrix a with values of vector v, if vector length matches rowsize\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#getCol","title":"Matrix.getCol","content":"Matrix.getCol \ngetCol \n\n Returns col of index j of matrix a\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#setCol","title":"Matrix.setCol","content":"Matrix.setCol \nsetCol \n\n Replaces column of index j of matrix a with values of vector v, if vector length matches columnsize\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#getCols","title":"Matrix.getCols","content":"Matrix.getCols \ngetCols \n\n Accesses the m*n matrix a and returns a total of j2 Columns starting from column index j1. The Result is a new\n m*j2 matrix.\n Only usable if (j1\u002Bj2-1) does not exceed n.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#getRows","title":"Matrix.getRows","content":"Matrix.getRows \ngetRows \n\n Accesses the m*n matrix a and returns a total of i2 rows starting from row index i1. The Result is a new\n i2*n matrix.\n Only usable if (i1\u002Bi2-1) does not exceed m.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#countBy","title":"Matrix.countBy","content":"Matrix.countBy \ncountBy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#getRegion","title":"Matrix.getRegion","content":"Matrix.getRegion \ngetRegion \n\n Accesses the m*n matrix a and returns a total of i2 rows and j2 columns starting from row index i1 and colum index j1. The Result is a new\n i2*j2 matrix.\n Only usable if (i1\u002Bi2-1) does not exceed m and (j1\u002Bj2-1) does not exceed n.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#rowRange","title":"Matrix.rowRange","content":"Matrix.rowRange \nrowRange \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#colRange","title":"Matrix.colRange","content":"Matrix.colRange \ncolRange \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#wholeRegion","title":"Matrix.wholeRegion","content":"Matrix.wholeRegion \nwholeRegion \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#foldByRow","title":"Matrix.foldByRow","content":"Matrix.foldByRow \nfoldByRow \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#foldByCol","title":"Matrix.foldByCol","content":"Matrix.foldByCol \nfoldByCol \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#foldRow","title":"Matrix.foldRow","content":"Matrix.foldRow \nfoldRow \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#foldCol","title":"Matrix.foldCol","content":"Matrix.foldCol \nfoldCol \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#sum","title":"Matrix.sum","content":"Matrix.sum \nsum \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#prod","title":"Matrix.prod","content":"Matrix.prod \nprod \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#norm","title":"Matrix.norm","content":"Matrix.norm \nnorm \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#dot","title":"Matrix.dot","content":"Matrix.dot \ndot \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#cptPow","title":"Matrix.cptPow","content":"Matrix.cptPow \ncptPow \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#randomize","title":"Matrix.randomize","content":"Matrix.randomize \nrandomize \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofRowVector","title":"Matrix.ofRowVector","content":"Matrix.ofRowVector \nofRowVector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#ofVector","title":"Matrix.ofVector","content":"Matrix.ofVector \nofVector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toVector","title":"Matrix.toVector","content":"Matrix.toVector \ntoVector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toRowVector","title":"Matrix.toRowVector","content":"Matrix.toRowVector \ntoRowVector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toScalar","title":"Matrix.toScalar","content":"Matrix.toScalar \ntoScalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#inplaceAdd","title":"Matrix.inplaceAdd","content":"Matrix.inplaceAdd \ninplaceAdd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#inplaceSub","title":"Matrix.inplaceSub","content":"Matrix.inplaceSub \ninplaceSub \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#inplace_assign","title":"Matrix.inplace_assign","content":"Matrix.inplace_assign \ninplace_assign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#inplace_mapi","title":"Matrix.inplace_mapi","content":"Matrix.inplace_mapi \ninplace_mapi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#inplace_cptMul","title":"Matrix.inplace_cptMul","content":"Matrix.inplace_cptMul \ninplace_cptMul \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#inplace_scale","title":"Matrix.inplace_scale","content":"Matrix.inplace_scale \ninplace_scale \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#inplace_add","title":"Matrix.inplace_add","content":"Matrix.inplace_add \ninplace_add \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#inplace_sub","title":"Matrix.inplace_sub","content":"Matrix.inplace_sub \ninplace_sub \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#of_rowvec","title":"Matrix.of_rowvec","content":"Matrix.of_rowvec \nof_rowvec \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#of_vector","title":"Matrix.of_vector","content":"Matrix.of_vector \nof_vector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#to_vector","title":"Matrix.to_vector","content":"Matrix.to_vector \nto_vector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#to_rowvec","title":"Matrix.to_rowvec","content":"Matrix.to_rowvec \nto_rowvec \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#to_scalar","title":"Matrix.to_scalar","content":"Matrix.to_scalar \nto_scalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#of_array2D","title":"Matrix.of_array2D","content":"Matrix.of_array2D \nof_array2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#sparse_of_array2D","title":"Matrix.sparse_of_array2D","content":"Matrix.sparse_of_array2D \nsparse_of_array2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#to_array2D","title":"Matrix.to_array2D","content":"Matrix.to_array2D \nto_array2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#of_list","title":"Matrix.of_list","content":"Matrix.of_list \nof_list \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#of_seq","title":"Matrix.of_seq","content":"Matrix.of_seq \nof_seq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#init_diagonal","title":"Matrix.init_diagonal","content":"Matrix.init_diagonal \ninit_diagonal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#of_scalar","title":"Matrix.of_scalar","content":"Matrix.of_scalar \nof_scalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#to_dense","title":"Matrix.to_dense","content":"Matrix.to_dense \nto_dense \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#to_sparse","title":"Matrix.to_sparse","content":"Matrix.to_sparse \nto_sparse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#init_dense","title":"Matrix.init_dense","content":"Matrix.init_dense \ninit_dense \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#init_sparse","title":"Matrix.init_sparse","content":"Matrix.init_sparse \ninit_sparse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#getUpperTriangular","title":"Matrix.getUpperTriangular","content":"Matrix.getUpperTriangular \ngetUpperTriangular \n\n Returns upper triangular Matrix by setting all values beneath the diagonal to Zero.\n Warning: triangular matrices can only be computed for square input matrices.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#getLowerTriangular","title":"Matrix.getLowerTriangular","content":"Matrix.getLowerTriangular \ngetLowerTriangular \n\n Returns lower triangular Matrix by setting all values beneath the diagonal to Zero.\n Warning: triangular matrices can only be computed for square input matrices.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#toDiagonal","title":"Matrix.toDiagonal","content":"Matrix.toDiagonal \ntoDiagonal \n\n Returns diagonal matrix by setting all values beneath and above the diagonal to Zero.\n Warning: diagonal matrices can only be computed for square input matrices.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#sumRows","title":"Matrix.sumRows","content":"Matrix.sumRows \nsumRows \n\n Computes the row wise sums of a Matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#sumColumns","title":"Matrix.sumColumns","content":"Matrix.sumColumns \nsumColumns \n\n Computes the column wise sums of a Matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#meanRowWise","title":"Matrix.meanRowWise","content":"Matrix.meanRowWise \nmeanRowWise \n\n Computes the row wise mean of a Matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#meanColumnWise","title":"Matrix.meanColumnWise","content":"Matrix.meanColumnWise \nmeanColumnWise \n\n Computes the Column wise mean of a Matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#meanAsSeq","title":"Matrix.meanAsSeq","content":"Matrix.meanAsSeq \nmeanAsSeq \n\nComputes mean in the specified orientation\n orientation - \u0022RowWise\u0022 or \u0022ColWise\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#columnCovarianceMatrixOf","title":"Matrix.columnCovarianceMatrixOf","content":"Matrix.columnCovarianceMatrixOf \ncolumnCovarianceMatrixOf \n\n computes the column specific covariance matrix of a data matrix as described at:\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#columnPopulationCovarianceMatrixOf","title":"Matrix.columnPopulationCovarianceMatrixOf","content":"Matrix.columnPopulationCovarianceMatrixOf \ncolumnPopulationCovarianceMatrixOf \n\n Step 3:\n Then, divide each term in the deviation sums of squares and cross product matrix by n to create the variance-covariance matrix. That is:\n computes the column specific population covariance matrix of a data matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#columnSampleCovarianceMatrixOf","title":"Matrix.columnSampleCovarianceMatrixOf","content":"Matrix.columnSampleCovarianceMatrixOf \ncolumnSampleCovarianceMatrixOf \n\n computes the column specific sample covariance matrix of a data matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#rowPopulationCovarianceMatrixOf","title":"Matrix.rowPopulationCovarianceMatrixOf","content":"Matrix.rowPopulationCovarianceMatrixOf \nrowPopulationCovarianceMatrixOf \n\n computes the row specific population covariance matrix of a data matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#rowSampleCovarianceMatrixOf","title":"Matrix.rowSampleCovarianceMatrixOf","content":"Matrix.rowSampleCovarianceMatrixOf \nrowSampleCovarianceMatrixOf \n\n computes the row specific sample covariance matrix of a data matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#covarianceMatrixOf","title":"Matrix.covarianceMatrixOf","content":"Matrix.covarianceMatrixOf \ncovarianceMatrixOf \n\n computes the orientation and dataSource specific covariance matrix of a dataMatrix\\\n dataSource - \u0022Sample\u0022 or \u0022Population\u0022. \\\n orientation - \u0022RowWise\u0022 or \u0022ColWise\u0022 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#mapRows","title":"Matrix.mapRows","content":"Matrix.mapRows \nmapRows \n\n Applies function f along row axis\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#enumerateRowWise","title":"Matrix.enumerateRowWise","content":"Matrix.enumerateRowWise \nenumerateRowWise \n\n Applies function f along row axis\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#mapiRows","title":"Matrix.mapiRows","content":"Matrix.mapiRows \nmapiRows \n\n Maps every matrix row using the position dependant function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#mapCols","title":"Matrix.mapCols","content":"Matrix.mapCols \nmapCols \n\n Applies function f along column axis\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#enumerateColumnWise","title":"Matrix.enumerateColumnWise","content":"Matrix.enumerateColumnWise \nenumerateColumnWise \n\n Applies function f along column axis\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#mapiCols","title":"Matrix.mapiCols","content":"Matrix.mapiCols \nmapiCols \n\n Maps every matrix column using the position dependant function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#flattenRowWise","title":"Matrix.flattenRowWise","content":"Matrix.flattenRowWise \nflattenRowWise \n\n Iterates the given Matrix row wise and places every element in a new vector with length n*m.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#flattenColWise","title":"Matrix.flattenColWise","content":"Matrix.flattenColWise \nflattenColWise \n\n Iterates the given Matrix column wise and places every element in a new vector with length n*m.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#removeRowAt","title":"Matrix.removeRowAt","content":"Matrix.removeRowAt \nremoveRowAt \n\n Removes a row at a given index\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#filterRows","title":"Matrix.filterRows","content":"Matrix.filterRows \nfilterRows \n\n Returns a matrix without the rows for which the given predicate returns false\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#filterCols","title":"Matrix.filterCols","content":"Matrix.filterCols \nfilterCols \n\n Returns a matrix without the cols for which the given predicate returns false\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#removeColAt","title":"Matrix.removeColAt","content":"Matrix.removeColAt \nremoveColAt \n\n Removes a column at a given index\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#splitRows","title":"Matrix.splitRows","content":"Matrix.splitRows \nsplitRows \n\n Splits a matrix along row direction according to given indices. Returns (matrix including rows according to indices, rest)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule.html#splitCols","title":"Matrix.splitCols","content":"Matrix.splitCols \nsplitCols \n\n Splits a matrix along column direction according to given indices. Returns (matrix including cols according to indices, rest)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html","title":"Generic","content":"Generic \n \nGeneric.get \nget \nGeneric.set \nset \nGeneric.ofList \nofList \nGeneric.ofSeq \nofSeq \nGeneric.ofColSeq \nofColSeq \nGeneric.init \ninit \nGeneric.ofArray2D \nofArray2D \nGeneric.sparseOfArray2D \nsparseOfArray2D \nGeneric.toArray2D \ntoArray2D \nGeneric.toJaggedArray \ntoJaggedArray \nGeneric.toJaggedColArray \ntoJaggedColArray \nGeneric.toJaggedSeq \ntoJaggedSeq \nGeneric.toJaggedColSeq \ntoJaggedColSeq \nGeneric.initNumeric \ninitNumeric \nGeneric.zero \nzero \nGeneric.zeroCreate \nzeroCreate \nGeneric.identity \nidentity \nGeneric.create \ncreate \nGeneric.ofScalar \nofScalar \nGeneric.diag \ndiag \nGeneric.initDiagonal \ninitDiagonal \nGeneric.constDiag \nconstDiag \nGeneric.add \nadd \nGeneric.sub \nsub \nGeneric.mul \nmul \nGeneric.mulRV \nmulRV \nGeneric.mulV \nmulV \nGeneric.cptMul \ncptMul \nGeneric.cptMax \ncptMax \nGeneric.cptMin \ncptMin \nGeneric.scale \nscale \nGeneric.dot \ndot \nGeneric.neg \nneg \nGeneric.trace \ntrace \nGeneric.sum \nsum \nGeneric.prod \nprod \nGeneric.norm \nnorm \nGeneric.transpose \ntranspose \nGeneric.inplaceAdd \ninplaceAdd \nGeneric.inplaceSub \ninplaceSub \nGeneric.exists \nexists \nGeneric.forall \nforall \nGeneric.existsi \nexistsi \nGeneric.foralli \nforalli \nGeneric.map \nmap \nGeneric.copy \ncopy \nGeneric.mapi \nmapi \nGeneric.getDiagN \ngetDiagN \nGeneric.getDiag \ngetDiag \nGeneric.toDense \ntoDense \nGeneric.toSparse \ntoSparse \nGeneric.initDense \ninitDense \nGeneric.initSparse \ninitSparse \nGeneric.fold \nfold \nGeneric.foldi \nfoldi \nGeneric.compare \ncompare \nGeneric.hash \nhash \nGeneric.getRow \ngetRow \nGeneric.setRow \nsetRow \nGeneric.getCol \ngetCol \nGeneric.setCol \nsetCol \nGeneric.getCols \ngetCols \nGeneric.getRows \ngetRows \nGeneric.getRegion \ngetRegion \nGeneric.ofRowVector \nofRowVector \nGeneric.ofVector \nofVector \nGeneric.toVector \ntoVector \nGeneric.toRowVector \ntoRowVector \nGeneric.toScalar \ntoScalar \nGeneric.inplace_assign \ninplace_assign \nGeneric.inplace_cptMul \ninplace_cptMul \nGeneric.inplace_scale \ninplace_scale \nGeneric.inplace_map \ninplace_map \nGeneric.inplace_mapi \ninplace_mapi \nGeneric.of_rowvec \nof_rowvec \nGeneric.of_vector \nof_vector \nGeneric.to_vector \nto_vector \nGeneric.to_rowvec \nto_rowvec \nGeneric.to_scalar \nto_scalar \nGeneric.inplace_add \ninplace_add \nGeneric.inplace_sub \ninplace_sub \nGeneric.of_scalar \nof_scalar \nGeneric.of_list \nof_list \nGeneric.of_seq \nof_seq \nGeneric.of_array2D \nof_array2D \nGeneric.sparse_of_array2D \nsparse_of_array2D \nGeneric.to_array2D \nto_array2D \nGeneric.init_diagonal \ninit_diagonal \nGeneric.to_dense \nto_dense \nGeneric.to_sparse \nto_sparse \nGeneric.init_dense \ninit_dense \nGeneric.init_sparse \ninit_sparse \nGeneric.nonzeroEntries \nnonzeroEntries \nGeneric.nonzero_entries \nnonzero_entries \nGeneric.enumerateRowWise \nenumerateRowWise \nGeneric.mapRows \nmapRows \nGeneric.mapiRows \nmapiRows \nGeneric.enumerateColumnWise \nenumerateColumnWise \nGeneric.mapCols \nmapCols \nGeneric.mapiCols \nmapiCols \nGeneric.flattenRowWise \nflattenRowWise \nGeneric.flattenColWise \nflattenColWise"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#get","title":"Generic.get","content":"Generic.get \nget \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#set","title":"Generic.set","content":"Generic.set \nset \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#ofList","title":"Generic.ofList","content":"Generic.ofList \nofList \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#ofSeq","title":"Generic.ofSeq","content":"Generic.ofSeq \nofSeq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#ofColSeq","title":"Generic.ofColSeq","content":"Generic.ofColSeq \nofColSeq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#init","title":"Generic.init","content":"Generic.init \ninit \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#ofArray2D","title":"Generic.ofArray2D","content":"Generic.ofArray2D \nofArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#sparseOfArray2D","title":"Generic.sparseOfArray2D","content":"Generic.sparseOfArray2D \nsparseOfArray2D \n\nCreates a sparse matrix based on the CSR format\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toArray2D","title":"Generic.toArray2D","content":"Generic.toArray2D \ntoArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toJaggedArray","title":"Generic.toJaggedArray","content":"Generic.toJaggedArray \ntoJaggedArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toJaggedColArray","title":"Generic.toJaggedColArray","content":"Generic.toJaggedColArray \ntoJaggedColArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toJaggedSeq","title":"Generic.toJaggedSeq","content":"Generic.toJaggedSeq \ntoJaggedSeq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toJaggedColSeq","title":"Generic.toJaggedColSeq","content":"Generic.toJaggedColSeq \ntoJaggedColSeq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#initNumeric","title":"Generic.initNumeric","content":"Generic.initNumeric \ninitNumeric \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#zero","title":"Generic.zero","content":"Generic.zero \nzero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#zeroCreate","title":"Generic.zeroCreate","content":"Generic.zeroCreate \nzeroCreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#identity","title":"Generic.identity","content":"Generic.identity \nidentity \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#create","title":"Generic.create","content":"Generic.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#ofScalar","title":"Generic.ofScalar","content":"Generic.ofScalar \nofScalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#diag","title":"Generic.diag","content":"Generic.diag \ndiag \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#initDiagonal","title":"Generic.initDiagonal","content":"Generic.initDiagonal \ninitDiagonal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#constDiag","title":"Generic.constDiag","content":"Generic.constDiag \nconstDiag \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#add","title":"Generic.add","content":"Generic.add \nadd \n\n Performs a element wise addition of matrices matrix1 and matrix2 (matrix1 \u002B matrix2).\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#sub","title":"Generic.sub","content":"Generic.sub \nsub \n\n Performs a element wise substraction of matrices matrix1 and matrix2 (matrix1 - matrix2).\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#mul","title":"Generic.mul","content":"Generic.mul \nmul \n\n Performs a left sided matrix multiplication of matrices matrix1 and matrix2 (matrix1 * matrix2).\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#mulRV","title":"Generic.mulRV","content":"Generic.mulRV \nmulRV \n\n Performs a matrix multiplication of the 1*n rowVector and the m*n matrix (rowVector*matrix).\n Only usable if column number (n) of the vector equals the row number (m) of the matrix.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#mulV","title":"Generic.mulV","content":"Generic.mulV \nmulV \n\n Performs a matrix multiplication of a m*n matrix and the m*1 vector (matrix*vector).\n Only usable if column number (n) of the matrix equals the row number (m) of the vector.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#cptMul","title":"Generic.cptMul","content":"Generic.cptMul \ncptMul \n\n Performs a element wise multiplication of matrices matrix1 and matrix2 (matrix1 * matrix2, Hadamard-Product).\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#cptMax","title":"Generic.cptMax","content":"Generic.cptMax \ncptMax \n\n Performs a element wise comparison of matrices matrix1 and matrix2 always preserving the greater value.\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#cptMin","title":"Generic.cptMin","content":"Generic.cptMin \ncptMin \n\n Performs a element wise comparison of matrices matrix1 and matrix2 always preserving the smaller value.\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#scale","title":"Generic.scale","content":"Generic.scale \nscale \n\n Builds a new matrix where the elements are the result of multiplying every element of the given matrix with the given value\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#dot","title":"Generic.dot","content":"Generic.dot \ndot \n\n Performs a dot product of matrices matrix1 and matrix2.\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#neg","title":"Generic.neg","content":"Generic.neg \nneg \n\n Scales the matrix by element wise mulitplication with minus 1.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#trace","title":"Generic.trace","content":"Generic.trace \ntrace \n\n Computes the trace of the matrix by summing elements of the diagonal.\n Only usable if the matrix is a square matrix (m*m).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#sum","title":"Generic.sum","content":"Generic.sum \nsum \n\n Computes the sum of all matrix elements.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#prod","title":"Generic.prod","content":"Generic.prod \nprod \n\n Computes the product of all matrix elements.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#norm","title":"Generic.norm","content":"Generic.norm \nnorm \n\nFrobenius matrix norm\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#transpose","title":"Generic.transpose","content":"Generic.transpose \ntranspose \n\n Returns the transpose of the matrix.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#inplaceAdd","title":"Generic.inplaceAdd","content":"Generic.inplaceAdd \ninplaceAdd \n\n Performs an element wise addition of matrices matrix1 and matrix2 (matrix1 \u002B matrix2).\n Attention: the output overrides matrix1.\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#inplaceSub","title":"Generic.inplaceSub","content":"Generic.inplaceSub \ninplaceSub \n\n Performs an element wise substraction of matrices matrix1 and matrix2 (matrix1 - matrix2).\n Attention: the output overrides matrix1.\n Only usable if both matrices have the same dimensions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#exists","title":"Generic.exists","content":"Generic.exists \nexists \n\n Iterates the given Matrix row wise and applies the function predicate element wise.\n The iteration stops and returns true if an element satisfies the condition or false when the end of\n the matrix is reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#forall","title":"Generic.forall","content":"Generic.forall \nforall \n\n Iterates the given Matrix row wise and applies the function predicate element wise.\n The iteration stops and returns false if an element fails the condition or true when the end of\n the matrix is reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#existsi","title":"Generic.existsi","content":"Generic.existsi \nexistsi \n\n Iterates the given Matrix row wise and applies the function predicate element wise.\n The iteration stops and returns true if an element satisfies the condition or false when the end of\n the matrix is reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#foralli","title":"Generic.foralli","content":"Generic.foralli \nforalli \n\n Iterates the given Matrix row wise and applies the function predicate element wise.\n The iteration stops and returns false if an element fails the condition or true when the end of\n the matrix is reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#map","title":"Generic.map","content":"Generic.map \nmap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#copy","title":"Generic.copy","content":"Generic.copy \ncopy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#mapi","title":"Generic.mapi","content":"Generic.mapi \nmapi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#getDiagN","title":"Generic.getDiagN","content":"Generic.getDiagN \ngetDiagN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#getDiag","title":"Generic.getDiag","content":"Generic.getDiag \ngetDiag \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toDense","title":"Generic.toDense","content":"Generic.toDense \ntoDense \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toSparse","title":"Generic.toSparse","content":"Generic.toSparse \ntoSparse \n\nCreates a sparse matrix based on the CSR format\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#initDense","title":"Generic.initDense","content":"Generic.initDense \ninitDense \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#initSparse","title":"Generic.initSparse","content":"Generic.initSparse \ninitSparse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#fold","title":"Generic.fold","content":"Generic.fold \nfold \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#foldi","title":"Generic.foldi","content":"Generic.foldi \nfoldi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#compare","title":"Generic.compare","content":"Generic.compare \ncompare \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#hash","title":"Generic.hash","content":"Generic.hash \nhash \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#getRow","title":"Generic.getRow","content":"Generic.getRow \ngetRow \n\nReturns row of given index of a matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#setRow","title":"Generic.setRow","content":"Generic.setRow \nsetRow \n\nReplaces row of given index of a matrix with values of a vector, if vector length matches rowsize\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#getCol","title":"Generic.getCol","content":"Generic.getCol \ngetCol \n\nReturns col of given index of a matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#setCol","title":"Generic.setCol","content":"Generic.setCol \nsetCol \n\nReplaces column of given index of a matrix with values of a vector, if vector length matches columnsize\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#getCols","title":"Generic.getCols","content":"Generic.getCols \ngetCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#getRows","title":"Generic.getRows","content":"Generic.getRows \ngetRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#getRegion","title":"Generic.getRegion","content":"Generic.getRegion \ngetRegion \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#ofRowVector","title":"Generic.ofRowVector","content":"Generic.ofRowVector \nofRowVector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#ofVector","title":"Generic.ofVector","content":"Generic.ofVector \nofVector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toVector","title":"Generic.toVector","content":"Generic.toVector \ntoVector \n\n takes the first column of the matrix as vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toRowVector","title":"Generic.toRowVector","content":"Generic.toRowVector \ntoRowVector \n\n takes the first row of the matrix as rowvector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#toScalar","title":"Generic.toScalar","content":"Generic.toScalar \ntoScalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#inplace_assign","title":"Generic.inplace_assign","content":"Generic.inplace_assign \ninplace_assign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#inplace_cptMul","title":"Generic.inplace_cptMul","content":"Generic.inplace_cptMul \ninplace_cptMul \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#inplace_scale","title":"Generic.inplace_scale","content":"Generic.inplace_scale \ninplace_scale \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#inplace_map","title":"Generic.inplace_map","content":"Generic.inplace_map \ninplace_map \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#inplace_mapi","title":"Generic.inplace_mapi","content":"Generic.inplace_mapi \ninplace_mapi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#of_rowvec","title":"Generic.of_rowvec","content":"Generic.of_rowvec \nof_rowvec \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#of_vector","title":"Generic.of_vector","content":"Generic.of_vector \nof_vector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#to_vector","title":"Generic.to_vector","content":"Generic.to_vector \nto_vector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#to_rowvec","title":"Generic.to_rowvec","content":"Generic.to_rowvec \nto_rowvec \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#to_scalar","title":"Generic.to_scalar","content":"Generic.to_scalar \nto_scalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#inplace_add","title":"Generic.inplace_add","content":"Generic.inplace_add \ninplace_add \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#inplace_sub","title":"Generic.inplace_sub","content":"Generic.inplace_sub \ninplace_sub \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#of_scalar","title":"Generic.of_scalar","content":"Generic.of_scalar \nof_scalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#of_list","title":"Generic.of_list","content":"Generic.of_list \nof_list \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#of_seq","title":"Generic.of_seq","content":"Generic.of_seq \nof_seq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#of_array2D","title":"Generic.of_array2D","content":"Generic.of_array2D \nof_array2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#sparse_of_array2D","title":"Generic.sparse_of_array2D","content":"Generic.sparse_of_array2D \nsparse_of_array2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#to_array2D","title":"Generic.to_array2D","content":"Generic.to_array2D \nto_array2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#init_diagonal","title":"Generic.init_diagonal","content":"Generic.init_diagonal \ninit_diagonal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#to_dense","title":"Generic.to_dense","content":"Generic.to_dense \nto_dense \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#to_sparse","title":"Generic.to_sparse","content":"Generic.to_sparse \nto_sparse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#init_dense","title":"Generic.init_dense","content":"Generic.init_dense \ninit_dense \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#init_sparse","title":"Generic.init_sparse","content":"Generic.init_sparse \ninit_sparse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#nonzeroEntries","title":"Generic.nonzeroEntries","content":"Generic.nonzeroEntries \nnonzeroEntries \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#nonzero_entries","title":"Generic.nonzero_entries","content":"Generic.nonzero_entries \nnonzero_entries \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#enumerateRowWise","title":"Generic.enumerateRowWise","content":"Generic.enumerateRowWise \nenumerateRowWise \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#mapRows","title":"Generic.mapRows","content":"Generic.mapRows \nmapRows \n\n Applies mapping function along row axis\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#mapiRows","title":"Generic.mapiRows","content":"Generic.mapiRows \nmapiRows \n\n Maps every matrix row using the position dependent function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#enumerateColumnWise","title":"Generic.enumerateColumnWise","content":"Generic.enumerateColumnWise \nenumerateColumnWise \n\n Applies function f along column axis\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#mapCols","title":"Generic.mapCols","content":"Generic.mapCols \nmapCols \n\n Applies mapping function along column axis\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#mapiCols","title":"Generic.mapiCols","content":"Generic.mapiCols \nmapiCols \n\n Maps every matrix column using the position dependant function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#flattenRowWise","title":"Generic.flattenRowWise","content":"Generic.flattenRowWise \nflattenRowWise \n\n Iterates the given Matrix row wise and places every element in a new vector with length n*m.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-generic.html#flattenColWise","title":"Generic.flattenColWise","content":"Generic.flattenColWise \nflattenColWise \n\n Iterates the given Matrix column wise and places every element in a new vector with length n*m.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-datasource.html","title":"DataSource","content":"DataSource \n \nDataSource.Sample \nSample \nDataSource.Population \nPopulation"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-datasource.html#Sample","title":"DataSource.Sample","content":"DataSource.Sample \nSample \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-datasource.html#Population","title":"DataSource.Population","content":"DataSource.Population \nPopulation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-orientation.html","title":"Orientation","content":"Orientation \n \nOrientation.Inverse \nInverse \nOrientation.inverse \ninverse \nOrientation.RowWise \nRowWise \nOrientation.ColWise \nColWise"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-orientation.html#Inverse","title":"Orientation.Inverse","content":"Orientation.Inverse \nInverse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-orientation.html#inverse","title":"Orientation.inverse","content":"Orientation.inverse \ninverse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-orientation.html#RowWise","title":"Orientation.RowWise","content":"Orientation.RowWise \nRowWise \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-orientation.html#ColWise","title":"Orientation.ColWise","content":"Orientation.ColWise \nColWise \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixmodule-elem.html","title":"elem","content":"elem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html","title":"MatrixExtension","content":"MatrixExtension \n \nMatrixExtension.ToArray2 \nToArray2 \nMatrixExtension.ToArray2D \nToArray2D \nMatrixExtension.NonZeroEntries \nNonZeroEntries \nMatrixExtension.NonZeroEntries \nNonZeroEntries \nMatrixExtension.ToScalar \nToScalar \nMatrixExtension.ToRowVector \nToRowVector \nMatrixExtension.ToVector \nToVector \nMatrixExtension.Norm \nNorm \nMatrixExtension.Norm \nNorm \nMatrixExtension.Column \nColumn \nMatrixExtension.Row \nRow \nMatrixExtension.Columns \nColumns \nMatrixExtension.Rows \nRows \nMatrixExtension.Region \nRegion \nMatrixExtension.GetDiagonal \nGetDiagonal \nMatrixExtension.Diagonal \nDiagonal \nMatrixExtension.Diagonal \nDiagonal \nMatrixExtension.Copy \nCopy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#ToArray2","title":"MatrixExtension.ToArray2","content":"MatrixExtension.ToArray2 \nToArray2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#ToArray2D","title":"MatrixExtension.ToArray2D","content":"MatrixExtension.ToArray2D \nToArray2D \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#NonZeroEntries","title":"MatrixExtension.NonZeroEntries","content":"MatrixExtension.NonZeroEntries \nNonZeroEntries \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#NonZeroEntries","title":"MatrixExtension.NonZeroEntries","content":"MatrixExtension.NonZeroEntries \nNonZeroEntries \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#ToScalar","title":"MatrixExtension.ToScalar","content":"MatrixExtension.ToScalar \nToScalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#ToRowVector","title":"MatrixExtension.ToRowVector","content":"MatrixExtension.ToRowVector \nToRowVector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#ToVector","title":"MatrixExtension.ToVector","content":"MatrixExtension.ToVector \nToVector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Norm","title":"MatrixExtension.Norm","content":"MatrixExtension.Norm \nNorm \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Norm","title":"MatrixExtension.Norm","content":"MatrixExtension.Norm \nNorm \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Column","title":"MatrixExtension.Column","content":"MatrixExtension.Column \nColumn \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Row","title":"MatrixExtension.Row","content":"MatrixExtension.Row \nRow \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Columns","title":"MatrixExtension.Columns","content":"MatrixExtension.Columns \nColumns \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Rows","title":"MatrixExtension.Rows","content":"MatrixExtension.Rows \nRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Region","title":"MatrixExtension.Region","content":"MatrixExtension.Region \nRegion \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#GetDiagonal","title":"MatrixExtension.GetDiagonal","content":"MatrixExtension.GetDiagonal \nGetDiagonal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Diagonal","title":"MatrixExtension.Diagonal","content":"MatrixExtension.Diagonal \nDiagonal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Diagonal","title":"MatrixExtension.Diagonal","content":"MatrixExtension.Diagonal \nDiagonal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixextension.html#Copy","title":"MatrixExtension.Copy","content":"MatrixExtension.Copy \nCopy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixtopleveloperators.html","title":"MatrixTopLevelOperators","content":"MatrixTopLevelOperators \n \nMatrixTopLevelOperators.matrix \nmatrix \nMatrixTopLevelOperators.vector \nvector \nMatrixTopLevelOperators.rowvec \nrowvec"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixtopleveloperators.html#matrix","title":"MatrixTopLevelOperators.matrix","content":"MatrixTopLevelOperators.matrix \nmatrix \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixtopleveloperators.html#vector","title":"MatrixTopLevelOperators.vector","content":"MatrixTopLevelOperators.vector \nvector \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrixtopleveloperators.html#rowvec","title":"MatrixTopLevelOperators.rowvec","content":"MatrixTopLevelOperators.rowvec \nrowvec \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-numericliteraln.html","title":"NumericLiteralN","content":"NumericLiteralN \n \nNumericLiteralN.FromZero \nFromZero \nNumericLiteralN.FromOne \nFromOne \nNumericLiteralN.FromInt32 \nFromInt32 \nNumericLiteralN.FromInt64 \nFromInt64 \nNumericLiteralN.FromString \nFromString"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-numericliteraln.html#FromZero","title":"NumericLiteralN.FromZero","content":"NumericLiteralN.FromZero \nFromZero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-numericliteraln.html#FromOne","title":"NumericLiteralN.FromOne","content":"NumericLiteralN.FromOne \nFromOne \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-numericliteraln.html#FromInt32","title":"NumericLiteralN.FromInt32","content":"NumericLiteralN.FromInt32 \nFromInt32 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-numericliteraln.html#FromInt64","title":"NumericLiteralN.FromInt64","content":"NumericLiteralN.FromInt64 \nFromInt64 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-numericliteraln.html#FromString","title":"NumericLiteralN.FromString","content":"NumericLiteralN.FromString \nFromString \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html","title":"Ops","content":"Ops \n\n Operations module (automatically opened)\n \nOps.pi \npi \nOps.inf \ninf \nOps.infNeg \ninfNeg \nOps.epsilon \nepsilon \nOps.logMax \nlogMax \nOps.logMin \nlogMin \nOps.log2 \nlog2 \nOps.log10 \nlog10 \nOps.isNan \nisNan \nOps.isInf \nisInf \nOps.isPosInf \nisPosInf \nOps.isNegInf \nisNegInf \nOps.revLog2 \nrevLog2 \nOps.square \nsquare \nOps.arsinh \narsinh \nOps.round \nround \nOps.signum \nsignum \nOps.retype \nretype \nOps.multByInt32 \nmultByInt32 \nOps.nthroot \nnthroot"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#pi","title":"Ops.pi","content":"Ops.pi \npi \n\n The constant pi = 3.141596...\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#inf","title":"Ops.inf","content":"Ops.inf \ninf \n\n Float positive infinity.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#infNeg","title":"Ops.infNeg","content":"Ops.infNeg \ninfNeg \n\n Float negative infinity.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#epsilon","title":"Ops.epsilon","content":"Ops.epsilon \nepsilon \n\n   Double-precision machine round-off error.\n  \n\n   This value is actually different from Double.Epsilon. It\n   is defined as 1.11022302462515654042E-16.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#logMax","title":"Ops.logMax","content":"Ops.logMax \nlogMax \n\n   Maximum log (def: 7.09782712893383996732E2).\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#logMin","title":"Ops.logMin","content":"Ops.logMin \nlogMin \n\n   Minimum log (def: -7.451332191019412076235E2)\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#log2","title":"Ops.log2","content":"Ops.log2 \nlog2 \n\n Returns the logarithm for x in base 2.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#log10","title":"Ops.log10","content":"Ops.log10 \nlog10 \n\n Returns the logarithm for x in base 10.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#isNan","title":"Ops.isNan","content":"Ops.isNan \nisNan \n\n Returs true if x is nan (generics) equality\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#isInf","title":"Ops.isInf","content":"Ops.isInf \nisInf \n\n Returs true if x is infinity (generics)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#isPosInf","title":"Ops.isPosInf","content":"Ops.isPosInf \nisPosInf \n\n Returs true if x is positive infinity (generics)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#isNegInf","title":"Ops.isNegInf","content":"Ops.isNegInf \nisNegInf \n\n Returs true if x is positive infinity (generics)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#revLog2","title":"Ops.revLog2","content":"Ops.revLog2 \nrevLog2 \n\n Returns the reverted log2 (2^x)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#square","title":"Ops.square","content":"Ops.square \nsquare \n\n Returns x squared (x^2)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#arsinh","title":"Ops.arsinh","content":"Ops.arsinh \narsinh \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#round","title":"Ops.round","content":"Ops.round \nround \n\n Rounds a double-precision floating-point value to a specified number of fractional digits.  \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#signum","title":"Ops.signum","content":"Ops.signum \nsignum \n\n Signum function, assigns a positive sign to a with respect to the signing of b. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#retype","title":"Ops.retype","content":"Ops.retype \nretype \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#multByInt32","title":"Ops.multByInt32","content":"Ops.multByInt32 \nmultByInt32 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ops.html#nthroot","title":"Ops.nthroot","content":"Ops.nthroot \nnthroot \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html","title":"Permutation","content":"Permutation \n \nPermutation.invalidArg \ninvalidArg \nPermutation.ofFreshArray \nofFreshArray \nPermutation.ofArray \nofArray \nPermutation.of_array \nof_array \nPermutation.ofPairs \nofPairs \nPermutation.of_pairs \nof_pairs \nPermutation.swap \nswap \nPermutation.reversal \nreversal \nPermutation.rotation \nrotation \nPermutation.identity \nidentity \nPermutation.inverse \ninverse"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#invalidArg","title":"Permutation.invalidArg","content":"Permutation.invalidArg \ninvalidArg \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#ofFreshArray","title":"Permutation.ofFreshArray","content":"Permutation.ofFreshArray \nofFreshArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#ofArray","title":"Permutation.ofArray","content":"Permutation.ofArray \nofArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#of_array","title":"Permutation.of_array","content":"Permutation.of_array \nof_array \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#ofPairs","title":"Permutation.ofPairs","content":"Permutation.ofPairs \nofPairs \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#of_pairs","title":"Permutation.of_pairs","content":"Permutation.of_pairs \nof_pairs \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#swap","title":"Permutation.swap","content":"Permutation.swap \nswap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#reversal","title":"Permutation.reversal","content":"Permutation.reversal \nreversal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#rotation","title":"Permutation.rotation","content":"Permutation.rotation \nrotation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#identity","title":"Permutation.identity","content":"Permutation.identity \nidentity \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutationmodule.html#inverse","title":"Permutation.inverse","content":"Permutation.inverse \ninverse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-precision.html","title":"Precision","content":"Precision \n\n Module to estimate different quantile measures\n \nPrecision.almostEqualNormRelative \nalmostEqualNormRelative \nPrecision.almostEqualNorm \nalmostEqualNorm"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-precision.html#almostEqualNormRelative","title":"Precision.almostEqualNormRelative","content":"Precision.almostEqualNormRelative \nalmostEqualNormRelative \n\n Compares two float values and determines if they differ by no more than specified by the maximum error.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-precision.html#almostEqualNorm","title":"Precision.almostEqualNorm","content":"Precision.almostEqualNorm \nalmostEqualNorm \n\n Compares two float values and determines if they differ by no more than 10.*(2.**(-52.).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-providerservice.html","title":"ProviderService","content":"ProviderService \n \nProviderService.MKLProvider \nMKLProvider \nProviderService.LAPACKProvider \nLAPACKProvider"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-providerservice.html#MKLProvider","title":"ProviderService.MKLProvider","content":"ProviderService.MKLProvider \nMKLProvider \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-providerservice.html#LAPACKProvider","title":"ProviderService.LAPACKProvider","content":"ProviderService.LAPACKProvider \nLAPACKProvider \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html","title":"Quantile","content":"Quantile \n\n Module to estimate different quantile measures\n \nQuantile.InPlace \nInPlace \nQuantile.OfSorted \nOfSorted \nQuantile.QuantileFunction\u003C\u0027a\u003E \nQuantileFunction\u003C\u0027a\u003E \nQuantile.compute \ncompute \nQuantile.empiricalInvCdf \nempiricalInvCdf \nQuantile.empiricalInvCdfAverage \nempiricalInvCdfAverage \nQuantile.nearest \nnearest \nQuantile.california \ncalifornia \nQuantile.hazen \nhazen \nQuantile.nist \nnist \nQuantile.mode \nmode \nQuantile.normal \nnormal \nQuantile.interQuantileRange \ninterQuantileRange \nQuantile.computePercentiles \ncomputePercentiles"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#compute","title":"Quantile.compute","content":"Quantile.compute \ncompute \n\n Estimates the q-th quantile from the unsorted data.\n Approximately median-unbiased regardless of the sample distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#empiricalInvCdf","title":"Quantile.empiricalInvCdf","content":"Quantile.empiricalInvCdf \nempiricalInvCdf \n\n Estimates the q-th quantile from the unsorted data.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#empiricalInvCdfAverage","title":"Quantile.empiricalInvCdfAverage","content":"Quantile.empiricalInvCdfAverage \nempiricalInvCdfAverage \n\n Estimates the q-th quantile from the unsorted data.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#nearest","title":"Quantile.nearest","content":"Quantile.nearest \nnearest \n\n Estimates the q-th quantile from the unsorted data.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#california","title":"Quantile.california","content":"Quantile.california \ncalifornia \n\n Estimates the q-th quantile from the unsorted data.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#hazen","title":"Quantile.hazen","content":"Quantile.hazen \nhazen \n\n Estimates the q-th quantile from the unsorted data.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#nist","title":"Quantile.nist","content":"Quantile.nist \nnist \n\n Estimates the q-th quantile from the unsorted data.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#mode","title":"Quantile.mode","content":"Quantile.mode \nmode \n\n Estimates the q-th quantile from the unsorted data.\n R! default\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#normal","title":"Quantile.normal","content":"Quantile.normal \nnormal \n\n Estimates the q-th quantile from the unsorted data.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#interQuantileRange","title":"Quantile.interQuantileRange","content":"Quantile.interQuantileRange \ninterQuantileRange \n\n Computes the interquartile range (IQR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile.html#computePercentiles","title":"Quantile.computePercentiles","content":"Quantile.computePercentiles \ncomputePercentiles \n\n Computes percentiles\n percentiles: Each percentile must be between 0.0 and 1.0 (inclusive)\n CalcMethod should be ofSorted array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html","title":"InPlace","content":"InPlace \n\n ! Works inplace and can thus causes the data array to be reordered\n \nInPlace.computeInplace \ncomputeInplace \nInPlace.empiricalInvCdfInPLace \nempiricalInvCdfInPLace \nInPlace.empiricalInvCdfAverageInPLace \nempiricalInvCdfAverageInPLace \nInPlace.nearestInPLace \nnearestInPLace \nInPlace.californiaInPLace \ncaliforniaInPLace \nInPlace.hazenInPLace \nhazenInPLace \nInPlace.nistInPLace \nnistInPLace \nInPlace.modeInPLace \nmodeInPLace \nInPlace.normalInPLace \nnormalInPLace"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html#computeInplace","title":"InPlace.computeInplace","content":"InPlace.computeInplace \ncomputeInplace \n\n Estimates the q-th quantile from the unsorted data array. (in place)\n Approximately median-unbiased regardless of the sample distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html#empiricalInvCdfInPLace","title":"InPlace.empiricalInvCdfInPLace","content":"InPlace.empiricalInvCdfInPLace \nempiricalInvCdfInPLace \n\n Estimates the q-th quantile from the unsorted data array. (in place)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html#empiricalInvCdfAverageInPLace","title":"InPlace.empiricalInvCdfAverageInPLace","content":"InPlace.empiricalInvCdfAverageInPLace \nempiricalInvCdfAverageInPLace \n\n Estimates the q-th quantile from the unsorted data array. (in place)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html#nearestInPLace","title":"InPlace.nearestInPLace","content":"InPlace.nearestInPLace \nnearestInPLace \n\n Estimates the q-th quantile from the unsorted data array. (in place)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html#californiaInPLace","title":"InPlace.californiaInPLace","content":"InPlace.californiaInPLace \ncaliforniaInPLace \n\n Estimates the q-th quantile from the unsorted data array. (in place)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html#hazenInPLace","title":"InPlace.hazenInPLace","content":"InPlace.hazenInPLace \nhazenInPLace \n\n Estimates the q-th quantile from the unsorted data array. (in place)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html#nistInPLace","title":"InPlace.nistInPLace","content":"InPlace.nistInPLace \nnistInPLace \n\n Estimates the q-th quantile from the unsorted data array. (in place)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html#modeInPLace","title":"InPlace.modeInPLace","content":"InPlace.modeInPLace \nmodeInPLace \n\n Estimates the q-th quantile from the unsorted data array. (in place)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-inplace.html#normalInPLace","title":"InPlace.normalInPLace","content":"InPlace.normalInPLace \nnormalInPLace \n\n Estimates the q-th quantile from the unsorted data array. (in place)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html","title":"OfSorted","content":"OfSorted \n\n ! Input needs to be sorted\n \nOfSorted.compute \ncompute \nOfSorted.empiricalInvCdf \nempiricalInvCdf \nOfSorted.empiricalInvCdfAverage \nempiricalInvCdfAverage \nOfSorted.nearest \nnearest \nOfSorted.california \ncalifornia \nOfSorted.hazen \nhazen \nOfSorted.nist \nnist \nOfSorted.mode \nmode \nOfSorted.normal \nnormal"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html#compute","title":"OfSorted.compute","content":"OfSorted.compute \ncompute \n\n ! Input needs to be sorted !\n Estimates the q-th quantile from the sorted data array.\n Approximately median-unbiased regardless of the sample distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html#empiricalInvCdf","title":"OfSorted.empiricalInvCdf","content":"OfSorted.empiricalInvCdf \nempiricalInvCdf \n\n Estimates the q-th quantile from the sorted data array.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html#empiricalInvCdfAverage","title":"OfSorted.empiricalInvCdfAverage","content":"OfSorted.empiricalInvCdfAverage \nempiricalInvCdfAverage \n\n Estimates the q-th quantile from the sorted data array.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html#nearest","title":"OfSorted.nearest","content":"OfSorted.nearest \nnearest \n\n Estimates the q-th quantile from the sorted data array.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html#california","title":"OfSorted.california","content":"OfSorted.california \ncalifornia \n\n Estimates the q-th quantile from the sorted data array.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html#hazen","title":"OfSorted.hazen","content":"OfSorted.hazen \nhazen \n\n Estimates the q-th quantile from the sorted data array.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html#nist","title":"OfSorted.nist","content":"OfSorted.nist \nnist \n\n Estimates the q-th quantile from the sorted data array.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html#mode","title":"OfSorted.mode","content":"OfSorted.mode \nmode \n\n Estimates the q-th quantile from the sorted data array.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-ofsorted.html#normal","title":"OfSorted.normal","content":"OfSorted.normal \nnormal \n\n Estimates the q-th quantile from the sorted data array.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-quantile-quantilefunction-1.html","title":"QuantileFunction\u003C\u0027a\u003E","content":"QuantileFunction\u003C\u0027a\u003E \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random.html","title":"Random","content":"Random \n\n Uniform random number generators\n \nRandom.IRandom \nIRandom \nRandom.RandBasic \nRandBasic \nRandom.RandThreadSafe \nRandThreadSafe \nRandom.rndgen \nrndgen \nRandom.SetSampleGenerator \nSetSampleGenerator \nRandom.GetSampleGenerator \nGetSampleGenerator \nRandom.boxMullerTransform \nboxMullerTransform"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random.html#rndgen","title":"Random.rndgen","content":"Random.rndgen \nrndgen \n\n The uniform random source used for sampling functions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random.html#SetSampleGenerator","title":"Random.SetSampleGenerator","content":"Random.SetSampleGenerator \nSetSampleGenerator \n\n Sets the random number generator used for sampling.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random.html#GetSampleGenerator","title":"Random.GetSampleGenerator","content":"Random.GetSampleGenerator \nGetSampleGenerator \n\n Returns the random number generator used for sampling.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random.html#boxMullerTransform","title":"Random.boxMullerTransform","content":"Random.boxMullerTransform \nboxMullerTransform \n\n random number sampling method for pairs of independent, standard, normally distributed random numbers\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-irandom.html","title":"IRandom","content":"IRandom \n\n Interface that every uniform random number generator must implement.\n \nIRandom.NextFloat \nNextFloat \nIRandom.NextInt \nNextInt \nIRandom.NextInt \nNextInt"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-irandom.html#NextFloat","title":"IRandom.NextFloat","content":"IRandom.NextFloat \nNextFloat \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-irandom.html#NextInt","title":"IRandom.NextInt","content":"IRandom.NextInt \nNextInt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-irandom.html#NextInt","title":"IRandom.NextInt","content":"IRandom.NextInt \nNextInt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-randbasic.html","title":"RandBasic","content":"RandBasic \n \nRandBasic.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRandBasic.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRandBasic.rnd \nrnd"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-randbasic.html#\u0060\u0060.ctor\u0060\u0060","title":"RandBasic.\u0060\u0060.ctor\u0060\u0060","content":"RandBasic.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n If n is negative, the random number generator seed is based on system time, if it is zero or positive it will\n use n as the seed.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-randbasic.html#\u0060\u0060.ctor\u0060\u0060","title":"RandBasic.\u0060\u0060.ctor\u0060\u0060","content":"RandBasic.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n Constructs the default random number generator using a time dependent default seed value.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-randbasic.html#rnd","title":"RandBasic.rnd","content":"RandBasic.rnd \nrnd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-randthreadsafe.html","title":"RandThreadSafe","content":"RandThreadSafe \n \nRandThreadSafe.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRandThreadSafe.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRandThreadSafe.rnd \nrnd"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-randthreadsafe.html#\u0060\u0060.ctor\u0060\u0060","title":"RandThreadSafe.\u0060\u0060.ctor\u0060\u0060","content":"RandThreadSafe.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n If n is negative, the random number generator seed is based on system time, if it is zero or positive it will\n use n as the seed.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-randthreadsafe.html#\u0060\u0060.ctor\u0060\u0060","title":"RandThreadSafe.\u0060\u0060.ctor\u0060\u0060","content":"RandThreadSafe.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n Constructs the default random number generator using a time dependent default seed value.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-random-randthreadsafe.html#rnd","title":"RandThreadSafe.rnd","content":"RandThreadSafe.rnd \nrnd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rankmodule.html","title":"Rank","content":"Rank \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html","title":"RowVector","content":"RowVector \n \nRowVector.Generic \nGeneric \nRowVector.get \nget \nRowVector.set \nset \nRowVector.length \nlength \nRowVector.ncols \nncols \nRowVector.ofArray \nofArray \nRowVector.toArray \ntoArray \nRowVector.init \ninit \nRowVector.create \ncreate \nRowVector.zero \nzero \nRowVector.ofList \nofList \nRowVector.ofSeq \nofSeq \nRowVector.transpose \ntranspose \nRowVector.copy \ncopy \nRowVector.of_list \nof_list \nRowVector.of_seq \nof_seq \nRowVector.of_array \nof_array \nRowVector.to_array \nto_array \nRowVector.map \nmap"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#get","title":"RowVector.get","content":"RowVector.get \nget \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#set","title":"RowVector.set","content":"RowVector.set \nset \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#length","title":"RowVector.length","content":"RowVector.length \nlength \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#ncols","title":"RowVector.ncols","content":"RowVector.ncols \nncols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#ofArray","title":"RowVector.ofArray","content":"RowVector.ofArray \nofArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#toArray","title":"RowVector.toArray","content":"RowVector.toArray \ntoArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#init","title":"RowVector.init","content":"RowVector.init \ninit \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#create","title":"RowVector.create","content":"RowVector.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#zero","title":"RowVector.zero","content":"RowVector.zero \nzero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#ofList","title":"RowVector.ofList","content":"RowVector.ofList \nofList \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#ofSeq","title":"RowVector.ofSeq","content":"RowVector.ofSeq \nofSeq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#transpose","title":"RowVector.transpose","content":"RowVector.transpose \ntranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#copy","title":"RowVector.copy","content":"RowVector.copy \ncopy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#of_list","title":"RowVector.of_list","content":"RowVector.of_list \nof_list \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#of_seq","title":"RowVector.of_seq","content":"RowVector.of_seq \nof_seq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#of_array","title":"RowVector.of_array","content":"RowVector.of_array \nof_array \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#to_array","title":"RowVector.to_array","content":"RowVector.to_array \nto_array \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule.html#map","title":"RowVector.map","content":"RowVector.map \nmap \n\nBuilds a new rowvector whose elements are the results of applying the given function to each of the elements of the rowvector.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html","title":"Generic","content":"Generic \n \nGeneric.get \nget \nGeneric.set \nset \nGeneric.zero \nzero \nGeneric.length \nlength \nGeneric.init \ninit \nGeneric.create \ncreate \nGeneric.transpose \ntranspose \nGeneric.copy \ncopy \nGeneric.ofList \nofList \nGeneric.ofArray \nofArray \nGeneric.ofSeq \nofSeq \nGeneric.toArray \ntoArray \nGeneric.of_list \nof_list \nGeneric.of_array \nof_array \nGeneric.of_seq \nof_seq \nGeneric.to_array \nto_array \nGeneric.map \nmap"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#get","title":"Generic.get","content":"Generic.get \nget \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#set","title":"Generic.set","content":"Generic.set \nset \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#zero","title":"Generic.zero","content":"Generic.zero \nzero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#length","title":"Generic.length","content":"Generic.length \nlength \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#init","title":"Generic.init","content":"Generic.init \ninit \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#create","title":"Generic.create","content":"Generic.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#transpose","title":"Generic.transpose","content":"Generic.transpose \ntranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#copy","title":"Generic.copy","content":"Generic.copy \ncopy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#ofList","title":"Generic.ofList","content":"Generic.ofList \nofList \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#ofArray","title":"Generic.ofArray","content":"Generic.ofArray \nofArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#ofSeq","title":"Generic.ofSeq","content":"Generic.ofSeq \nofSeq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#toArray","title":"Generic.toArray","content":"Generic.toArray \ntoArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#of_list","title":"Generic.of_list","content":"Generic.of_list \nof_list \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#of_array","title":"Generic.of_array","content":"Generic.of_array \nof_array \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#of_seq","title":"Generic.of_seq","content":"Generic.of_seq \nof_seq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#to_array","title":"Generic.to_array","content":"Generic.to_array \nto_array \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectormodule-generic.html#map","title":"Generic.map","content":"Generic.map \nmap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectorextension.html","title":"RowVectorExtension","content":"RowVectorExtension \n \nRowVectorExtension.ToArray \nToArray \nRowVectorExtension.Copy \nCopy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectorextension.html#ToArray","title":"RowVectorExtension.ToArray","content":"RowVectorExtension.ToArray \nToArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectorextension.html#Copy","title":"RowVectorExtension.Copy","content":"RowVectorExtension.Copy \nCopy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats.html","title":"RunningStats","content":"RunningStats \n \nRunningStats.RunningStats\u003C\u0027T\u003E \nRunningStats\u003C\u0027T\u003E \nRunningStats.createRunningStats \ncreateRunningStats \nRunningStats.mean \nmean \nRunningStats.varPopulation \nvarPopulation \nRunningStats.var \nvar \nRunningStats.stDev \nstDev \nRunningStats.stDevPopulation \nstDevPopulation"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats.html#createRunningStats","title":"RunningStats.createRunningStats","content":"RunningStats.createRunningStats \ncreateRunningStats \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats.html#mean","title":"RunningStats.mean","content":"RunningStats.mean \nmean \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats.html#varPopulation","title":"RunningStats.varPopulation","content":"RunningStats.varPopulation \nvarPopulation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats.html#var","title":"RunningStats.var","content":"RunningStats.var \nvar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats.html#stDev","title":"RunningStats.stDev","content":"RunningStats.stDev \nstDev \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats.html#stDevPopulation","title":"RunningStats.stDevPopulation","content":"RunningStats.stDevPopulation \nstDevPopulation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats-runningstats-1.html","title":"RunningStats\u003C\u0027T\u003E","content":"RunningStats\u003C\u0027T\u003E \n \nRunningStats\u003C\u0027T\u003E.N \nN \nRunningStats\u003C\u0027T\u003E.M1 \nM1 \nRunningStats\u003C\u0027T\u003E.M2 \nM2 \nRunningStats\u003C\u0027T\u003E.M3 \nM3 \nRunningStats\u003C\u0027T\u003E.M4 \nM4"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats-runningstats-1.html#N","title":"RunningStats\u003C\u0027T\u003E.N","content":"RunningStats\u003C\u0027T\u003E.N \nN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats-runningstats-1.html#M1","title":"RunningStats\u003C\u0027T\u003E.M1","content":"RunningStats\u003C\u0027T\u003E.M1 \nM1 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats-runningstats-1.html#M2","title":"RunningStats\u003C\u0027T\u003E.M2","content":"RunningStats\u003C\u0027T\u003E.M2 \nM2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats-runningstats-1.html#M3","title":"RunningStats\u003C\u0027T\u003E.M3","content":"RunningStats\u003C\u0027T\u003E.M3 \nM3 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-runningstats-runningstats-1.html#M4","title":"RunningStats\u003C\u0027T\u003E.M4","content":"RunningStats\u003C\u0027T\u003E.M4 \nM4 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html","title":"Seq","content":"Seq \n\n Module to compute common statistical measure\n \nSeq.UtilityFunctions \nUtilityFunctions \nSeq.range \nrange \nSeq.rangeBy \nrangeBy \nSeq.mean \nmean \nSeq.meanBy \nmeanBy \nSeq.weightedMean \nweightedMean \nSeq.meanHarmonic \nmeanHarmonic \nSeq.meanHarmonicBy \nmeanHarmonicBy \nSeq.meanGeometric \nmeanGeometric \nSeq.meanGeometricBy \nmeanGeometricBy \nSeq.meanQuadratic \nmeanQuadratic \nSeq.meanQuadraticBy \nmeanQuadraticBy \nSeq.meanTruncated \nmeanTruncated \nSeq.meanTruncatedBy \nmeanTruncatedBy \nSeq.median \nmedian \nSeq.var \nvar \nSeq.varBy \nvarBy \nSeq.varPopulation \nvarPopulation \nSeq.varPopulationBy \nvarPopulationBy \nSeq.stDev \nstDev \nSeq.stDevBy \nstDevBy \nSeq.stDevPopulation \nstDevPopulation \nSeq.stDevPopulationBy \nstDevPopulationBy \nSeq.sem \nsem \nSeq.cv \ncv \nSeq.cvBy \ncvBy \nSeq.cvPopulation \ncvPopulation \nSeq.cvPopulationBy \ncvPopulationBy \nSeq.covPopulation \ncovPopulation \nSeq.covPopulationOfPairs \ncovPopulationOfPairs \nSeq.covPopulationBy \ncovPopulationBy \nSeq.cov \ncov \nSeq.covOfPairs \ncovOfPairs \nSeq.covBy \ncovBy \nSeq.medianAbsoluteDev \nmedianAbsoluteDev \nSeq.stats \nstats \nSeq.getMeanOfReplicates \ngetMeanOfReplicates \nSeq.getStDevOfReplicates \ngetStDevOfReplicates \nSeq.getCvOfReplicates \ngetCvOfReplicates"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#range","title":"Seq.range","content":"Seq.range \nrange \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#rangeBy","title":"Seq.rangeBy","content":"Seq.rangeBy \nrangeBy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#mean","title":"Seq.mean","content":"Seq.mean \nmean \n\n   Computes the population mean (Normalized by N)\n  \nReturns default value if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#meanBy","title":"Seq.meanBy","content":"Seq.meanBy \nmeanBy \n\n   Computes the population mean (Normalized by N)s\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#weightedMean","title":"Seq.weightedMean","content":"Seq.weightedMean \nweightedMean \n\n   Computes the Weighted Mean of the given values.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#meanHarmonic","title":"Seq.meanHarmonic","content":"Seq.meanHarmonic \nmeanHarmonic \n\n   Computes harmonic mean\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#meanHarmonicBy","title":"Seq.meanHarmonicBy","content":"Seq.meanHarmonicBy \nmeanHarmonicBy \n\n   Computes harmonic mean\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#meanGeometric","title":"Seq.meanGeometric","content":"Seq.meanGeometric \nmeanGeometric \n\n   Computes gemetric mean\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#meanGeometricBy","title":"Seq.meanGeometricBy","content":"Seq.meanGeometricBy \nmeanGeometricBy \n\n   Computes gemetric mean\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#meanQuadratic","title":"Seq.meanQuadratic","content":"Seq.meanQuadratic \nmeanQuadratic \n\n   Computes quadratic mean\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#meanQuadraticBy","title":"Seq.meanQuadraticBy","content":"Seq.meanQuadraticBy \nmeanQuadraticBy \n\n   Computes quadratic mean\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#meanTruncated","title":"Seq.meanTruncated","content":"Seq.meanTruncated \nmeanTruncated \n\n   Computes the truncated (trimmed) mean where x percent of the highest, and x percent of the lowest values are discarded (total 2x)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#meanTruncatedBy","title":"Seq.meanTruncatedBy","content":"Seq.meanTruncatedBy \nmeanTruncatedBy \n\n   Computes the truncated (trimmed) mean\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#median","title":"Seq.median","content":"Seq.median \nmedian \n\n Sample Median\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#var","title":"Seq.var","content":"Seq.var \nvar \n\n   Computes the sample variance (Bessel\u0027s correction by N-1)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#varBy","title":"Seq.varBy","content":"Seq.varBy \nvarBy \n\n   Computes the sample variance (Bessel\u0027s correction by N-1)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#varPopulation","title":"Seq.varPopulation","content":"Seq.varPopulation \nvarPopulation \n\n   Computes variance of the given values (denominator N)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#varPopulationBy","title":"Seq.varPopulationBy","content":"Seq.varPopulationBy \nvarPopulationBy \n\n   Computes variance of the given values (denominator N)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#stDev","title":"Seq.stDev","content":"Seq.stDev \nstDev \n\n   Computes the sample standard deviation\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#stDevBy","title":"Seq.stDevBy","content":"Seq.stDevBy \nstDevBy \n\n   Computes the sample standard deviation\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#stDevPopulation","title":"Seq.stDevPopulation","content":"Seq.stDevPopulation \nstDevPopulation \n\n   Computes the population standard deviation (denominator = N)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#stDevPopulationBy","title":"Seq.stDevPopulationBy","content":"Seq.stDevPopulationBy \nstDevPopulationBy \n\n   Computes the population standard deviation (denominator = N)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#sem","title":"Seq.sem","content":"Seq.sem \nsem \n\n Computes the standard error of the mean (SEM) with bessel corrected sample standard deviation    \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#cv","title":"Seq.cv","content":"Seq.cv \ncv \n\n   Computes the Coefficient of Variation of a sample (Bessel\u0027s correction by N-1)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#cvBy","title":"Seq.cvBy","content":"Seq.cvBy \ncvBy \n\n   Computes the Coefficient of Variation of a sample (Bessel\u0027s correction by N-1)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#cvPopulation","title":"Seq.cvPopulation","content":"Seq.cvPopulation \ncvPopulation \n\n   Computes the Coefficient of Variation of the population (population standard deviation)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#cvPopulationBy","title":"Seq.cvPopulationBy","content":"Seq.cvPopulationBy \ncvPopulationBy \n\n   Computes the Coefficient of Variation of the population (population standard deviation)\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#covPopulation","title":"Seq.covPopulation","content":"Seq.covPopulation \ncovPopulation \n\n   Computes the population covariance of two random variables\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#covPopulationOfPairs","title":"Seq.covPopulationOfPairs","content":"Seq.covPopulationOfPairs \ncovPopulationOfPairs \n\n   Computes the population covariance of two random variables.\n   The covariance will be calculated between the paired observations.\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#covPopulationBy","title":"Seq.covPopulationBy","content":"Seq.covPopulationBy \ncovPopulationBy \n\n   Computes the population covariance of two random variables generated by applying a function to the input sequence.\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#cov","title":"Seq.cov","content":"Seq.cov \ncov \n\n   Computes the sample covariance of two random variables\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#covOfPairs","title":"Seq.covOfPairs","content":"Seq.covOfPairs \ncovOfPairs \n\n   Computes the sample covariance of two random variables.\n   The covariance will be calculated between the paired observations.    \n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#covBy","title":"Seq.covBy","content":"Seq.covBy \ncovBy \n\n   Computes the sample covariance of two random variables generated by applying a function to the input sequence.\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#medianAbsoluteDev","title":"Seq.medianAbsoluteDev","content":"Seq.medianAbsoluteDev \nmedianAbsoluteDev \n\n Median absolute deviation (MAD)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#stats","title":"Seq.stats","content":"Seq.stats \nstats \n\n Returns SummeryStats of deq with N, mean, sum-of-squares, minimum and maximum\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#getMeanOfReplicates","title":"Seq.getMeanOfReplicates","content":"Seq.getMeanOfReplicates \ngetMeanOfReplicates \n\n calculates the sample means with a given number of replicates present in the sequence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#getStDevOfReplicates","title":"Seq.getStDevOfReplicates","content":"Seq.getStDevOfReplicates \ngetStDevOfReplicates \n\n calculates the sample standard deviations with a given number of replicates present in the sequence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq.html#getCvOfReplicates","title":"Seq.getCvOfReplicates","content":"Seq.getCvOfReplicates \ngetCvOfReplicates \n\n calculates the coefficient of variation based on the sample standard deviations with a given number of replicates present in the sequence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html","title":"UtilityFunctions","content":"UtilityFunctions \n\n A module which implements helper functions to provide special statistical measures\n \nUtilityFunctions.sumOfSquares \nsumOfSquares \nUtilityFunctions.pooledVarOf \npooledVarOf \nUtilityFunctions.pooledVar \npooledVar \nUtilityFunctions.pooledVarPopulationOf \npooledVarPopulationOf \nUtilityFunctions.pooledVarPopulation \npooledVarPopulation \nUtilityFunctions.pooledStDevOf \npooledStDevOf \nUtilityFunctions.pooledStDev \npooledStDev \nUtilityFunctions.pooledStDevPopulationOf \npooledStDevPopulationOf \nUtilityFunctions.pooledStDevPopulation \npooledStDevPopulation"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html#sumOfSquares","title":"UtilityFunctions.sumOfSquares","content":"UtilityFunctions.sumOfSquares \nsumOfSquares \n\n   Computes sum of squares\n  \nReturns NaN if data is empty or if any entry is NaN."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html#pooledVarOf","title":"UtilityFunctions.pooledVarOf","content":"UtilityFunctions.pooledVarOf \npooledVarOf \n\n   Computes the pooled variance of the given values\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html#pooledVar","title":"UtilityFunctions.pooledVar","content":"UtilityFunctions.pooledVar \npooledVar \n\n   Computes the pooled variance of the given values\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html#pooledVarPopulationOf","title":"UtilityFunctions.pooledVarPopulationOf","content":"UtilityFunctions.pooledVarPopulationOf \npooledVarPopulationOf \n\n   Computes the pooled population variance of the given values (Bessel\u0027s correction by N-1)\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html#pooledVarPopulation","title":"UtilityFunctions.pooledVarPopulation","content":"UtilityFunctions.pooledVarPopulation \npooledVarPopulation \n\n   Computes the pooled population variance of the given values (Bessel\u0027s correction by N-1)\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html#pooledStDevOf","title":"UtilityFunctions.pooledStDevOf","content":"UtilityFunctions.pooledStDevOf \npooledStDevOf \n\n   Computes the pooled standard deviation of the given values\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html#pooledStDev","title":"UtilityFunctions.pooledStDev","content":"UtilityFunctions.pooledStDev \npooledStDev \n\n   Computes the pooled standard deviation of the given values.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html#pooledStDevPopulationOf","title":"UtilityFunctions.pooledStDevPopulationOf","content":"UtilityFunctions.pooledStDevPopulationOf \npooledStDevPopulationOf \n\n   Computes the pooled population standard deviation of the given values (Bessel\u0027s correction by N-1)\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-seq-utilityfunctions.html#pooledStDevPopulation","title":"UtilityFunctions.pooledStDevPopulation","content":"UtilityFunctions.pooledStDevPopulation \npooledStDevPopulation \n\n   Computes the pooled population standard deviation of the given values (Bessel\u0027s correction by N-1)\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator.html","title":"ServiceLocator","content":"ServiceLocator \n \nServiceLocator.Architecture \nArchitecture \nServiceLocator.OS \nOS \nServiceLocator.Provider\u003C\u0027a\u003E \nProvider\u003C\u0027a\u003E \nServiceLocator.ServiceProvider\u003C\u0027a\u003E \nServiceProvider\u003C\u0027a\u003E \nServiceLocator.\u0027a ServiceState \n\u0027a ServiceState \nServiceLocator.createProviderX64 \ncreateProviderX64 \nServiceLocator.createProviderX86 \ncreateProviderX86 \nServiceLocator.setEnvironmentPathVariable \nsetEnvironmentPathVariable \nServiceLocator.initSearchPaths \ninitSearchPaths \nServiceLocator.normDllFilename \nnormDllFilename \nServiceLocator.initDllPathTable \ninitDllPathTable \nServiceLocator.isLoadableProvider \nisLoadableProvider \nServiceLocator.tryCheckProvider \ntryCheckProvider"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator.html#createProviderX64","title":"ServiceLocator.createProviderX64","content":"ServiceLocator.createProviderX64 \ncreateProviderX64 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator.html#createProviderX86","title":"ServiceLocator.createProviderX86","content":"ServiceLocator.createProviderX86 \ncreateProviderX86 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator.html#setEnvironmentPathVariable","title":"ServiceLocator.setEnvironmentPathVariable","content":"ServiceLocator.setEnvironmentPathVariable \nsetEnvironmentPathVariable \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator.html#initSearchPaths","title":"ServiceLocator.initSearchPaths","content":"ServiceLocator.initSearchPaths \ninitSearchPaths \n\n The DLLs search procedure for those DLLs\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator.html#normDllFilename","title":"ServiceLocator.normDllFilename","content":"ServiceLocator.normDllFilename \nnormDllFilename \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator.html#initDllPathTable","title":"ServiceLocator.initDllPathTable","content":"ServiceLocator.initDllPathTable \ninitDllPathTable \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator.html#isLoadableProvider","title":"ServiceLocator.isLoadableProvider","content":"ServiceLocator.isLoadableProvider \nisLoadableProvider \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator.html#tryCheckProvider","title":"ServiceLocator.tryCheckProvider","content":"ServiceLocator.tryCheckProvider \ntryCheckProvider \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-architecture.html","title":"Architecture","content":"Architecture \n \nArchitecture.X64 \nX64 \nArchitecture.X86 \nX86"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-architecture.html#X64","title":"Architecture.X64","content":"Architecture.X64 \nX64 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-architecture.html#X86","title":"Architecture.X86","content":"Architecture.X86 \nX86 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-os.html","title":"OS","content":"OS \n \nOS.Windows \nWindows \nOS.Linux \nLinux \nOS.Mac \nMac"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-os.html#Windows","title":"OS.Windows","content":"OS.Windows \nWindows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-os.html#Linux","title":"OS.Linux","content":"OS.Linux \nLinux \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-os.html#Mac","title":"OS.Mac","content":"OS.Mac \nMac \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-provider-1.html","title":"Provider\u003C\u0027a\u003E","content":"Provider\u003C\u0027a\u003E \n\n Generic provider with unmanaged DLL dependencies.\n \nProvider\u003C\u0027a\u003E.Name \nName \nProvider\u003C\u0027a\u003E.RequiredDLLs \nRequiredDLLs \nProvider\u003C\u0027a\u003E.Architecture \nArchitecture \nProvider\u003C\u0027a\u003E.OS \nOS \nProvider\u003C\u0027a\u003E.InitService \nInitService"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-provider-1.html#Name","title":"Provider\u003C\u0027a\u003E.Name","content":"Provider\u003C\u0027a\u003E.Name \nName \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-provider-1.html#RequiredDLLs","title":"Provider\u003C\u0027a\u003E.RequiredDLLs","content":"Provider\u003C\u0027a\u003E.RequiredDLLs \nRequiredDLLs \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-provider-1.html#Architecture","title":"Provider\u003C\u0027a\u003E.Architecture","content":"Provider\u003C\u0027a\u003E.Architecture \nArchitecture \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-provider-1.html#OS","title":"Provider\u003C\u0027a\u003E.OS","content":"Provider\u003C\u0027a\u003E.OS \nOS \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-provider-1.html#InitService","title":"Provider\u003C\u0027a\u003E.InitService","content":"Provider\u003C\u0027a\u003E.InitService \nInitService \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html","title":"ServiceProvider\u003C\u0027a\u003E","content":"ServiceProvider\u003C\u0027a\u003E \n \nServiceProvider\u003C\u0027a\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nServiceProvider\u003C\u0027a\u003E.Available \nAvailable \nServiceProvider\u003C\u0027a\u003E.GetPathMap \nGetPathMap \nServiceProvider\u003C\u0027a\u003E.Service \nService \nServiceProvider\u003C\u0027a\u003E.Start \nStart \nServiceProvider\u003C\u0027a\u003E.StartWith \nStartWith \nServiceProvider\u003C\u0027a\u003E.Status \nStatus \nServiceProvider\u003C\u0027a\u003E.Stop \nStop \nServiceProvider\u003C\u0027a\u003E.Providers \nProviders"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html#\u0060\u0060.ctor\u0060\u0060","title":"ServiceProvider\u003C\u0027a\u003E.\u0060\u0060.ctor\u0060\u0060","content":"ServiceProvider\u003C\u0027a\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html#Available","title":"ServiceProvider\u003C\u0027a\u003E.Available","content":"ServiceProvider\u003C\u0027a\u003E.Available \nAvailable \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html#GetPathMap","title":"ServiceProvider\u003C\u0027a\u003E.GetPathMap","content":"ServiceProvider\u003C\u0027a\u003E.GetPathMap \nGetPathMap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html#Service","title":"ServiceProvider\u003C\u0027a\u003E.Service","content":"ServiceProvider\u003C\u0027a\u003E.Service \nService \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html#Start","title":"ServiceProvider\u003C\u0027a\u003E.Start","content":"ServiceProvider\u003C\u0027a\u003E.Start \nStart \n\n Start the service with the first provider that looks loadable.     \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html#StartWith","title":"ServiceProvider\u003C\u0027a\u003E.StartWith","content":"ServiceProvider\u003C\u0027a\u003E.StartWith \nStartWith \n\n Use the LAPACK service from the given provider.\n If the supporting DLLs are not available, this may fail (now or later).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html#Status","title":"ServiceProvider\u003C\u0027a\u003E.Status","content":"ServiceProvider\u003C\u0027a\u003E.Status \nStatus \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html#Stop","title":"ServiceProvider\u003C\u0027a\u003E.Stop","content":"ServiceProvider\u003C\u0027a\u003E.Stop \nStop \n\n Disable the service.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-serviceprovider-1.html#Providers","title":"ServiceProvider\u003C\u0027a\u003E.Providers","content":"ServiceProvider\u003C\u0027a\u003E.Providers \nProviders \n\n Service Providers\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-servicestate-1.html","title":"\u0027a ServiceState","content":"\u0027a ServiceState \n \n\u0027a ServiceState.ServiceDisabled \nServiceDisabled \n\u0027a ServiceState.ServiceEnabledUninitialised \nServiceEnabledUninitialised \n\u0027a ServiceState.ServiceEnabledOK \nServiceEnabledOK \n\u0027a ServiceState.ServiceEnabledFailed \nServiceEnabledFailed"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-servicestate-1.html#ServiceDisabled","title":"\u0027a ServiceState.ServiceDisabled","content":"\u0027a ServiceState.ServiceDisabled \nServiceDisabled \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-servicestate-1.html#ServiceEnabledUninitialised","title":"\u0027a ServiceState.ServiceEnabledUninitialised","content":"\u0027a ServiceState.ServiceEnabledUninitialised \nServiceEnabledUninitialised \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-servicestate-1.html#ServiceEnabledOK","title":"\u0027a ServiceState.ServiceEnabledOK","content":"\u0027a ServiceState.ServiceEnabledOK \nServiceEnabledOK \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-servicelocator-servicestate-1.html#ServiceEnabledFailed","title":"\u0027a ServiceState.ServiceEnabledFailed","content":"\u0027a ServiceState.ServiceEnabledFailed \nServiceEnabledFailed \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html","title":"SpecializedGenericImpl","content":"SpecializedGenericImpl \n\n Generic operations that, when used on floating point types, use the specialized versions in DoubleImpl\n \nSpecializedGenericImpl.dmatrix \ndmatrix \nSpecializedGenericImpl.range \nrange \nSpecializedGenericImpl.rowvec \nrowvec \nSpecializedGenericImpl.smatrix \nsmatrix \nSpecializedGenericImpl.vector \nvector \nSpecializedGenericImpl.dense \ndense \nSpecializedGenericImpl.sparse \nsparse \nSpecializedGenericImpl.createMx \ncreateMx \nSpecializedGenericImpl.createVx \ncreateVx \nSpecializedGenericImpl.createRVx \ncreateRVx \nSpecializedGenericImpl.nonZeroEntriesM \nnonZeroEntriesM \nSpecializedGenericImpl.mergeSorted \nmergeSorted \nSpecializedGenericImpl.mergedNonZeroEntriesM \nmergedNonZeroEntriesM \nSpecializedGenericImpl.listM \nlistM \nSpecializedGenericImpl.listV \nlistV \nSpecializedGenericImpl.listRV \nlistRV \nSpecializedGenericImpl.arrayM \narrayM \nSpecializedGenericImpl.arraySM \narraySM \nSpecializedGenericImpl.arrayV \narrayV \nSpecializedGenericImpl.arrayRV \narrayRV \nSpecializedGenericImpl.rowVecM \nrowVecM \nSpecializedGenericImpl.vecM \nvecM \nSpecializedGenericImpl.seqM \nseqM \nSpecializedGenericImpl.seqCM \nseqCM \nSpecializedGenericImpl.seqV \nseqV \nSpecializedGenericImpl.seqRV \nseqRV \nSpecializedGenericImpl.initM \ninitM \nSpecializedGenericImpl.initRV \ninitRV \nSpecializedGenericImpl.initV \ninitV \nSpecializedGenericImpl.constM \nconstM \nSpecializedGenericImpl.constRV \nconstRV \nSpecializedGenericImpl.constV \nconstV \nSpecializedGenericImpl.inplaceAssignM \ninplaceAssignM \nSpecializedGenericImpl.assignV \nassignV \nSpecializedGenericImpl.coerce2 \ncoerce2 \nSpecializedGenericImpl.loosenDM \nloosenDM \nSpecializedGenericImpl.loosenSM \nloosenSM \nSpecializedGenericImpl.loosenV \nloosenV \nSpecializedGenericImpl.loosenRV \nloosenRV \nSpecializedGenericImpl.loosenF \nloosenF \nSpecializedGenericImpl.tightenDM \ntightenDM \nSpecializedGenericImpl.tightenSM \ntightenSM \nSpecializedGenericImpl.tightenV \ntightenV \nSpecializedGenericImpl.tightenRV \ntightenRV \nSpecializedGenericImpl.tightenF \ntightenF \nSpecializedGenericImpl.zeroM \nzeroM \nSpecializedGenericImpl.zeroV \nzeroV \nSpecializedGenericImpl.zeroRV \nzeroRV \nSpecializedGenericImpl.initNumericM \ninitNumericM \nSpecializedGenericImpl.identityM \nidentityM \nSpecializedGenericImpl.createNumericV \ncreateNumericV \nSpecializedGenericImpl.scalarM \nscalarM \nSpecializedGenericImpl.scalarRV \nscalarRV \nSpecializedGenericImpl.scalarV \nscalarV \nSpecializedGenericImpl.diagnM \ndiagnM \nSpecializedGenericImpl.diagM \ndiagM \nSpecializedGenericImpl.constDiagM \nconstDiagM \nSpecializedGenericImpl.binaryOpM \nbinaryOpM \nSpecializedGenericImpl.unaryOpM \nunaryOpM \nSpecializedGenericImpl.floatUnaryOpM \nfloatUnaryOpM \nSpecializedGenericImpl.addM \naddM \nSpecializedGenericImpl.subM \nsubM \nSpecializedGenericImpl.mulM \nmulM \nSpecializedGenericImpl.cptMulM \ncptMulM \nSpecializedGenericImpl.cptMaxM \ncptMaxM \nSpecializedGenericImpl.cptMinM \ncptMinM \nSpecializedGenericImpl.addRV \naddRV \nSpecializedGenericImpl.addV \naddV \nSpecializedGenericImpl.subRV \nsubRV \nSpecializedGenericImpl.subV \nsubV \nSpecializedGenericImpl.mulRVM \nmulRVM \nSpecializedGenericImpl.mulMV \nmulMV \nSpecializedGenericImpl.mulRVV \nmulRVV \nSpecializedGenericImpl.mulVRV \nmulVRV \nSpecializedGenericImpl.cptMulRV \ncptMulRV \nSpecializedGenericImpl.cptMulV \ncptMulV \nSpecializedGenericImpl.cptMaxV \ncptMaxV \nSpecializedGenericImpl.cptMinV \ncptMinV \nSpecializedGenericImpl.scaleM \nscaleM \nSpecializedGenericImpl.scaleRV \nscaleRV \nSpecializedGenericImpl.scaleV \nscaleV \nSpecializedGenericImpl.addScalarM \naddScalarM \nSpecializedGenericImpl.addScalarRV \naddScalarRV \nSpecializedGenericImpl.addScalarV \naddScalarV \nSpecializedGenericImpl.subScalarM \nsubScalarM \nSpecializedGenericImpl.subScalarRV \nsubScalarRV \nSpecializedGenericImpl.subScalarV \nsubScalarV \nSpecializedGenericImpl.dotM \ndotM \nSpecializedGenericImpl.dotV \ndotV \nSpecializedGenericImpl.negM \nnegM \nSpecializedGenericImpl.negRV \nnegRV \nSpecializedGenericImpl.negV \nnegV \nSpecializedGenericImpl.traceMGU \ntraceMGU \nSpecializedGenericImpl.traceM \ntraceM \nSpecializedGenericImpl.sumM \nsumM \nSpecializedGenericImpl.prodM \nprodM \nSpecializedGenericImpl.normM \nnormM \nSpecializedGenericImpl.opsM \nopsM \nSpecializedGenericImpl.transM \ntransM \nSpecializedGenericImpl.permuteRows \npermuteRows \nSpecializedGenericImpl.permuteColumns \npermuteColumns \nSpecializedGenericImpl.transRV \ntransRV \nSpecializedGenericImpl.transV \ntransV \nSpecializedGenericImpl.inplaceAddM \ninplaceAddM \nSpecializedGenericImpl.inplaceAddV \ninplaceAddV \nSpecializedGenericImpl.inplaceSubM \ninplaceSubM \nSpecializedGenericImpl.inplaceSubV \ninplaceSubV \nSpecializedGenericImpl.inplaceCptMulM \ninplaceCptMulM \nSpecializedGenericImpl.inplaceCptMulV \ninplaceCptMulV \nSpecializedGenericImpl.inplaceScaleM \ninplaceScaleM \nSpecializedGenericImpl.inplaceScaleV \ninplaceScaleV \nSpecializedGenericImpl.existsM \nexistsM \nSpecializedGenericImpl.existsV \nexistsV \nSpecializedGenericImpl.forallM \nforallM \nSpecializedGenericImpl.forallV \nforallV \nSpecializedGenericImpl.existsiM \nexistsiM \nSpecializedGenericImpl.existsiV \nexistsiV \nSpecializedGenericImpl.foralliM \nforalliM \nSpecializedGenericImpl.foralliV \nforalliV \nSpecializedGenericImpl.mapM \nmapM \nSpecializedGenericImpl.mapV \nmapV \nSpecializedGenericImpl.map2V \nmap2V \nSpecializedGenericImpl.map3V \nmap3V \nSpecializedGenericImpl.zipV \nzipV \nSpecializedGenericImpl.unzipV \nunzipV \nSpecializedGenericImpl.copyM \ncopyM \nSpecializedGenericImpl.copyV \ncopyV \nSpecializedGenericImpl.copyRV \ncopyRV \nSpecializedGenericImpl.mapiM \nmapiM \nSpecializedGenericImpl.mapiV \nmapiV \nSpecializedGenericImpl.permuteV \npermuteV \nSpecializedGenericImpl.permuteRV \npermuteRV \nSpecializedGenericImpl.mapRV \nmapRV \nSpecializedGenericImpl.mapiRV \nmapiRV \nSpecializedGenericImpl.toDenseM \ntoDenseM \nSpecializedGenericImpl.toSparseM \ntoSparseM \nSpecializedGenericImpl.initSparseM \ninitSparseM \nSpecializedGenericImpl.initDenseM \ninitDenseM \nSpecializedGenericImpl.getDiagnM \ngetDiagnM \nSpecializedGenericImpl.getDiagM \ngetDiagM \nSpecializedGenericImpl.inplace_mapM \ninplace_mapM \nSpecializedGenericImpl.inplace_mapiM \ninplace_mapiM \nSpecializedGenericImpl.inplace_mapV \ninplace_mapV \nSpecializedGenericImpl.inplace_mapiV \ninplace_mapiV \nSpecializedGenericImpl.foldM \nfoldM \nSpecializedGenericImpl.foldV \nfoldV \nSpecializedGenericImpl.foldiM \nfoldiM \nSpecializedGenericImpl.foldiV \nfoldiV \nSpecializedGenericImpl.compareM \ncompareM \nSpecializedGenericImpl.equalsM \nequalsM \nSpecializedGenericImpl.compareV \ncompareV \nSpecializedGenericImpl.equalsV \nequalsV \nSpecializedGenericImpl.equalsRV \nequalsRV \nSpecializedGenericImpl.compareRV \ncompareRV \nSpecializedGenericImpl.combineHash \ncombineHash \nSpecializedGenericImpl.hashM \nhashM \nSpecializedGenericImpl.hashV \nhashV \nSpecializedGenericImpl.hashRV \nhashRV \nSpecializedGenericImpl.startR \nstartR \nSpecializedGenericImpl.countR \ncountR \nSpecializedGenericImpl.idxR \nidxR \nSpecializedGenericImpl.inR \ninR \nSpecializedGenericImpl.getRowM \ngetRowM \nSpecializedGenericImpl.setRowM \nsetRowM \nSpecializedGenericImpl.getColM \ngetColM \nSpecializedGenericImpl.setColM \nsetColM \nSpecializedGenericImpl.getRegionV \ngetRegionV \nSpecializedGenericImpl.getRegionRV \ngetRegionRV \nSpecializedGenericImpl.getRegionM \ngetRegionM \nSpecializedGenericImpl.getColsM \ngetColsM \nSpecializedGenericImpl.getRowsM \ngetRowsM \nSpecializedGenericImpl.rowvecM \nrowvecM \nSpecializedGenericImpl.vectorM \nvectorM \nSpecializedGenericImpl.toVectorM \ntoVectorM \nSpecializedGenericImpl.toRowVectorM \ntoRowVectorM \nSpecializedGenericImpl.toScalarM \ntoScalarM"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#dense","title":"SpecializedGenericImpl.dense","content":"SpecializedGenericImpl.dense \ndense \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#sparse","title":"SpecializedGenericImpl.sparse","content":"SpecializedGenericImpl.sparse \nsparse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#createMx","title":"SpecializedGenericImpl.createMx","content":"SpecializedGenericImpl.createMx \ncreateMx \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#createVx","title":"SpecializedGenericImpl.createVx","content":"SpecializedGenericImpl.createVx \ncreateVx \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#createRVx","title":"SpecializedGenericImpl.createRVx","content":"SpecializedGenericImpl.createRVx \ncreateRVx \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#nonZeroEntriesM","title":"SpecializedGenericImpl.nonZeroEntriesM","content":"SpecializedGenericImpl.nonZeroEntriesM \nnonZeroEntriesM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mergeSorted","title":"SpecializedGenericImpl.mergeSorted","content":"SpecializedGenericImpl.mergeSorted \nmergeSorted \n\n Merge two sorted sequences\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mergedNonZeroEntriesM","title":"SpecializedGenericImpl.mergedNonZeroEntriesM","content":"SpecializedGenericImpl.mergedNonZeroEntriesM \nmergedNonZeroEntriesM \n\n Non-zero entries from two sequences\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#listM","title":"SpecializedGenericImpl.listM","content":"SpecializedGenericImpl.listM \nlistM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#listV","title":"SpecializedGenericImpl.listV","content":"SpecializedGenericImpl.listV \nlistV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#listRV","title":"SpecializedGenericImpl.listRV","content":"SpecializedGenericImpl.listRV \nlistRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#arrayM","title":"SpecializedGenericImpl.arrayM","content":"SpecializedGenericImpl.arrayM \narrayM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#arraySM","title":"SpecializedGenericImpl.arraySM","content":"SpecializedGenericImpl.arraySM \narraySM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#arrayV","title":"SpecializedGenericImpl.arrayV","content":"SpecializedGenericImpl.arrayV \narrayV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#arrayRV","title":"SpecializedGenericImpl.arrayRV","content":"SpecializedGenericImpl.arrayRV \narrayRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#rowVecM","title":"SpecializedGenericImpl.rowVecM","content":"SpecializedGenericImpl.rowVecM \nrowVecM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#vecM","title":"SpecializedGenericImpl.vecM","content":"SpecializedGenericImpl.vecM \nvecM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#seqM","title":"SpecializedGenericImpl.seqM","content":"SpecializedGenericImpl.seqM \nseqM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#seqCM","title":"SpecializedGenericImpl.seqCM","content":"SpecializedGenericImpl.seqCM \nseqCM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#seqV","title":"SpecializedGenericImpl.seqV","content":"SpecializedGenericImpl.seqV \nseqV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#seqRV","title":"SpecializedGenericImpl.seqRV","content":"SpecializedGenericImpl.seqRV \nseqRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#initM","title":"SpecializedGenericImpl.initM","content":"SpecializedGenericImpl.initM \ninitM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#initRV","title":"SpecializedGenericImpl.initRV","content":"SpecializedGenericImpl.initRV \ninitRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#initV","title":"SpecializedGenericImpl.initV","content":"SpecializedGenericImpl.initV \ninitV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#constM","title":"SpecializedGenericImpl.constM","content":"SpecializedGenericImpl.constM \nconstM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#constRV","title":"SpecializedGenericImpl.constRV","content":"SpecializedGenericImpl.constRV \nconstRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#constV","title":"SpecializedGenericImpl.constV","content":"SpecializedGenericImpl.constV \nconstV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplaceAssignM","title":"SpecializedGenericImpl.inplaceAssignM","content":"SpecializedGenericImpl.inplaceAssignM \ninplaceAssignM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#assignV","title":"SpecializedGenericImpl.assignV","content":"SpecializedGenericImpl.assignV \nassignV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#coerce2","title":"SpecializedGenericImpl.coerce2","content":"SpecializedGenericImpl.coerce2 \ncoerce2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#loosenDM","title":"SpecializedGenericImpl.loosenDM","content":"SpecializedGenericImpl.loosenDM \nloosenDM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#loosenSM","title":"SpecializedGenericImpl.loosenSM","content":"SpecializedGenericImpl.loosenSM \nloosenSM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#loosenV","title":"SpecializedGenericImpl.loosenV","content":"SpecializedGenericImpl.loosenV \nloosenV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#loosenRV","title":"SpecializedGenericImpl.loosenRV","content":"SpecializedGenericImpl.loosenRV \nloosenRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#loosenF","title":"SpecializedGenericImpl.loosenF","content":"SpecializedGenericImpl.loosenF \nloosenF \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#tightenDM","title":"SpecializedGenericImpl.tightenDM","content":"SpecializedGenericImpl.tightenDM \ntightenDM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#tightenSM","title":"SpecializedGenericImpl.tightenSM","content":"SpecializedGenericImpl.tightenSM \ntightenSM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#tightenV","title":"SpecializedGenericImpl.tightenV","content":"SpecializedGenericImpl.tightenV \ntightenV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#tightenRV","title":"SpecializedGenericImpl.tightenRV","content":"SpecializedGenericImpl.tightenRV \ntightenRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#tightenF","title":"SpecializedGenericImpl.tightenF","content":"SpecializedGenericImpl.tightenF \ntightenF \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#zeroM","title":"SpecializedGenericImpl.zeroM","content":"SpecializedGenericImpl.zeroM \nzeroM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#zeroV","title":"SpecializedGenericImpl.zeroV","content":"SpecializedGenericImpl.zeroV \nzeroV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#zeroRV","title":"SpecializedGenericImpl.zeroRV","content":"SpecializedGenericImpl.zeroRV \nzeroRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#initNumericM","title":"SpecializedGenericImpl.initNumericM","content":"SpecializedGenericImpl.initNumericM \ninitNumericM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#identityM","title":"SpecializedGenericImpl.identityM","content":"SpecializedGenericImpl.identityM \nidentityM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#createNumericV","title":"SpecializedGenericImpl.createNumericV","content":"SpecializedGenericImpl.createNumericV \ncreateNumericV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#scalarM","title":"SpecializedGenericImpl.scalarM","content":"SpecializedGenericImpl.scalarM \nscalarM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#scalarRV","title":"SpecializedGenericImpl.scalarRV","content":"SpecializedGenericImpl.scalarRV \nscalarRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#scalarV","title":"SpecializedGenericImpl.scalarV","content":"SpecializedGenericImpl.scalarV \nscalarV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#diagnM","title":"SpecializedGenericImpl.diagnM","content":"SpecializedGenericImpl.diagnM \ndiagnM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#diagM","title":"SpecializedGenericImpl.diagM","content":"SpecializedGenericImpl.diagM \ndiagM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#constDiagM","title":"SpecializedGenericImpl.constDiagM","content":"SpecializedGenericImpl.constDiagM \nconstDiagM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#binaryOpM","title":"SpecializedGenericImpl.binaryOpM","content":"SpecializedGenericImpl.binaryOpM \nbinaryOpM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#unaryOpM","title":"SpecializedGenericImpl.unaryOpM","content":"SpecializedGenericImpl.unaryOpM \nunaryOpM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#floatUnaryOpM","title":"SpecializedGenericImpl.floatUnaryOpM","content":"SpecializedGenericImpl.floatUnaryOpM \nfloatUnaryOpM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#addM","title":"SpecializedGenericImpl.addM","content":"SpecializedGenericImpl.addM \naddM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#subM","title":"SpecializedGenericImpl.subM","content":"SpecializedGenericImpl.subM \nsubM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mulM","title":"SpecializedGenericImpl.mulM","content":"SpecializedGenericImpl.mulM \nmulM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#cptMulM","title":"SpecializedGenericImpl.cptMulM","content":"SpecializedGenericImpl.cptMulM \ncptMulM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#cptMaxM","title":"SpecializedGenericImpl.cptMaxM","content":"SpecializedGenericImpl.cptMaxM \ncptMaxM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#cptMinM","title":"SpecializedGenericImpl.cptMinM","content":"SpecializedGenericImpl.cptMinM \ncptMinM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#addRV","title":"SpecializedGenericImpl.addRV","content":"SpecializedGenericImpl.addRV \naddRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#addV","title":"SpecializedGenericImpl.addV","content":"SpecializedGenericImpl.addV \naddV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#subRV","title":"SpecializedGenericImpl.subRV","content":"SpecializedGenericImpl.subRV \nsubRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#subV","title":"SpecializedGenericImpl.subV","content":"SpecializedGenericImpl.subV \nsubV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mulRVM","title":"SpecializedGenericImpl.mulRVM","content":"SpecializedGenericImpl.mulRVM \nmulRVM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mulMV","title":"SpecializedGenericImpl.mulMV","content":"SpecializedGenericImpl.mulMV \nmulMV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mulRVV","title":"SpecializedGenericImpl.mulRVV","content":"SpecializedGenericImpl.mulRVV \nmulRVV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mulVRV","title":"SpecializedGenericImpl.mulVRV","content":"SpecializedGenericImpl.mulVRV \nmulVRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#cptMulRV","title":"SpecializedGenericImpl.cptMulRV","content":"SpecializedGenericImpl.cptMulRV \ncptMulRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#cptMulV","title":"SpecializedGenericImpl.cptMulV","content":"SpecializedGenericImpl.cptMulV \ncptMulV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#cptMaxV","title":"SpecializedGenericImpl.cptMaxV","content":"SpecializedGenericImpl.cptMaxV \ncptMaxV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#cptMinV","title":"SpecializedGenericImpl.cptMinV","content":"SpecializedGenericImpl.cptMinV \ncptMinV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#scaleM","title":"SpecializedGenericImpl.scaleM","content":"SpecializedGenericImpl.scaleM \nscaleM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#scaleRV","title":"SpecializedGenericImpl.scaleRV","content":"SpecializedGenericImpl.scaleRV \nscaleRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#scaleV","title":"SpecializedGenericImpl.scaleV","content":"SpecializedGenericImpl.scaleV \nscaleV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#addScalarM","title":"SpecializedGenericImpl.addScalarM","content":"SpecializedGenericImpl.addScalarM \naddScalarM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#addScalarRV","title":"SpecializedGenericImpl.addScalarRV","content":"SpecializedGenericImpl.addScalarRV \naddScalarRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#addScalarV","title":"SpecializedGenericImpl.addScalarV","content":"SpecializedGenericImpl.addScalarV \naddScalarV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#subScalarM","title":"SpecializedGenericImpl.subScalarM","content":"SpecializedGenericImpl.subScalarM \nsubScalarM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#subScalarRV","title":"SpecializedGenericImpl.subScalarRV","content":"SpecializedGenericImpl.subScalarRV \nsubScalarRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#subScalarV","title":"SpecializedGenericImpl.subScalarV","content":"SpecializedGenericImpl.subScalarV \nsubScalarV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#dotM","title":"SpecializedGenericImpl.dotM","content":"SpecializedGenericImpl.dotM \ndotM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#dotV","title":"SpecializedGenericImpl.dotV","content":"SpecializedGenericImpl.dotV \ndotV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#negM","title":"SpecializedGenericImpl.negM","content":"SpecializedGenericImpl.negM \nnegM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#negRV","title":"SpecializedGenericImpl.negRV","content":"SpecializedGenericImpl.negRV \nnegRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#negV","title":"SpecializedGenericImpl.negV","content":"SpecializedGenericImpl.negV \nnegV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#traceMGU","title":"SpecializedGenericImpl.traceMGU","content":"SpecializedGenericImpl.traceMGU \ntraceMGU \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#traceM","title":"SpecializedGenericImpl.traceM","content":"SpecializedGenericImpl.traceM \ntraceM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#sumM","title":"SpecializedGenericImpl.sumM","content":"SpecializedGenericImpl.sumM \nsumM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#prodM","title":"SpecializedGenericImpl.prodM","content":"SpecializedGenericImpl.prodM \nprodM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#normM","title":"SpecializedGenericImpl.normM","content":"SpecializedGenericImpl.normM \nnormM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#opsM","title":"SpecializedGenericImpl.opsM","content":"SpecializedGenericImpl.opsM \nopsM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#transM","title":"SpecializedGenericImpl.transM","content":"SpecializedGenericImpl.transM \ntransM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#permuteRows","title":"SpecializedGenericImpl.permuteRows","content":"SpecializedGenericImpl.permuteRows \npermuteRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#permuteColumns","title":"SpecializedGenericImpl.permuteColumns","content":"SpecializedGenericImpl.permuteColumns \npermuteColumns \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#transRV","title":"SpecializedGenericImpl.transRV","content":"SpecializedGenericImpl.transRV \ntransRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#transV","title":"SpecializedGenericImpl.transV","content":"SpecializedGenericImpl.transV \ntransV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplaceAddM","title":"SpecializedGenericImpl.inplaceAddM","content":"SpecializedGenericImpl.inplaceAddM \ninplaceAddM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplaceAddV","title":"SpecializedGenericImpl.inplaceAddV","content":"SpecializedGenericImpl.inplaceAddV \ninplaceAddV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplaceSubM","title":"SpecializedGenericImpl.inplaceSubM","content":"SpecializedGenericImpl.inplaceSubM \ninplaceSubM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplaceSubV","title":"SpecializedGenericImpl.inplaceSubV","content":"SpecializedGenericImpl.inplaceSubV \ninplaceSubV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplaceCptMulM","title":"SpecializedGenericImpl.inplaceCptMulM","content":"SpecializedGenericImpl.inplaceCptMulM \ninplaceCptMulM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplaceCptMulV","title":"SpecializedGenericImpl.inplaceCptMulV","content":"SpecializedGenericImpl.inplaceCptMulV \ninplaceCptMulV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplaceScaleM","title":"SpecializedGenericImpl.inplaceScaleM","content":"SpecializedGenericImpl.inplaceScaleM \ninplaceScaleM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplaceScaleV","title":"SpecializedGenericImpl.inplaceScaleV","content":"SpecializedGenericImpl.inplaceScaleV \ninplaceScaleV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#existsM","title":"SpecializedGenericImpl.existsM","content":"SpecializedGenericImpl.existsM \nexistsM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#existsV","title":"SpecializedGenericImpl.existsV","content":"SpecializedGenericImpl.existsV \nexistsV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#forallM","title":"SpecializedGenericImpl.forallM","content":"SpecializedGenericImpl.forallM \nforallM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#forallV","title":"SpecializedGenericImpl.forallV","content":"SpecializedGenericImpl.forallV \nforallV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#existsiM","title":"SpecializedGenericImpl.existsiM","content":"SpecializedGenericImpl.existsiM \nexistsiM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#existsiV","title":"SpecializedGenericImpl.existsiV","content":"SpecializedGenericImpl.existsiV \nexistsiV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#foralliM","title":"SpecializedGenericImpl.foralliM","content":"SpecializedGenericImpl.foralliM \nforalliM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#foralliV","title":"SpecializedGenericImpl.foralliV","content":"SpecializedGenericImpl.foralliV \nforalliV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mapM","title":"SpecializedGenericImpl.mapM","content":"SpecializedGenericImpl.mapM \nmapM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mapV","title":"SpecializedGenericImpl.mapV","content":"SpecializedGenericImpl.mapV \nmapV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#map2V","title":"SpecializedGenericImpl.map2V","content":"SpecializedGenericImpl.map2V \nmap2V \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#map3V","title":"SpecializedGenericImpl.map3V","content":"SpecializedGenericImpl.map3V \nmap3V \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#zipV","title":"SpecializedGenericImpl.zipV","content":"SpecializedGenericImpl.zipV \nzipV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#unzipV","title":"SpecializedGenericImpl.unzipV","content":"SpecializedGenericImpl.unzipV \nunzipV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#copyM","title":"SpecializedGenericImpl.copyM","content":"SpecializedGenericImpl.copyM \ncopyM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#copyV","title":"SpecializedGenericImpl.copyV","content":"SpecializedGenericImpl.copyV \ncopyV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#copyRV","title":"SpecializedGenericImpl.copyRV","content":"SpecializedGenericImpl.copyRV \ncopyRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mapiM","title":"SpecializedGenericImpl.mapiM","content":"SpecializedGenericImpl.mapiM \nmapiM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mapiV","title":"SpecializedGenericImpl.mapiV","content":"SpecializedGenericImpl.mapiV \nmapiV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#permuteV","title":"SpecializedGenericImpl.permuteV","content":"SpecializedGenericImpl.permuteV \npermuteV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#permuteRV","title":"SpecializedGenericImpl.permuteRV","content":"SpecializedGenericImpl.permuteRV \npermuteRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mapRV","title":"SpecializedGenericImpl.mapRV","content":"SpecializedGenericImpl.mapRV \nmapRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#mapiRV","title":"SpecializedGenericImpl.mapiRV","content":"SpecializedGenericImpl.mapiRV \nmapiRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#toDenseM","title":"SpecializedGenericImpl.toDenseM","content":"SpecializedGenericImpl.toDenseM \ntoDenseM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#toSparseM","title":"SpecializedGenericImpl.toSparseM","content":"SpecializedGenericImpl.toSparseM \ntoSparseM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#initSparseM","title":"SpecializedGenericImpl.initSparseM","content":"SpecializedGenericImpl.initSparseM \ninitSparseM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#initDenseM","title":"SpecializedGenericImpl.initDenseM","content":"SpecializedGenericImpl.initDenseM \ninitDenseM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#getDiagnM","title":"SpecializedGenericImpl.getDiagnM","content":"SpecializedGenericImpl.getDiagnM \ngetDiagnM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#getDiagM","title":"SpecializedGenericImpl.getDiagM","content":"SpecializedGenericImpl.getDiagM \ngetDiagM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplace_mapM","title":"SpecializedGenericImpl.inplace_mapM","content":"SpecializedGenericImpl.inplace_mapM \ninplace_mapM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplace_mapiM","title":"SpecializedGenericImpl.inplace_mapiM","content":"SpecializedGenericImpl.inplace_mapiM \ninplace_mapiM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplace_mapV","title":"SpecializedGenericImpl.inplace_mapV","content":"SpecializedGenericImpl.inplace_mapV \ninplace_mapV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inplace_mapiV","title":"SpecializedGenericImpl.inplace_mapiV","content":"SpecializedGenericImpl.inplace_mapiV \ninplace_mapiV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#foldM","title":"SpecializedGenericImpl.foldM","content":"SpecializedGenericImpl.foldM \nfoldM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#foldV","title":"SpecializedGenericImpl.foldV","content":"SpecializedGenericImpl.foldV \nfoldV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#foldiM","title":"SpecializedGenericImpl.foldiM","content":"SpecializedGenericImpl.foldiM \nfoldiM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#foldiV","title":"SpecializedGenericImpl.foldiV","content":"SpecializedGenericImpl.foldiV \nfoldiV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#compareM","title":"SpecializedGenericImpl.compareM","content":"SpecializedGenericImpl.compareM \ncompareM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#equalsM","title":"SpecializedGenericImpl.equalsM","content":"SpecializedGenericImpl.equalsM \nequalsM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#compareV","title":"SpecializedGenericImpl.compareV","content":"SpecializedGenericImpl.compareV \ncompareV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#equalsV","title":"SpecializedGenericImpl.equalsV","content":"SpecializedGenericImpl.equalsV \nequalsV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#equalsRV","title":"SpecializedGenericImpl.equalsRV","content":"SpecializedGenericImpl.equalsRV \nequalsRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#compareRV","title":"SpecializedGenericImpl.compareRV","content":"SpecializedGenericImpl.compareRV \ncompareRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#combineHash","title":"SpecializedGenericImpl.combineHash","content":"SpecializedGenericImpl.combineHash \ncombineHash \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#hashM","title":"SpecializedGenericImpl.hashM","content":"SpecializedGenericImpl.hashM \nhashM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#hashV","title":"SpecializedGenericImpl.hashV","content":"SpecializedGenericImpl.hashV \nhashV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#hashRV","title":"SpecializedGenericImpl.hashRV","content":"SpecializedGenericImpl.hashRV \nhashRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#startR","title":"SpecializedGenericImpl.startR","content":"SpecializedGenericImpl.startR \nstartR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#countR","title":"SpecializedGenericImpl.countR","content":"SpecializedGenericImpl.countR \ncountR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#idxR","title":"SpecializedGenericImpl.idxR","content":"SpecializedGenericImpl.idxR \nidxR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#inR","title":"SpecializedGenericImpl.inR","content":"SpecializedGenericImpl.inR \ninR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#getRowM","title":"SpecializedGenericImpl.getRowM","content":"SpecializedGenericImpl.getRowM \ngetRowM \n\nReturns row of index i of matrix a as a vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#setRowM","title":"SpecializedGenericImpl.setRowM","content":"SpecializedGenericImpl.setRowM \nsetRowM \n\nReplaces row of index j of matrix a with values of vector v, if vector length matches rowsize\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#getColM","title":"SpecializedGenericImpl.getColM","content":"SpecializedGenericImpl.getColM \ngetColM \n\nReturns col of index i of matrix a as a vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#setColM","title":"SpecializedGenericImpl.setColM","content":"SpecializedGenericImpl.setColM \nsetColM \n\nReplaces column of index i of matrix a with values of vector v, if vector length matches columnsize\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#getRegionV","title":"SpecializedGenericImpl.getRegionV","content":"SpecializedGenericImpl.getRegionV \ngetRegionV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#getRegionRV","title":"SpecializedGenericImpl.getRegionRV","content":"SpecializedGenericImpl.getRegionRV \ngetRegionRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#getRegionM","title":"SpecializedGenericImpl.getRegionM","content":"SpecializedGenericImpl.getRegionM \ngetRegionM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#getColsM","title":"SpecializedGenericImpl.getColsM","content":"SpecializedGenericImpl.getColsM \ngetColsM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#getRowsM","title":"SpecializedGenericImpl.getRowsM","content":"SpecializedGenericImpl.getRowsM \ngetRowsM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#rowvecM","title":"SpecializedGenericImpl.rowvecM","content":"SpecializedGenericImpl.rowvecM \nrowvecM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#vectorM","title":"SpecializedGenericImpl.vectorM","content":"SpecializedGenericImpl.vectorM \nvectorM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#toVectorM","title":"SpecializedGenericImpl.toVectorM","content":"SpecializedGenericImpl.toVectorM \ntoVectorM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#toRowVectorM","title":"SpecializedGenericImpl.toRowVectorM","content":"SpecializedGenericImpl.toRowVectorM \ntoRowVectorM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl.html#toScalarM","title":"SpecializedGenericImpl.toScalarM","content":"SpecializedGenericImpl.toScalarM \ntoScalarM \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-dmatrix.html","title":"dmatrix","content":"dmatrix \n \ndmatrix.Item \nItem \ndmatrix.ElementOps \nElementOps \ndmatrix.NumCols \nNumCols \ndmatrix.OpsData \nOpsData \ndmatrix.NumRows \nNumRows \ndmatrix.Values \nValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-dmatrix.html#Item","title":"dmatrix.Item","content":"dmatrix.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-dmatrix.html#ElementOps","title":"dmatrix.ElementOps","content":"dmatrix.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-dmatrix.html#NumCols","title":"dmatrix.NumCols","content":"dmatrix.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-dmatrix.html#OpsData","title":"dmatrix.OpsData","content":"dmatrix.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-dmatrix.html#NumRows","title":"dmatrix.NumRows","content":"dmatrix.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-dmatrix.html#Values","title":"dmatrix.Values","content":"dmatrix.Values \nValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-range.html","title":"range","content":"range \n \nrange.Item1 \nItem1 \nrange.Item2 \nItem2"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-range.html#Item1","title":"range.Item1","content":"range.Item1 \nItem1 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-range.html#Item2","title":"range.Item2","content":"range.Item2 \nItem2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html","title":"rowvec","content":"rowvec \n \nrowvec.NumCols \nNumCols \nrowvec.Transpose \nTranspose \nrowvec.Item \nItem \nrowvec.DebugDisplay \nDebugDisplay \nrowvec.StructuredDisplayAsArray \nStructuredDisplayAsArray \nrowvec.Length \nLength \nrowvec.Values \nValues \nrowvec.Details \nDetails \nrowvec.OpsData \nOpsData \nrowvec.ElementOps \nElementOps \nrowvec.InternalValues \nInternalValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#NumCols","title":"rowvec.NumCols","content":"rowvec.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#Transpose","title":"rowvec.Transpose","content":"rowvec.Transpose \nTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#Item","title":"rowvec.Item","content":"rowvec.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#DebugDisplay","title":"rowvec.DebugDisplay","content":"rowvec.DebugDisplay \nDebugDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#StructuredDisplayAsArray","title":"rowvec.StructuredDisplayAsArray","content":"rowvec.StructuredDisplayAsArray \nStructuredDisplayAsArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#Length","title":"rowvec.Length","content":"rowvec.Length \nLength \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#Values","title":"rowvec.Values","content":"rowvec.Values \nValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#Details","title":"rowvec.Details","content":"rowvec.Details \nDetails \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#OpsData","title":"rowvec.OpsData","content":"rowvec.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#ElementOps","title":"rowvec.ElementOps","content":"rowvec.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-rowvec.html#InternalValues","title":"rowvec.InternalValues","content":"rowvec.InternalValues \nInternalValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-smatrix.html","title":"smatrix","content":"smatrix \n \nsmatrix.Item \nItem \nsmatrix.SparseColumnValues \nSparseColumnValues \nsmatrix.SparseValues \nSparseValues \nsmatrix.ElementOps \nElementOps \nsmatrix.NumCols \nNumCols \nsmatrix.SparseRowOffsets \nSparseRowOffsets \nsmatrix.OpsData \nOpsData \nsmatrix.NumRows \nNumRows"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-smatrix.html#Item","title":"smatrix.Item","content":"smatrix.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-smatrix.html#SparseColumnValues","title":"smatrix.SparseColumnValues","content":"smatrix.SparseColumnValues \nSparseColumnValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-smatrix.html#SparseValues","title":"smatrix.SparseValues","content":"smatrix.SparseValues \nSparseValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-smatrix.html#ElementOps","title":"smatrix.ElementOps","content":"smatrix.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-smatrix.html#NumCols","title":"smatrix.NumCols","content":"smatrix.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-smatrix.html#SparseRowOffsets","title":"smatrix.SparseRowOffsets","content":"smatrix.SparseRowOffsets \nSparseRowOffsets \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-smatrix.html#OpsData","title":"smatrix.OpsData","content":"smatrix.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-smatrix.html#NumRows","title":"smatrix.NumRows","content":"smatrix.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html","title":"vector","content":"vector \n \nvector.Transpose \nTranspose \nvector.Item \nItem \nvector.DebugDisplay \nDebugDisplay \nvector.StructuredDisplayAsArray \nStructuredDisplayAsArray \nvector.Length \nLength \nvector.Values \nValues \nvector.Details \nDetails \nvector.OpsData \nOpsData \nvector.ElementOps \nElementOps \nvector.NumRows \nNumRows \nvector.InternalValues \nInternalValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#Transpose","title":"vector.Transpose","content":"vector.Transpose \nTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#Item","title":"vector.Item","content":"vector.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#DebugDisplay","title":"vector.DebugDisplay","content":"vector.DebugDisplay \nDebugDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#StructuredDisplayAsArray","title":"vector.StructuredDisplayAsArray","content":"vector.StructuredDisplayAsArray \nStructuredDisplayAsArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#Length","title":"vector.Length","content":"vector.Length \nLength \n\nLength of vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#Values","title":"vector.Values","content":"vector.Values \nValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#Details","title":"vector.Details","content":"vector.Details \nDetails \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#OpsData","title":"vector.OpsData","content":"vector.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#ElementOps","title":"vector.ElementOps","content":"vector.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#NumRows","title":"vector.NumRows","content":"vector.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specializedgenericimpl-vector.html#InternalValues","title":"vector.InternalValues","content":"vector.InternalValues \nInternalValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats.html","title":"SummaryStats","content":"SummaryStats \n\n Module to compute common statistical measure on \n \nSummaryStats.SummaryStats\u003C\u0027T\u003E \nSummaryStats\u003C\u0027T\u003E \nSummaryStats.createSummaryStats \ncreateSummaryStats \nSummaryStats.mean \nmean \nSummaryStats.varPopulation \nvarPopulation \nSummaryStats.var \nvar \nSummaryStats.stDev \nstDev \nSummaryStats.stDevPopulation \nstDevPopulation"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats.html#createSummaryStats","title":"SummaryStats.createSummaryStats","content":"SummaryStats.createSummaryStats \ncreateSummaryStats \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats.html#mean","title":"SummaryStats.mean","content":"SummaryStats.mean \nmean \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats.html#varPopulation","title":"SummaryStats.varPopulation","content":"SummaryStats.varPopulation \nvarPopulation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats.html#var","title":"SummaryStats.var","content":"SummaryStats.var \nvar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats.html#stDev","title":"SummaryStats.stDev","content":"SummaryStats.stDev \nstDev \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats.html#stDevPopulation","title":"SummaryStats.stDevPopulation","content":"SummaryStats.stDevPopulation \nstDevPopulation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats-summarystats-1.html","title":"SummaryStats\u003C\u0027T\u003E","content":"SummaryStats\u003C\u0027T\u003E \n \nSummaryStats\u003C\u0027T\u003E.N \nN \nSummaryStats\u003C\u0027T\u003E.Mean \nMean \nSummaryStats\u003C\u0027T\u003E.SumOfSquares \nSumOfSquares \nSummaryStats\u003C\u0027T\u003E.Min \nMin \nSummaryStats\u003C\u0027T\u003E.Max \nMax"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats-summarystats-1.html#N","title":"SummaryStats\u003C\u0027T\u003E.N","content":"SummaryStats\u003C\u0027T\u003E.N \nN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats-summarystats-1.html#Mean","title":"SummaryStats\u003C\u0027T\u003E.Mean","content":"SummaryStats\u003C\u0027T\u003E.Mean \nMean \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats-summarystats-1.html#SumOfSquares","title":"SummaryStats\u003C\u0027T\u003E.SumOfSquares","content":"SummaryStats\u003C\u0027T\u003E.SumOfSquares \nSumOfSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats-summarystats-1.html#Min","title":"SummaryStats\u003C\u0027T\u003E.Min","content":"SummaryStats\u003C\u0027T\u003E.Min \nMin \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-summarystats-summarystats-1.html#Max","title":"SummaryStats\u003C\u0027T\u003E.Max","content":"SummaryStats\u003C\u0027T\u003E.Max \nMax \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html","title":"Vector","content":"Vector \n\nBasic vector operations\n \nVector.Generic \nGeneric \nVector.SummaryStats \nSummaryStats \nVector.range \nrange \nVector.rangef \nrangef \nVector.get \nget \nVector.set \nset \nVector.length \nlength \nVector.nRows \nnRows \nVector.nrows \nnrows \nVector.init \ninit \nVector.ofArray \nofArray \nVector.toArray \ntoArray \nVector.countR \ncountR \nVector.idxR \nidxR \nVector.countRF \ncountRF \nVector.countBy \ncountBy \nVector.idxRF \nidxRF \nVector.range \nrange \nVector.rangef \nrangef \nVector.ofList \nofList \nVector.ofSeq \nofSeq \nVector.create \ncreate \nVector.ofScalar \nofScalar \nVector.add \nadd \nVector.sub \nsub \nVector.mulRVV \nmulRVV \nVector.mulVRV \nmulVRV \nVector.cptMul \ncptMul \nVector.cptMax \ncptMax \nVector.cptMin \ncptMin \nVector.scale \nscale \nVector.neg \nneg \nVector.dot \ndot \nVector.transpose \ntranspose \nVector.exists \nexists \nVector.forall \nforall \nVector.existsi \nexistsi \nVector.foralli \nforalli \nVector.map \nmap \nVector.map2 \nmap2 \nVector.map3 \nmap3 \nVector.copy \ncopy \nVector.mapi \nmapi \nVector.fold \nfold \nVector.foldi \nfoldi \nVector.zeroCreate \nzeroCreate \nVector.oneCreate \noneCreate \nVector.zero \nzero \nVector.ones \nones \nVector.sum \nsum \nVector.prod \nprod \nVector.norm \nnorm \nVector.toThePower \ntoThePower \nVector.cptPow \ncptPow \nVector.inplaceAssign \ninplaceAssign \nVector.inplaceMap \ninplaceMap \nVector.inplaceMapi \ninplaceMapi \nVector.inplaceAdd \ninplaceAdd \nVector.inplaceSub \ninplaceSub \nVector.inplaceCptMul \ninplaceCptMul \nVector.inplaceScale \ninplaceScale \nVector.singleton \nsingleton \nVector.inplace_assign \ninplace_assign \nVector.inplace_map \ninplace_map \nVector.inplace_mapi \ninplace_mapi \nVector.inplace_add \ninplace_add \nVector.inplace_sub \ninplace_sub \nVector.inplace_cptMul \ninplace_cptMul \nVector.inplace_scale \ninplace_scale \nVector.of_array \nof_array \nVector.to_array \nto_array \nVector.of_list \nof_list \nVector.of_seq \nof_seq \nVector.of_scalar \nof_scalar \nVector.raw \nraw \nVector.interval \ninterval \nVector.mean \nmean \nVector.median \nmedian \nVector.medianAbsoluteDev \nmedianAbsoluteDev \nVector.stats \nstats \nVector.covPopulation \ncovPopulation \nVector.cov \ncov \nVector.getMeanOfReplicates \ngetMeanOfReplicates \nVector.getStDevOfReplicates \ngetStDevOfReplicates \nVector.getCvOfReplicates \ngetCvOfReplicates \nVector.splitVector \nsplitVector"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#get","title":"Vector.get","content":"Vector.get \nget \n\nReturns the value of the vector at the given index \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#set","title":"Vector.set","content":"Vector.set \nset \n\nSets the value to the vector at the given index \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#length","title":"Vector.length","content":"Vector.length \nlength \n\nReturns length of vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#nRows","title":"Vector.nRows","content":"Vector.nRows \nnRows \n\nReturns length of vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#nrows","title":"Vector.nrows","content":"Vector.nrows \nnrows \n\nReturns length of vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#init","title":"Vector.init","content":"Vector.init \ninit \n\nInitiates vector of length count and fills it by applying initializer function on indices\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#ofArray","title":"Vector.ofArray","content":"Vector.ofArray \nofArray \n\nCreates vector with values of array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#toArray","title":"Vector.toArray","content":"Vector.toArray \ntoArray \n\nCreates array with values of vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#countR","title":"Vector.countR","content":"Vector.countR \ncountR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#idxR","title":"Vector.idxR","content":"Vector.idxR \nidxR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#countRF","title":"Vector.countRF","content":"Vector.countRF \ncountRF \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#countBy","title":"Vector.countBy","content":"Vector.countBy \ncountBy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#idxRF","title":"Vector.idxRF","content":"Vector.idxRF \nidxRF \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#range","title":"Vector.range","content":"Vector.range \nrange \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#rangef","title":"Vector.rangef","content":"Vector.rangef \nrangef \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#ofList","title":"Vector.ofList","content":"Vector.ofList \nofList \n\nCreates vector with values of list \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#ofSeq","title":"Vector.ofSeq","content":"Vector.ofSeq \nofSeq \n\nCreates vector with values of sequence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#create","title":"Vector.create","content":"Vector.create \ncreate \n\nCreates vector of length count and fills it with value \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#ofScalar","title":"Vector.ofScalar","content":"Vector.ofScalar \nofScalar \n\nCreates one dimensional vector of value\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#add","title":"Vector.add","content":"Vector.add \nadd \n\nBuilds a new vector whose elements are the results of adding the corresponding elements of the two vectors pairwise. The two input vectors must have the same lengths, otherwise ArgumentException is raised.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#sub","title":"Vector.sub","content":"Vector.sub \nsub \n\nBuilds a new vector whose elements are the results of substracting the corresponding elements of vector2 from vector1. The two input vectors must have the same lengths, otherwise ArgumentException is raised.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#mulRVV","title":"Vector.mulRVV","content":"Vector.mulRVV \nmulRVV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#mulVRV","title":"Vector.mulVRV","content":"Vector.mulVRV \nmulVRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#cptMul","title":"Vector.cptMul","content":"Vector.cptMul \ncptMul \n\nBuilds a new vector whose elements are the results of multiplying the corresponding elements of the given vectors. The two input vectors must have the same lengths, otherwise ArgumentException is raised.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#cptMax","title":"Vector.cptMax","content":"Vector.cptMax \ncptMax \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#cptMin","title":"Vector.cptMin","content":"Vector.cptMin \ncptMin \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#scale","title":"Vector.scale","content":"Vector.scale \nscale \n\nBuilds a new vector whose elements are the results of multiplying the given scalar with each of the elements of the vector.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#neg","title":"Vector.neg","content":"Vector.neg \nneg \n\nBuilds a new vector whose elements are the results of multiplying -1 with each of the elements of the vector.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#dot","title":"Vector.dot","content":"Vector.dot \ndot \n\nDot product of the two vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#transpose","title":"Vector.transpose","content":"Vector.transpose \ntranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#exists","title":"Vector.exists","content":"Vector.exists \nexists \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#forall","title":"Vector.forall","content":"Vector.forall \nforall \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#existsi","title":"Vector.existsi","content":"Vector.existsi \nexistsi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#foralli","title":"Vector.foralli","content":"Vector.foralli \nforalli \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#map","title":"Vector.map","content":"Vector.map \nmap \n\nBuilds a new vector whose elements are the results of applying the given function to each of the elements of the vector.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#map2","title":"Vector.map2","content":"Vector.map2 \nmap2 \n\nBuilds a new vector whose elements are the results of applying the given function to the corresponding elements of the two vectors pairwise. The two input vectors must have the same lengths, otherwise ArgumentException is raised.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#map3","title":"Vector.map3","content":"Vector.map3 \nmap3 \n\nBuilds a new vector whose elements are the results of applying the given function to the corresponding elements of the two vectors pairwise. The two input vectors must have the same lengths, otherwise ArgumentException is raised.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#copy","title":"Vector.copy","content":"Vector.copy \ncopy \n\nBuilds a new vector that contains the elements of the given vector.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#mapi","title":"Vector.mapi","content":"Vector.mapi \nmapi \n\nBuilds a new vector whose elements are the results of applying the given function to each of the elements of the vector and their corresponding index.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#fold","title":"Vector.fold","content":"Vector.fold \nfold \n\nApplies a function to each element of the vector, threading an accumulator argument through the computation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#foldi","title":"Vector.foldi","content":"Vector.foldi \nfoldi \n\nApplies a function to each element of the vector and their corresponding index, threading an accumulator argument through the computation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#zeroCreate","title":"Vector.zeroCreate","content":"Vector.zeroCreate \nzeroCreate \n\nCreates a vector of length count and fills it with zeros\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#oneCreate","title":"Vector.oneCreate","content":"Vector.oneCreate \noneCreate \n\nCreates a vector of length count and fills it with ones\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#zero","title":"Vector.zero","content":"Vector.zero \nzero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#ones","title":"Vector.ones","content":"Vector.ones \nones \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#sum","title":"Vector.sum","content":"Vector.sum \nsum \n\nSum of all elements of the vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#prod","title":"Vector.prod","content":"Vector.prod \nprod \n\nProduct of all elements of the vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#norm","title":"Vector.norm","content":"Vector.norm \nnorm \n\nEuklidian norm of the vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#toThePower","title":"Vector.toThePower","content":"Vector.toThePower \ntoThePower \n\nBuilds a new vector whose elements are the results of exponentiating each of the elements of the vector with n.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#cptPow","title":"Vector.cptPow","content":"Vector.cptPow \ncptPow \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplaceAssign","title":"Vector.inplaceAssign","content":"Vector.inplaceAssign \ninplaceAssign \n\nApplies the given function to each of the indexes of the vector. No new vector is created.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplaceMap","title":"Vector.inplaceMap","content":"Vector.inplaceMap \ninplaceMap \n\nApplies the given function to each of the elements of the vector. No new vector is created.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplaceMapi","title":"Vector.inplaceMapi","content":"Vector.inplaceMapi \ninplaceMapi \n\nApplies the given function to each of the elements of the vector and their corresponding index. No new vector is created.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplaceAdd","title":"Vector.inplaceAdd","content":"Vector.inplaceAdd \ninplaceAdd \n\nAdd values of vector2 to values of vector1. Vector2 stays unchanged.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplaceSub","title":"Vector.inplaceSub","content":"Vector.inplaceSub \ninplaceSub \n\nSubstract values of vector2 from values of vector1. Vector2 stays unchanged.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplaceCptMul","title":"Vector.inplaceCptMul","content":"Vector.inplaceCptMul \ninplaceCptMul \n\nMultiply values of vector1 with values of vector2. Vector2 stays unchanged.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplaceScale","title":"Vector.inplaceScale","content":"Vector.inplaceScale \ninplaceScale \n\nMultiply values of vector with scalar.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#singleton","title":"Vector.singleton","content":"Vector.singleton \nsingleton \n\nApplies the given function to each of the indexes of the vector.\nBuilds vector of Length 1 from value x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplace_assign","title":"Vector.inplace_assign","content":"Vector.inplace_assign \ninplace_assign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplace_map","title":"Vector.inplace_map","content":"Vector.inplace_map \ninplace_map \n\nApplies the given function to each of the elements of the vector.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplace_mapi","title":"Vector.inplace_mapi","content":"Vector.inplace_mapi \ninplace_mapi \n\nApplies the given function to each of the elements of the vector and their corresponding index.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplace_add","title":"Vector.inplace_add","content":"Vector.inplace_add \ninplace_add \n\nAdd values of vector v2 to values of vector v1. Vector v2 stays unchanged\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplace_sub","title":"Vector.inplace_sub","content":"Vector.inplace_sub \ninplace_sub \n\nSubstract values of vector v2 from values of vector v1. Vector v2 stays unchanged\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplace_cptMul","title":"Vector.inplace_cptMul","content":"Vector.inplace_cptMul \ninplace_cptMul \n\nMultiply values of vector v1 with values of vector v2. Vector v2 stays unchanged.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#inplace_scale","title":"Vector.inplace_scale","content":"Vector.inplace_scale \ninplace_scale \n\nMultiply values of vector v1 with scalar.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#of_array","title":"Vector.of_array","content":"Vector.of_array \nof_array \n\nBuilds vector from array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#to_array","title":"Vector.to_array","content":"Vector.to_array \nto_array \n\nBuilds array from vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#of_list","title":"Vector.of_list","content":"Vector.of_list \nof_list \n\nBuilds vector from list\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#of_seq","title":"Vector.of_seq","content":"Vector.of_seq \nof_seq \n\nBuilds vector from sequence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#of_scalar","title":"Vector.of_scalar","content":"Vector.of_scalar \nof_scalar \n\nBuilds one dimensional vector from scalar\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#raw","title":"Vector.raw","content":"Vector.raw \nraw \n\n Returns the raw data array without copy\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#interval","title":"Vector.interval","content":"Vector.interval \ninterval \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#mean","title":"Vector.mean","content":"Vector.mean \nmean \n\n Computes the population mean (Normalized by N)            \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#median","title":"Vector.median","content":"Vector.median \nmedian \n\n Computes the sample median\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#medianAbsoluteDev","title":"Vector.medianAbsoluteDev","content":"Vector.medianAbsoluteDev \nmedianAbsoluteDev \n\n Median absolute deviation (MAD)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#stats","title":"Vector.stats","content":"Vector.stats \nstats \n\n Returns SummaryStats of vector with N, mean, sum-of-squares, minimum and maximum\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#covPopulation","title":"Vector.covPopulation","content":"Vector.covPopulation \ncovPopulation \n\n Returns an estimator of the population covariance of two random variables v1 and v2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#cov","title":"Vector.cov","content":"Vector.cov \ncov \n\n Returns the sample covariance of two random variables v1 and v2. (Bessel\u0027s correction by N-1) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#getMeanOfReplicates","title":"Vector.getMeanOfReplicates","content":"Vector.getMeanOfReplicates \ngetMeanOfReplicates \n\n calculates the sample means with a given number of replicates present in the sequence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#getStDevOfReplicates","title":"Vector.getStDevOfReplicates","content":"Vector.getStDevOfReplicates \ngetStDevOfReplicates \n\n calculates the sample standard deviations with a given number of replicates present in the sequence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#getCvOfReplicates","title":"Vector.getCvOfReplicates","content":"Vector.getCvOfReplicates \ngetCvOfReplicates \n\n calculates the coefficient of variation based on the sample standard deviations with a given number of replicates present in the sequence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule.html#splitVector","title":"Vector.splitVector","content":"Vector.splitVector \nsplitVector \n\n Splits a vector according to given indices. Returns (vector including values according to indices, rest)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html","title":"Generic","content":"Generic \n \nGeneric.get \nget \nGeneric.set \nset \nGeneric.length \nlength \nGeneric.ofList \nofList \nGeneric.ofSeq \nofSeq \nGeneric.init \ninit \nGeneric.initNumeric \ninitNumeric \nGeneric.ofArray \nofArray \nGeneric.toArray \ntoArray \nGeneric.create \ncreate \nGeneric.zeroCreate \nzeroCreate \nGeneric.oneCreate \noneCreate \nGeneric.zero \nzero \nGeneric.ones \nones \nGeneric.ofScalar \nofScalar \nGeneric.add \nadd \nGeneric.sub \nsub \nGeneric.mulRVV \nmulRVV \nGeneric.mulVRV \nmulVRV \nGeneric.cptMul \ncptMul \nGeneric.cptMax \ncptMax \nGeneric.cptMin \ncptMin \nGeneric.scale \nscale \nGeneric.dot \ndot \nGeneric.neg \nneg \nGeneric.transpose \ntranspose \nGeneric.inplaceAdd \ninplaceAdd \nGeneric.inplaceSub \ninplaceSub \nGeneric.inplaceCptMul \ninplaceCptMul \nGeneric.inplaceScale \ninplaceScale \nGeneric.inplace_cptMul \ninplace_cptMul \nGeneric.inplace_scale \ninplace_scale \nGeneric.exists \nexists \nGeneric.forall \nforall \nGeneric.existsi \nexistsi \nGeneric.foralli \nforalli \nGeneric.map \nmap \nGeneric.map2 \nmap2 \nGeneric.map3 \nmap3 \nGeneric.zip \nzip \nGeneric.unzip \nunzip \nGeneric.mapi \nmapi \nGeneric.copy \ncopy \nGeneric.inplaceMap \ninplaceMap \nGeneric.inplaceMapi \ninplaceMapi \nGeneric.inplace_map \ninplace_map \nGeneric.inplace_mapi \ninplace_mapi \nGeneric.fold \nfold \nGeneric.foldi \nfoldi \nGeneric.compare \ncompare \nGeneric.hash \nhash \nGeneric.inplaceAssign \ninplaceAssign \nGeneric.inplace_assign \ninplace_assign \nGeneric.sum \nsum \nGeneric.prod \nprod \nGeneric.norm \nnorm \nGeneric.of_list \nof_list \nGeneric.of_seq \nof_seq \nGeneric.of_array \nof_array \nGeneric.to_array \nto_array \nGeneric.of_scalar \nof_scalar \nGeneric.inplace_add \ninplace_add \nGeneric.inplace_sub \ninplace_sub"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#get","title":"Generic.get","content":"Generic.get \nget \n\nReturns the value of the vector a at the given index i\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#set","title":"Generic.set","content":"Generic.set \nset \n\nSets the value x to the vector a at the given index i\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#length","title":"Generic.length","content":"Generic.length \nlength \n\nReturns length of vector v\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#ofList","title":"Generic.ofList","content":"Generic.ofList \nofList \n\nCreates vector from list xss\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#ofSeq","title":"Generic.ofSeq","content":"Generic.ofSeq \nofSeq \n\nCreates vector from seq xss\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#init","title":"Generic.init","content":"Generic.init \ninit \n\nInitializes vector with count members, based on function f\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#initNumeric","title":"Generic.initNumeric","content":"Generic.initNumeric \ninitNumeric \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#ofArray","title":"Generic.ofArray","content":"Generic.ofArray \nofArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#toArray","title":"Generic.toArray","content":"Generic.toArray \ntoArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#create","title":"Generic.create","content":"Generic.create \ncreate \n\nCreates vector of length count and fills it with value\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#zeroCreate","title":"Generic.zeroCreate","content":"Generic.zeroCreate \nzeroCreate \n\nCreates a vector of length count and fills it with zeros\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#oneCreate","title":"Generic.oneCreate","content":"Generic.oneCreate \noneCreate \n\nCreates a vector of length count and fills it with ones\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#zero","title":"Generic.zero","content":"Generic.zero \nzero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#ones","title":"Generic.ones","content":"Generic.ones \nones \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#ofScalar","title":"Generic.ofScalar","content":"Generic.ofScalar \nofScalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#add","title":"Generic.add","content":"Generic.add \nadd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#sub","title":"Generic.sub","content":"Generic.sub \nsub \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#mulRVV","title":"Generic.mulRVV","content":"Generic.mulRVV \nmulRVV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#mulVRV","title":"Generic.mulVRV","content":"Generic.mulVRV \nmulVRV \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#cptMul","title":"Generic.cptMul","content":"Generic.cptMul \ncptMul \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#cptMax","title":"Generic.cptMax","content":"Generic.cptMax \ncptMax \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#cptMin","title":"Generic.cptMin","content":"Generic.cptMin \ncptMin \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#scale","title":"Generic.scale","content":"Generic.scale \nscale \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#dot","title":"Generic.dot","content":"Generic.dot \ndot \n\nDot product of the two vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#neg","title":"Generic.neg","content":"Generic.neg \nneg \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#transpose","title":"Generic.transpose","content":"Generic.transpose \ntranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplaceAdd","title":"Generic.inplaceAdd","content":"Generic.inplaceAdd \ninplaceAdd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplaceSub","title":"Generic.inplaceSub","content":"Generic.inplaceSub \ninplaceSub \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplaceCptMul","title":"Generic.inplaceCptMul","content":"Generic.inplaceCptMul \ninplaceCptMul \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplaceScale","title":"Generic.inplaceScale","content":"Generic.inplaceScale \ninplaceScale \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplace_cptMul","title":"Generic.inplace_cptMul","content":"Generic.inplace_cptMul \ninplace_cptMul \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplace_scale","title":"Generic.inplace_scale","content":"Generic.inplace_scale \ninplace_scale \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#exists","title":"Generic.exists","content":"Generic.exists \nexists \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#forall","title":"Generic.forall","content":"Generic.forall \nforall \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#existsi","title":"Generic.existsi","content":"Generic.existsi \nexistsi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#foralli","title":"Generic.foralli","content":"Generic.foralli \nforalli \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#map","title":"Generic.map","content":"Generic.map \nmap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#map2","title":"Generic.map2","content":"Generic.map2 \nmap2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#map3","title":"Generic.map3","content":"Generic.map3 \nmap3 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#zip","title":"Generic.zip","content":"Generic.zip \nzip \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#unzip","title":"Generic.unzip","content":"Generic.unzip \nunzip \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#mapi","title":"Generic.mapi","content":"Generic.mapi \nmapi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#copy","title":"Generic.copy","content":"Generic.copy \ncopy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplaceMap","title":"Generic.inplaceMap","content":"Generic.inplaceMap \ninplaceMap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplaceMapi","title":"Generic.inplaceMapi","content":"Generic.inplaceMapi \ninplaceMapi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplace_map","title":"Generic.inplace_map","content":"Generic.inplace_map \ninplace_map \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplace_mapi","title":"Generic.inplace_mapi","content":"Generic.inplace_mapi \ninplace_mapi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#fold","title":"Generic.fold","content":"Generic.fold \nfold \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#foldi","title":"Generic.foldi","content":"Generic.foldi \nfoldi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#compare","title":"Generic.compare","content":"Generic.compare \ncompare \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#hash","title":"Generic.hash","content":"Generic.hash \nhash \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplaceAssign","title":"Generic.inplaceAssign","content":"Generic.inplaceAssign \ninplaceAssign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplace_assign","title":"Generic.inplace_assign","content":"Generic.inplace_assign \ninplace_assign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#sum","title":"Generic.sum","content":"Generic.sum \nsum \n\nSum of all elements of the vector a\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#prod","title":"Generic.prod","content":"Generic.prod \nprod \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#norm","title":"Generic.norm","content":"Generic.norm \nnorm \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#of_list","title":"Generic.of_list","content":"Generic.of_list \nof_list \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#of_seq","title":"Generic.of_seq","content":"Generic.of_seq \nof_seq \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#of_array","title":"Generic.of_array","content":"Generic.of_array \nof_array \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#to_array","title":"Generic.to_array","content":"Generic.to_array \nto_array \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#of_scalar","title":"Generic.of_scalar","content":"Generic.of_scalar \nof_scalar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplace_add","title":"Generic.inplace_add","content":"Generic.inplace_add \ninplace_add \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-generic.html#inplace_sub","title":"Generic.inplace_sub","content":"Generic.inplace_sub \ninplace_sub \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-summarystats.html","title":"SummaryStats","content":"SummaryStats \n\n Module to compute common statistical measure on \n \nSummaryStats.ofVector \nofVector"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-summarystats.html#ofVector","title":"SummaryStats.ofVector","content":"SummaryStats.ofVector \nofVector \n\n Returns SummaryStats of vector with N, mean, sum-of-squares, minimum and maximum\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-range.html","title":"range","content":"range \n \nrange.Item1 \nItem1 \nrange.Item2 \nItem2"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-range.html#Item1","title":"range.Item1","content":"range.Item1 \nItem1 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-range.html#Item2","title":"range.Item2","content":"range.Item2 \nItem2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-rangef.html","title":"rangef","content":"rangef \n \nrangef.Item1 \nItem1 \nrangef.Item2 \nItem2 \nrangef.Item3 \nItem3"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-rangef.html#Item1","title":"rangef.Item1","content":"rangef.Item1 \nItem1 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-rangef.html#Item2","title":"rangef.Item2","content":"rangef.Item2 \nItem2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectormodule-rangef.html#Item3","title":"rangef.Item3","content":"rangef.Item3 \nItem3 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectorextension.html","title":"VectorExtension","content":"VectorExtension \n \nVectorExtension.ToArray \nToArray \nVectorExtension.Norm \nNorm \nVectorExtension.Norm \nNorm \nVectorExtension.Copy \nCopy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectorextension.html#ToArray","title":"VectorExtension.ToArray","content":"VectorExtension.ToArray \nToArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectorextension.html#Norm","title":"VectorExtension.Norm","content":"VectorExtension.Norm \nNorm \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectorextension.html#Norm","title":"VectorExtension.Norm","content":"VectorExtension.Norm \nNorm \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectorextension.html#Copy","title":"VectorExtension.Copy","content":"VectorExtension.Copy \nCopy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum.html","title":"BigNum","content":"BigNum \n \nBigNum.IsPositive \nIsPositive \nBigNum.Sign \nSign \nBigNum.Denominator \nDenominator \nBigNum.StructuredDisplayString \nStructuredDisplayString \nBigNum.IsNegative \nIsNegative \nBigNum.Numerator \nNumerator \nBigNum.Zero \nZero \nBigNum.One \nOne"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum.html#IsPositive","title":"BigNum.IsPositive","content":"BigNum.IsPositive \nIsPositive \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum.html#Sign","title":"BigNum.Sign","content":"BigNum.Sign \nSign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum.html#Denominator","title":"BigNum.Denominator","content":"BigNum.Denominator \nDenominator \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum.html#StructuredDisplayString","title":"BigNum.StructuredDisplayString","content":"BigNum.StructuredDisplayString \nStructuredDisplayString \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum.html#IsNegative","title":"BigNum.IsNegative","content":"BigNum.IsNegative \nIsNegative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum.html#Numerator","title":"BigNum.Numerator","content":"BigNum.Numerator \nNumerator \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum.html#Zero","title":"BigNum.Zero","content":"BigNum.Zero \nZero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum.html#One","title":"BigNum.One","content":"BigNum.One \nOne \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html","title":"BigRational","content":"BigRational \n \nBigRational.IsPositive \nIsPositive \nBigRational.Sign \nSign \nBigRational.Denominator \nDenominator \nBigRational.StructuredDisplayString \nStructuredDisplayString \nBigRational.IsNegative \nIsNegative \nBigRational.Numerator \nNumerator \nBigRational.Abs \nAbs \nBigRational.FromBigInt \nFromBigInt \nBigRational.FromInt \nFromInt \nBigRational.Parse \nParse \nBigRational.PowN \nPowN \nBigRational.ToBigInt \nToBigInt \nBigRational.ToDouble \nToDouble \nBigRational.ToInt32 \nToInt32 \nBigRational.(\u002B) \n(\u002B) \nBigRational.(/) \n(/) \nBigRational.(=) \n(=) \nBigRational.op_Explicit \nop_Explicit \nBigRational.op_Explicit \nop_Explicit \nBigRational.op_Explicit \nop_Explicit \nBigRational.(\u003E) \n(\u003E) \nBigRational.(\u003E=) \n(\u003E=) \nBigRational.(\u003C\u003E) \n(\u003C\u003E) \nBigRational.(\u003C) \n(\u003C) \nBigRational.(\u003C=) \n(\u003C=) \nBigRational.(*) \n(*) \nBigRational.(-) \n(-) \nBigRational.(~-) \n(~-) \nBigRational.(~\u002B) \n(~\u002B) \nBigRational.Zero \nZero \nBigRational.One \nOne \nBigRational.Z \nZ \nBigRational.Q \nQ"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#IsPositive","title":"BigRational.IsPositive","content":"BigRational.IsPositive \nIsPositive \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#Sign","title":"BigRational.Sign","content":"BigRational.Sign \nSign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#Denominator","title":"BigRational.Denominator","content":"BigRational.Denominator \nDenominator \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#StructuredDisplayString","title":"BigRational.StructuredDisplayString","content":"BigRational.StructuredDisplayString \nStructuredDisplayString \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#IsNegative","title":"BigRational.IsNegative","content":"BigRational.IsNegative \nIsNegative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#Numerator","title":"BigRational.Numerator","content":"BigRational.Numerator \nNumerator \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#Abs","title":"BigRational.Abs","content":"BigRational.Abs \nAbs \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#FromBigInt","title":"BigRational.FromBigInt","content":"BigRational.FromBigInt \nFromBigInt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#FromInt","title":"BigRational.FromInt","content":"BigRational.FromInt \nFromInt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#Parse","title":"BigRational.Parse","content":"BigRational.Parse \nParse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#PowN","title":"BigRational.PowN","content":"BigRational.PowN \nPowN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#ToBigInt","title":"BigRational.ToBigInt","content":"BigRational.ToBigInt \nToBigInt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#ToDouble","title":"BigRational.ToDouble","content":"BigRational.ToDouble \nToDouble \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#ToInt32","title":"BigRational.ToInt32","content":"BigRational.ToInt32 \nToInt32 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(\u002B)","title":"BigRational.(\u002B)","content":"BigRational.(\u002B) \n(\u002B) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(/)","title":"BigRational.(/)","content":"BigRational.(/) \n(/) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(=)","title":"BigRational.(=)","content":"BigRational.(=) \n(=) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#op_Explicit","title":"BigRational.op_Explicit","content":"BigRational.op_Explicit \nop_Explicit \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#op_Explicit","title":"BigRational.op_Explicit","content":"BigRational.op_Explicit \nop_Explicit \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#op_Explicit","title":"BigRational.op_Explicit","content":"BigRational.op_Explicit \nop_Explicit \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(\u003E)","title":"BigRational.(\u003E)","content":"BigRational.(\u003E) \n(\u003E) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(\u003E=)","title":"BigRational.(\u003E=)","content":"BigRational.(\u003E=) \n(\u003E=) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(\u003C\u003E)","title":"BigRational.(\u003C\u003E)","content":"BigRational.(\u003C\u003E) \n(\u003C\u003E) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(\u003C)","title":"BigRational.(\u003C)","content":"BigRational.(\u003C) \n(\u003C) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(\u003C=)","title":"BigRational.(\u003C=)","content":"BigRational.(\u003C=) \n(\u003C=) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(*)","title":"BigRational.(*)","content":"BigRational.(*) \n(*) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(-)","title":"BigRational.(-)","content":"BigRational.(-) \n(-) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(~-)","title":"BigRational.(~-)","content":"BigRational.(~-) \n(~-) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#(~\u002B)","title":"BigRational.(~\u002B)","content":"BigRational.(~\u002B) \n(~\u002B) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#Zero","title":"BigRational.Zero","content":"BigRational.Zero \nZero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#One","title":"BigRational.One","content":"BigRational.One \nOne \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#Z","title":"BigRational.Z","content":"BigRational.Z \nZ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrational.html#Q","title":"BigRational.Q","content":"BigRational.Q \nQ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html","title":"BigRationalLarge","content":"BigRationalLarge \n \nBigRationalLarge.IsPositive \nIsPositive \nBigRationalLarge.Sign \nSign \nBigRationalLarge.Denominator \nDenominator \nBigRationalLarge.IsNegative \nIsNegative \nBigRationalLarge.Numerator \nNumerator \nBigRationalLarge.Compare \nCompare \nBigRationalLarge.Equals \nEquals \nBigRationalLarge.Hash \nHash \nBigRationalLarge.LessThan \nLessThan \nBigRationalLarge.Normalize \nNormalize \nBigRationalLarge.Parse \nParse \nBigRationalLarge.Rational \nRational \nBigRationalLarge.RationalZ \nRationalZ \nBigRationalLarge.ToDouble \nToDouble \nBigRationalLarge.(\u002B) \n(\u002B) \nBigRationalLarge.(/) \n(/) \nBigRationalLarge.(*) \n(*) \nBigRationalLarge.(-) \n(-) \nBigRationalLarge.(~-) \n(~-) \nBigRationalLarge.(~\u002B) \n(~\u002B) \nBigRationalLarge.Q \nQ"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#IsPositive","title":"BigRationalLarge.IsPositive","content":"BigRationalLarge.IsPositive \nIsPositive \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Sign","title":"BigRationalLarge.Sign","content":"BigRationalLarge.Sign \nSign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Denominator","title":"BigRationalLarge.Denominator","content":"BigRationalLarge.Denominator \nDenominator \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#IsNegative","title":"BigRationalLarge.IsNegative","content":"BigRationalLarge.IsNegative \nIsNegative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Numerator","title":"BigRationalLarge.Numerator","content":"BigRationalLarge.Numerator \nNumerator \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Compare","title":"BigRationalLarge.Compare","content":"BigRationalLarge.Compare \nCompare \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Equals","title":"BigRationalLarge.Equals","content":"BigRationalLarge.Equals \nEquals \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Hash","title":"BigRationalLarge.Hash","content":"BigRationalLarge.Hash \nHash \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#LessThan","title":"BigRationalLarge.LessThan","content":"BigRationalLarge.LessThan \nLessThan \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Normalize","title":"BigRationalLarge.Normalize","content":"BigRationalLarge.Normalize \nNormalize \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Parse","title":"BigRationalLarge.Parse","content":"BigRationalLarge.Parse \nParse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Rational","title":"BigRationalLarge.Rational","content":"BigRationalLarge.Rational \nRational \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#RationalZ","title":"BigRationalLarge.RationalZ","content":"BigRationalLarge.RationalZ \nRationalZ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#ToDouble","title":"BigRationalLarge.ToDouble","content":"BigRationalLarge.ToDouble \nToDouble \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#(\u002B)","title":"BigRationalLarge.(\u002B)","content":"BigRationalLarge.(\u002B) \n(\u002B) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#(/)","title":"BigRationalLarge.(/)","content":"BigRationalLarge.(/) \n(/) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#(*)","title":"BigRationalLarge.(*)","content":"BigRationalLarge.(*) \n(*) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#(-)","title":"BigRationalLarge.(-)","content":"BigRationalLarge.(-) \n(-) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#(~-)","title":"BigRationalLarge.(~-)","content":"BigRationalLarge.(~-) \n(~-) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#(~\u002B)","title":"BigRationalLarge.(~\u002B)","content":"BigRationalLarge.(~\u002B) \n(~\u002B) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bigrationallarge.html#Q","title":"BigRationalLarge.Q","content":"BigRationalLarge.Q \nQ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-densematrix-1.html","title":"DenseMatrix\u003C\u0027T\u003E","content":"DenseMatrix\u003C\u0027T\u003E \n \nDenseMatrix\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDenseMatrix\u003C\u0027T\u003E.Item \nItem \nDenseMatrix\u003C\u0027T\u003E.ElementOps \nElementOps \nDenseMatrix\u003C\u0027T\u003E.NumCols \nNumCols \nDenseMatrix\u003C\u0027T\u003E.OpsData \nOpsData \nDenseMatrix\u003C\u0027T\u003E.NumRows \nNumRows \nDenseMatrix\u003C\u0027T\u003E.Values \nValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-densematrix-1.html#\u0060\u0060.ctor\u0060\u0060","title":"DenseMatrix\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"DenseMatrix\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-densematrix-1.html#Item","title":"DenseMatrix\u003C\u0027T\u003E.Item","content":"DenseMatrix\u003C\u0027T\u003E.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-densematrix-1.html#ElementOps","title":"DenseMatrix\u003C\u0027T\u003E.ElementOps","content":"DenseMatrix\u003C\u0027T\u003E.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-densematrix-1.html#NumCols","title":"DenseMatrix\u003C\u0027T\u003E.NumCols","content":"DenseMatrix\u003C\u0027T\u003E.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-densematrix-1.html#OpsData","title":"DenseMatrix\u003C\u0027T\u003E.OpsData","content":"DenseMatrix\u003C\u0027T\u003E.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-densematrix-1.html#NumRows","title":"DenseMatrix\u003C\u0027T\u003E.NumRows","content":"DenseMatrix\u003C\u0027T\u003E.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-densematrix-1.html#Values","title":"DenseMatrix\u003C\u0027T\u003E.Values","content":"DenseMatrix\u003C\u0027T\u003E.Values \nValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html","title":"IFloating\u003C\u0027T\u003E","content":"IFloating\u003C\u0027T\u003E \n \nIFloating\u003C\u0027T\u003E.Acos \nAcos \nIFloating\u003C\u0027T\u003E.Asin \nAsin \nIFloating\u003C\u0027T\u003E.Atan \nAtan \nIFloating\u003C\u0027T\u003E.Atan2 \nAtan2 \nIFloating\u003C\u0027T\u003E.Cos \nCos \nIFloating\u003C\u0027T\u003E.Cosh \nCosh \nIFloating\u003C\u0027T\u003E.Exp \nExp \nIFloating\u003C\u0027T\u003E.Log \nLog \nIFloating\u003C\u0027T\u003E.LogN \nLogN \nIFloating\u003C\u0027T\u003E.Sin \nSin \nIFloating\u003C\u0027T\u003E.Sinh \nSinh \nIFloating\u003C\u0027T\u003E.Sqrt \nSqrt \nIFloating\u003C\u0027T\u003E.Tan \nTan \nIFloating\u003C\u0027T\u003E.Tanh \nTanh \nIFloating\u003C\u0027T\u003E.Pi \nPi"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Acos","title":"IFloating\u003C\u0027T\u003E.Acos","content":"IFloating\u003C\u0027T\u003E.Acos \nAcos \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Asin","title":"IFloating\u003C\u0027T\u003E.Asin","content":"IFloating\u003C\u0027T\u003E.Asin \nAsin \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Atan","title":"IFloating\u003C\u0027T\u003E.Atan","content":"IFloating\u003C\u0027T\u003E.Atan \nAtan \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Atan2","title":"IFloating\u003C\u0027T\u003E.Atan2","content":"IFloating\u003C\u0027T\u003E.Atan2 \nAtan2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Cos","title":"IFloating\u003C\u0027T\u003E.Cos","content":"IFloating\u003C\u0027T\u003E.Cos \nCos \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Cosh","title":"IFloating\u003C\u0027T\u003E.Cosh","content":"IFloating\u003C\u0027T\u003E.Cosh \nCosh \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Exp","title":"IFloating\u003C\u0027T\u003E.Exp","content":"IFloating\u003C\u0027T\u003E.Exp \nExp \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Log","title":"IFloating\u003C\u0027T\u003E.Log","content":"IFloating\u003C\u0027T\u003E.Log \nLog \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#LogN","title":"IFloating\u003C\u0027T\u003E.LogN","content":"IFloating\u003C\u0027T\u003E.LogN \nLogN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Sin","title":"IFloating\u003C\u0027T\u003E.Sin","content":"IFloating\u003C\u0027T\u003E.Sin \nSin \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Sinh","title":"IFloating\u003C\u0027T\u003E.Sinh","content":"IFloating\u003C\u0027T\u003E.Sinh \nSinh \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Sqrt","title":"IFloating\u003C\u0027T\u003E.Sqrt","content":"IFloating\u003C\u0027T\u003E.Sqrt \nSqrt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Tan","title":"IFloating\u003C\u0027T\u003E.Tan","content":"IFloating\u003C\u0027T\u003E.Tan \nTan \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Tanh","title":"IFloating\u003C\u0027T\u003E.Tanh","content":"IFloating\u003C\u0027T\u003E.Tanh \nTanh \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifloating-1.html#Pi","title":"IFloating\u003C\u0027T\u003E.Pi","content":"IFloating\u003C\u0027T\u003E.Pi \nPi \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifractional-1.html","title":"IFractional\u003C\u0027T\u003E","content":"IFractional\u003C\u0027T\u003E \n \nIFractional\u003C\u0027T\u003E.Divide \nDivide \nIFractional\u003C\u0027T\u003E.Reciprocal \nReciprocal"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifractional-1.html#Divide","title":"IFractional\u003C\u0027T\u003E.Divide","content":"IFractional\u003C\u0027T\u003E.Divide \nDivide \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifractional-1.html#Reciprocal","title":"IFractional\u003C\u0027T\u003E.Reciprocal","content":"IFractional\u003C\u0027T\u003E.Reciprocal \nReciprocal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifsiformattable.html","title":"IFsiFormattable","content":"IFsiFormattable \n \nIFsiFormattable.Format \nFormat \nIFsiFormattable.FormatWithInfo \nFormatWithInfo"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifsiformattable.html#Format","title":"IFsiFormattable.Format","content":"IFsiFormattable.Format \nFormat \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ifsiformattable.html#FormatWithInfo","title":"IFsiFormattable.FormatWithInfo","content":"IFsiFormattable.FormatWithInfo \nFormatWithInfo \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iieee-1.html","title":"IIEEE\u003C\u0027T\u003E","content":"IIEEE\u003C\u0027T\u003E \n \nIIEEE\u003C\u0027T\u003E.IsInfinite \nIsInfinite \nIIEEE\u003C\u0027T\u003E.IsNaN \nIsNaN \nIIEEE\u003C\u0027T\u003E.NegativeInfinity \nNegativeInfinity \nIIEEE\u003C\u0027T\u003E.EpsilonOne \nEpsilonOne \nIIEEE\u003C\u0027T\u003E.PositiveInfinity \nPositiveInfinity \nIIEEE\u003C\u0027T\u003E.NaN \nNaN"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iieee-1.html#IsInfinite","title":"IIEEE\u003C\u0027T\u003E.IsInfinite","content":"IIEEE\u003C\u0027T\u003E.IsInfinite \nIsInfinite \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iieee-1.html#IsNaN","title":"IIEEE\u003C\u0027T\u003E.IsNaN","content":"IIEEE\u003C\u0027T\u003E.IsNaN \nIsNaN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iieee-1.html#NegativeInfinity","title":"IIEEE\u003C\u0027T\u003E.NegativeInfinity","content":"IIEEE\u003C\u0027T\u003E.NegativeInfinity \nNegativeInfinity \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iieee-1.html#EpsilonOne","title":"IIEEE\u003C\u0027T\u003E.EpsilonOne","content":"IIEEE\u003C\u0027T\u003E.EpsilonOne \nEpsilonOne \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iieee-1.html#PositiveInfinity","title":"IIEEE\u003C\u0027T\u003E.PositiveInfinity","content":"IIEEE\u003C\u0027T\u003E.PositiveInfinity \nPositiveInfinity \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iieee-1.html#NaN","title":"IIEEE\u003C\u0027T\u003E.NaN","content":"IIEEE\u003C\u0027T\u003E.NaN \nNaN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iintegral-1.html","title":"IIntegral\u003C\u0027T\u003E","content":"IIntegral\u003C\u0027T\u003E \n \nIIntegral\u003C\u0027T\u003E.DivRem \nDivRem \nIIntegral\u003C\u0027T\u003E.Divide \nDivide \nIIntegral\u003C\u0027T\u003E.Modulus \nModulus \nIIntegral\u003C\u0027T\u003E.OfBigInt \nOfBigInt \nIIntegral\u003C\u0027T\u003E.ToBigInt \nToBigInt"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iintegral-1.html#DivRem","title":"IIntegral\u003C\u0027T\u003E.DivRem","content":"IIntegral\u003C\u0027T\u003E.DivRem \nDivRem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iintegral-1.html#Divide","title":"IIntegral\u003C\u0027T\u003E.Divide","content":"IIntegral\u003C\u0027T\u003E.Divide \nDivide \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iintegral-1.html#Modulus","title":"IIntegral\u003C\u0027T\u003E.Modulus","content":"IIntegral\u003C\u0027T\u003E.Modulus \nModulus \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iintegral-1.html#OfBigInt","title":"IIntegral\u003C\u0027T\u003E.OfBigInt","content":"IIntegral\u003C\u0027T\u003E.OfBigInt \nOfBigInt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-iintegral-1.html#ToBigInt","title":"IIntegral\u003C\u0027T\u003E.ToBigInt","content":"IIntegral\u003C\u0027T\u003E.ToBigInt \nToBigInt \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-imatrixformattable.html","title":"IMatrixFormattable","content":"IMatrixFormattable \n \nIMatrixFormattable.GetNumCols \nGetNumCols \nIMatrixFormattable.GetNumRows \nGetNumRows \nIMatrixFormattable.InteractiveFormat \nInteractiveFormat"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-imatrixformattable.html#GetNumCols","title":"IMatrixFormattable.GetNumCols","content":"IMatrixFormattable.GetNumCols \nGetNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-imatrixformattable.html#GetNumRows","title":"IMatrixFormattable.GetNumRows","content":"IMatrixFormattable.GetNumRows \nGetNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-imatrixformattable.html#InteractiveFormat","title":"IMatrixFormattable.InteractiveFormat","content":"IMatrixFormattable.InteractiveFormat \nInteractiveFormat \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inormfloat-1.html","title":"INormFloat\u003C\u0027T\u003E","content":"INormFloat\u003C\u0027T\u003E \n \nINormFloat\u003C\u0027T\u003E.Norm \nNorm"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inormfloat-1.html#Norm","title":"INormFloat\u003C\u0027T\u003E.Norm","content":"INormFloat\u003C\u0027T\u003E.Norm \nNorm \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html","title":"INumeric\u003C\u0027T\u003E","content":"INumeric\u003C\u0027T\u003E \n \nINumeric\u003C\u0027T\u003E.Abs \nAbs \nINumeric\u003C\u0027T\u003E.Add \nAdd \nINumeric\u003C\u0027T\u003E.Compare \nCompare \nINumeric\u003C\u0027T\u003E.Equals \nEquals \nINumeric\u003C\u0027T\u003E.Multiply \nMultiply \nINumeric\u003C\u0027T\u003E.Negate \nNegate \nINumeric\u003C\u0027T\u003E.Parse \nParse \nINumeric\u003C\u0027T\u003E.Sign \nSign \nINumeric\u003C\u0027T\u003E.Subtract \nSubtract \nINumeric\u003C\u0027T\u003E.ToString \nToString \nINumeric\u003C\u0027T\u003E.Zero \nZero \nINumeric\u003C\u0027T\u003E.One \nOne"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Abs","title":"INumeric\u003C\u0027T\u003E.Abs","content":"INumeric\u003C\u0027T\u003E.Abs \nAbs \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Add","title":"INumeric\u003C\u0027T\u003E.Add","content":"INumeric\u003C\u0027T\u003E.Add \nAdd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Compare","title":"INumeric\u003C\u0027T\u003E.Compare","content":"INumeric\u003C\u0027T\u003E.Compare \nCompare \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Equals","title":"INumeric\u003C\u0027T\u003E.Equals","content":"INumeric\u003C\u0027T\u003E.Equals \nEquals \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Multiply","title":"INumeric\u003C\u0027T\u003E.Multiply","content":"INumeric\u003C\u0027T\u003E.Multiply \nMultiply \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Negate","title":"INumeric\u003C\u0027T\u003E.Negate","content":"INumeric\u003C\u0027T\u003E.Negate \nNegate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Parse","title":"INumeric\u003C\u0027T\u003E.Parse","content":"INumeric\u003C\u0027T\u003E.Parse \nParse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Sign","title":"INumeric\u003C\u0027T\u003E.Sign","content":"INumeric\u003C\u0027T\u003E.Sign \nSign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Subtract","title":"INumeric\u003C\u0027T\u003E.Subtract","content":"INumeric\u003C\u0027T\u003E.Subtract \nSubtract \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#ToString","title":"INumeric\u003C\u0027T\u003E.ToString","content":"INumeric\u003C\u0027T\u003E.ToString \nToString \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#Zero","title":"INumeric\u003C\u0027T\u003E.Zero","content":"INumeric\u003C\u0027T\u003E.Zero \nZero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-inumeric-1.html#One","title":"INumeric\u003C\u0027T\u003E.One","content":"INumeric\u003C\u0027T\u003E.One \nOne \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-irowvectorformattable.html","title":"IRowVectorFormattable","content":"IRowVectorFormattable \n \nIRowVectorFormattable.GetValueCount \nGetValueCount \nIRowVectorFormattable.InteractiveFormat \nInteractiveFormat"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-irowvectorformattable.html#GetValueCount","title":"IRowVectorFormattable.GetValueCount","content":"IRowVectorFormattable.GetValueCount \nGetValueCount \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-irowvectorformattable.html#InteractiveFormat","title":"IRowVectorFormattable.InteractiveFormat","content":"IRowVectorFormattable.InteractiveFormat \nInteractiveFormat \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ivectorformattable.html","title":"IVectorFormattable","content":"IVectorFormattable \n \nIVectorFormattable.GetValueCount \nGetValueCount \nIVectorFormattable.InteractiveFormat \nInteractiveFormat"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ivectorformattable.html#GetValueCount","title":"IVectorFormattable.GetValueCount","content":"IVectorFormattable.GetValueCount \nGetValueCount \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ivectorformattable.html#InteractiveFormat","title":"IVectorFormattable.InteractiveFormat","content":"IVectorFormattable.InteractiveFormat \nInteractiveFormat \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-linearalgebralapack.html","title":"LinearAlgebraLAPACK","content":"LinearAlgebraLAPACK \n\n Internal provider of Lapack functionality, not for direct user usage.\n \nLinearAlgebraLAPACK.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-linearalgebralapack.html#\u0060\u0060.ctor\u0060\u0060","title":"LinearAlgebraLAPACK.\u0060\u0060.ctor\u0060\u0060","content":"LinearAlgebraLAPACK.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-linearalgebramkl.html","title":"LinearAlgebraMKL","content":"LinearAlgebraMKL \n\n Internal provider of MKL functionality, not for direct user usage.\n \nLinearAlgebraMKL.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-linearalgebramkl.html#\u0060\u0060.ctor\u0060\u0060","title":"LinearAlgebraMKL.\u0060\u0060.ctor\u0060\u0060","content":"LinearAlgebraMKL.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html","title":"Matrix\u003C\u0027T\u003E","content":"Matrix\u003C\u0027T\u003E \n \nMatrix\u003C\u0027T\u003E.Format \nFormat \nMatrix\u003C\u0027T\u003E.Format \nFormat \nMatrix\u003C\u0027T\u003E.Format \nFormat \nMatrix\u003C\u0027T\u003E.FormatStrings \nFormatStrings \nMatrix\u003C\u0027T\u003E.GetSlice \nGetSlice \nMatrix\u003C\u0027T\u003E.PermuteColumns \nPermuteColumns \nMatrix\u003C\u0027T\u003E.PermuteRows \nPermuteRows \nMatrix\u003C\u0027T\u003E.SetSlice \nSetSlice \nMatrix\u003C\u0027T\u003E.IsSparse \nIsSparse \nMatrix\u003C\u0027T\u003E.InternalSparseColumnValues \nInternalSparseColumnValues \nMatrix\u003C\u0027T\u003E.Dimensions \nDimensions \nMatrix\u003C\u0027T\u003E.NumCols \nNumCols \nMatrix\u003C\u0027T\u003E.Transpose \nTranspose \nMatrix\u003C\u0027T\u003E.InternalDenseValues \nInternalDenseValues \nMatrix\u003C\u0027T\u003E.Item \nItem \nMatrix\u003C\u0027T\u003E.DebugDisplay \nDebugDisplay \nMatrix\u003C\u0027T\u003E.StructuredDisplayAsArray \nStructuredDisplayAsArray \nMatrix\u003C\u0027T\u003E.InternalSparseRowOffsets \nInternalSparseRowOffsets \nMatrix\u003C\u0027T\u003E.StructuredDisplayAsFormattedMatrix \nStructuredDisplayAsFormattedMatrix \nMatrix\u003C\u0027T\u003E.InternalSparseValues \nInternalSparseValues \nMatrix\u003C\u0027T\u003E.ElementOps \nElementOps \nMatrix\u003C\u0027T\u003E.IsDense \nIsDense \nMatrix\u003C\u0027T\u003E.NumRows \nNumRows \nMatrix\u003C\u0027T\u003E.(\u002B) \n(\u002B) \nMatrix\u003C\u0027T\u003E.(\u002B) \n(\u002B) \nMatrix\u003C\u0027T\u003E.(\u002B) \n(\u002B) \nMatrix\u003C\u0027T\u003E.( .* ) \n( .* ) \nMatrix\u003C\u0027T\u003E.(*) \n(*) \nMatrix\u003C\u0027T\u003E.(*) \n(*) \nMatrix\u003C\u0027T\u003E.(*) \n(*) \nMatrix\u003C\u0027T\u003E.(*) \n(*) \nMatrix\u003C\u0027T\u003E.(-) \n(-) \nMatrix\u003C\u0027T\u003E.(-) \n(-) \nMatrix\u003C\u0027T\u003E.(-) \n(-) \nMatrix\u003C\u0027T\u003E.(~-) \n(~-) \nMatrix\u003C\u0027T\u003E.(~\u002B) \n(~\u002B) \nMatrix\u003C\u0027T\u003E.DenseRepr \nDenseRepr \nMatrix\u003C\u0027T\u003E.SparseRepr \nSparseRepr"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#Format","title":"Matrix\u003C\u0027T\u003E.Format","content":"Matrix\u003C\u0027T\u003E.Format \nFormat \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#Format","title":"Matrix\u003C\u0027T\u003E.Format","content":"Matrix\u003C\u0027T\u003E.Format \nFormat \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#Format","title":"Matrix\u003C\u0027T\u003E.Format","content":"Matrix\u003C\u0027T\u003E.Format \nFormat \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#FormatStrings","title":"Matrix\u003C\u0027T\u003E.FormatStrings","content":"Matrix\u003C\u0027T\u003E.FormatStrings \nFormatStrings \n\n Returns four chunks of the matrix as strings depending on the respective row/column start/end count, separated by a row and column indicating omitted rows and columns.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#GetSlice","title":"Matrix\u003C\u0027T\u003E.GetSlice","content":"Matrix\u003C\u0027T\u003E.GetSlice \nGetSlice \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#PermuteColumns","title":"Matrix\u003C\u0027T\u003E.PermuteColumns","content":"Matrix\u003C\u0027T\u003E.PermuteColumns \nPermuteColumns \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#PermuteRows","title":"Matrix\u003C\u0027T\u003E.PermuteRows","content":"Matrix\u003C\u0027T\u003E.PermuteRows \nPermuteRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#SetSlice","title":"Matrix\u003C\u0027T\u003E.SetSlice","content":"Matrix\u003C\u0027T\u003E.SetSlice \nSetSlice \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#IsSparse","title":"Matrix\u003C\u0027T\u003E.IsSparse","content":"Matrix\u003C\u0027T\u003E.IsSparse \nIsSparse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#InternalSparseColumnValues","title":"Matrix\u003C\u0027T\u003E.InternalSparseColumnValues","content":"Matrix\u003C\u0027T\u003E.InternalSparseColumnValues \nInternalSparseColumnValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#Dimensions","title":"Matrix\u003C\u0027T\u003E.Dimensions","content":"Matrix\u003C\u0027T\u003E.Dimensions \nDimensions \n\n RowCount * ColumnCount\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#NumCols","title":"Matrix\u003C\u0027T\u003E.NumCols","content":"Matrix\u003C\u0027T\u003E.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#Transpose","title":"Matrix\u003C\u0027T\u003E.Transpose","content":"Matrix\u003C\u0027T\u003E.Transpose \nTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#InternalDenseValues","title":"Matrix\u003C\u0027T\u003E.InternalDenseValues","content":"Matrix\u003C\u0027T\u003E.InternalDenseValues \nInternalDenseValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#Item","title":"Matrix\u003C\u0027T\u003E.Item","content":"Matrix\u003C\u0027T\u003E.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#DebugDisplay","title":"Matrix\u003C\u0027T\u003E.DebugDisplay","content":"Matrix\u003C\u0027T\u003E.DebugDisplay \nDebugDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#StructuredDisplayAsArray","title":"Matrix\u003C\u0027T\u003E.StructuredDisplayAsArray","content":"Matrix\u003C\u0027T\u003E.StructuredDisplayAsArray \nStructuredDisplayAsArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#InternalSparseRowOffsets","title":"Matrix\u003C\u0027T\u003E.InternalSparseRowOffsets","content":"Matrix\u003C\u0027T\u003E.InternalSparseRowOffsets \nInternalSparseRowOffsets \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#StructuredDisplayAsFormattedMatrix","title":"Matrix\u003C\u0027T\u003E.StructuredDisplayAsFormattedMatrix","content":"Matrix\u003C\u0027T\u003E.StructuredDisplayAsFormattedMatrix \nStructuredDisplayAsFormattedMatrix \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#InternalSparseValues","title":"Matrix\u003C\u0027T\u003E.InternalSparseValues","content":"Matrix\u003C\u0027T\u003E.InternalSparseValues \nInternalSparseValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#ElementOps","title":"Matrix\u003C\u0027T\u003E.ElementOps","content":"Matrix\u003C\u0027T\u003E.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#IsDense","title":"Matrix\u003C\u0027T\u003E.IsDense","content":"Matrix\u003C\u0027T\u003E.IsDense \nIsDense \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#NumRows","title":"Matrix\u003C\u0027T\u003E.NumRows","content":"Matrix\u003C\u0027T\u003E.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(\u002B)","title":"Matrix\u003C\u0027T\u003E.(\u002B)","content":"Matrix\u003C\u0027T\u003E.(\u002B) \n(\u002B) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(\u002B)","title":"Matrix\u003C\u0027T\u003E.(\u002B)","content":"Matrix\u003C\u0027T\u003E.(\u002B) \n(\u002B) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(\u002B)","title":"Matrix\u003C\u0027T\u003E.(\u002B)","content":"Matrix\u003C\u0027T\u003E.(\u002B) \n(\u002B) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#( .* )","title":"Matrix\u003C\u0027T\u003E.( .* )","content":"Matrix\u003C\u0027T\u003E.( .* ) \n( .* ) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(*)","title":"Matrix\u003C\u0027T\u003E.(*)","content":"Matrix\u003C\u0027T\u003E.(*) \n(*) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(*)","title":"Matrix\u003C\u0027T\u003E.(*)","content":"Matrix\u003C\u0027T\u003E.(*) \n(*) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(*)","title":"Matrix\u003C\u0027T\u003E.(*)","content":"Matrix\u003C\u0027T\u003E.(*) \n(*) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(*)","title":"Matrix\u003C\u0027T\u003E.(*)","content":"Matrix\u003C\u0027T\u003E.(*) \n(*) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(-)","title":"Matrix\u003C\u0027T\u003E.(-)","content":"Matrix\u003C\u0027T\u003E.(-) \n(-) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(-)","title":"Matrix\u003C\u0027T\u003E.(-)","content":"Matrix\u003C\u0027T\u003E.(-) \n(-) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(-)","title":"Matrix\u003C\u0027T\u003E.(-)","content":"Matrix\u003C\u0027T\u003E.(-) \n(-) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(~-)","title":"Matrix\u003C\u0027T\u003E.(~-)","content":"Matrix\u003C\u0027T\u003E.(~-) \n(~-) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#(~\u002B)","title":"Matrix\u003C\u0027T\u003E.(~\u002B)","content":"Matrix\u003C\u0027T\u003E.(~\u002B) \n(~\u002B) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#DenseRepr","title":"Matrix\u003C\u0027T\u003E.DenseRepr","content":"Matrix\u003C\u0027T\u003E.DenseRepr \nDenseRepr \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix-1.html#SparseRepr","title":"Matrix\u003C\u0027T\u003E.SparseRepr","content":"Matrix\u003C\u0027T\u003E.SparseRepr \nSparseRepr \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-opsdata-1.html","title":"OpsData\u003C\u0027T\u003E","content":"OpsData\u003C\u0027T\u003E \n\n The value stored for the dictionary of numeric operations. If none is present then this indicates\n no operations are known for this type.\n \nOpsData\u003C\u0027T\u003E.IsNone \nIsNone \nOpsData\u003C\u0027T\u003E.IsSome \nIsSome \nOpsData\u003C\u0027T\u003E.Value \nValue \nOpsData\u003C\u0027T\u003E.None \nNone"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-opsdata-1.html#IsNone","title":"OpsData\u003C\u0027T\u003E.IsNone","content":"OpsData\u003C\u0027T\u003E.IsNone \nIsNone \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-opsdata-1.html#IsSome","title":"OpsData\u003C\u0027T\u003E.IsSome","content":"OpsData\u003C\u0027T\u003E.IsSome \nIsSome \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-opsdata-1.html#Value","title":"OpsData\u003C\u0027T\u003E.Value","content":"OpsData\u003C\u0027T\u003E.Value \nValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-opsdata-1.html#None","title":"OpsData\u003C\u0027T\u003E.None","content":"OpsData\u003C\u0027T\u003E.None \nNone \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutation.html","title":"Permutation","content":"Permutation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html","title":"Rank","content":"Rank \n\n The rank of a number is its size relative to other values in a sequence\n \nRank.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRank.RankAverage \nRankAverage \nRank.RankFirst \nRankFirst \nRank.RankMax \nRankMax \nRank.RankMin \nRankMin \nRank.rankMin \nrankMin \nRank.rankMax \nrankMax \nRank.rankAverage \nrankAverage \nRank.rankFirst \nrankFirst"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html#\u0060\u0060.ctor\u0060\u0060","title":"Rank.\u0060\u0060.ctor\u0060\u0060","content":"Rank.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html#RankAverage","title":"Rank.RankAverage","content":"Rank.RankAverage \nRankAverage \n\n Ranks each entry of the given unsorted data array.\n Ties are replaced by ther average ranks. Nans can be sorted as minimal or maximal values (default: maximal). Nans can be assigned to nan ranks (default: true)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html#RankFirst","title":"Rank.RankFirst","content":"Rank.RankFirst \nRankFirst \n\n Ranks each entry of the given unsorted data array.\n Permutation with increasing values at each index of ties. Nans can be sorted as minimal or maximal values (default: maximal). Nans can be assigned to nan ranks (default: true)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html#RankMax","title":"Rank.RankMax","content":"Rank.RankMax \nRankMax \n\n Ranks each entry of the given unsorted data array.\n Ties are replaced by their maximum. Nans can be sorted as minimal or maximal values (default: maximal). Nans can be assigned to nan ranks (default: true)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html#RankMin","title":"Rank.RankMin","content":"Rank.RankMin \nRankMin \n\n Ranks each entry of the given unsorted data array.\n Ties are replaced by their minimum. Nans can be sorted as minimal or maximal values (default: maximal). Nans can be assigned to nan ranks (default: true)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html#rankMin","title":"Rank.rankMin","content":"Rank.rankMin \nrankMin \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html#rankMax","title":"Rank.rankMax","content":"Rank.rankMax \nrankMax \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html#rankAverage","title":"Rank.rankAverage","content":"Rank.rankAverage \nrankAverage \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rank.html#rankFirst","title":"Rank.rankFirst","content":"Rank.rankFirst \nrankFirst \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectordebugview-1.html","title":"RowVectorDebugView\u003C\u0027T\u003E","content":"RowVectorDebugView\u003C\u0027T\u003E \n \nRowVectorDebugView\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRowVectorDebugView\u003C\u0027T\u003E.Items \nItems"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectordebugview-1.html#\u0060\u0060.ctor\u0060\u0060","title":"RowVectorDebugView\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"RowVectorDebugView\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvectordebugview-1.html#Items","title":"RowVectorDebugView\u003C\u0027T\u003E.Items","content":"RowVectorDebugView\u003C\u0027T\u003E.Items \nItems \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html","title":"SparseMatrix\u003C\u0027T\u003E","content":"SparseMatrix\u003C\u0027T\u003E \n \nSparseMatrix\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSparseMatrix\u003C\u0027T\u003E.MaxIndexForRow \nMaxIndexForRow \nSparseMatrix\u003C\u0027T\u003E.MinIndexForRow \nMinIndexForRow \nSparseMatrix\u003C\u0027T\u003E.Item \nItem \nSparseMatrix\u003C\u0027T\u003E.SparseColumnValues \nSparseColumnValues \nSparseMatrix\u003C\u0027T\u003E.SparseValues \nSparseValues \nSparseMatrix\u003C\u0027T\u003E.ElementOps \nElementOps \nSparseMatrix\u003C\u0027T\u003E.NumCols \nNumCols \nSparseMatrix\u003C\u0027T\u003E.SparseRowOffsets \nSparseRowOffsets \nSparseMatrix\u003C\u0027T\u003E.OpsData \nOpsData \nSparseMatrix\u003C\u0027T\u003E.NumRows \nNumRows"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#\u0060\u0060.ctor\u0060\u0060","title":"SparseMatrix\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"SparseMatrix\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#MaxIndexForRow","title":"SparseMatrix\u003C\u0027T\u003E.MaxIndexForRow","content":"SparseMatrix\u003C\u0027T\u003E.MaxIndexForRow \nMaxIndexForRow \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#MinIndexForRow","title":"SparseMatrix\u003C\u0027T\u003E.MinIndexForRow","content":"SparseMatrix\u003C\u0027T\u003E.MinIndexForRow \nMinIndexForRow \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#Item","title":"SparseMatrix\u003C\u0027T\u003E.Item","content":"SparseMatrix\u003C\u0027T\u003E.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#SparseColumnValues","title":"SparseMatrix\u003C\u0027T\u003E.SparseColumnValues","content":"SparseMatrix\u003C\u0027T\u003E.SparseColumnValues \nSparseColumnValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#SparseValues","title":"SparseMatrix\u003C\u0027T\u003E.SparseValues","content":"SparseMatrix\u003C\u0027T\u003E.SparseValues \nSparseValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#ElementOps","title":"SparseMatrix\u003C\u0027T\u003E.ElementOps","content":"SparseMatrix\u003C\u0027T\u003E.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#NumCols","title":"SparseMatrix\u003C\u0027T\u003E.NumCols","content":"SparseMatrix\u003C\u0027T\u003E.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#SparseRowOffsets","title":"SparseMatrix\u003C\u0027T\u003E.SparseRowOffsets","content":"SparseMatrix\u003C\u0027T\u003E.SparseRowOffsets \nSparseRowOffsets \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#OpsData","title":"SparseMatrix\u003C\u0027T\u003E.OpsData","content":"SparseMatrix\u003C\u0027T\u003E.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-sparsematrix-1.html#NumRows","title":"SparseMatrix\u003C\u0027T\u003E.NumRows","content":"SparseMatrix\u003C\u0027T\u003E.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectordebugview-1.html","title":"VectorDebugView\u003C\u0027T\u003E","content":"VectorDebugView\u003C\u0027T\u003E \n \nVectorDebugView\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nVectorDebugView\u003C\u0027T\u003E.Items \nItems"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectordebugview-1.html#\u0060\u0060.ctor\u0060\u0060","title":"VectorDebugView\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"VectorDebugView\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vectordebugview-1.html#Items","title":"VectorDebugView\u003C\u0027T\u003E.Items","content":"VectorDebugView\u003C\u0027T\u003E.Items \nItems \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum-0.html","title":"bignum","content":"bignum \n \nbignum.IsPositive \nIsPositive \nbignum.Sign \nSign \nbignum.Denominator \nDenominator \nbignum.StructuredDisplayString \nStructuredDisplayString \nbignum.IsNegative \nIsNegative \nbignum.Numerator \nNumerator \nbignum.Zero \nZero \nbignum.One \nOne"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum-0.html#IsPositive","title":"bignum.IsPositive","content":"bignum.IsPositive \nIsPositive \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum-0.html#Sign","title":"bignum.Sign","content":"bignum.Sign \nSign \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum-0.html#Denominator","title":"bignum.Denominator","content":"bignum.Denominator \nDenominator \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum-0.html#StructuredDisplayString","title":"bignum.StructuredDisplayString","content":"bignum.StructuredDisplayString \nStructuredDisplayString \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum-0.html#IsNegative","title":"bignum.IsNegative","content":"bignum.IsNegative \nIsNegative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum-0.html#Numerator","title":"bignum.Numerator","content":"bignum.Numerator \nNumerator \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum-0.html#Zero","title":"bignum.Zero","content":"bignum.Zero \nZero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-bignum-0.html#One","title":"bignum.One","content":"bignum.One \nOne \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html","title":"matrix","content":"matrix \n \nmatrix.IsSparse \nIsSparse \nmatrix.InternalSparseColumnValues \nInternalSparseColumnValues \nmatrix.Dimensions \nDimensions \nmatrix.NumCols \nNumCols \nmatrix.Transpose \nTranspose \nmatrix.InternalDenseValues \nInternalDenseValues \nmatrix.Item \nItem \nmatrix.DebugDisplay \nDebugDisplay \nmatrix.StructuredDisplayAsArray \nStructuredDisplayAsArray \nmatrix.InternalSparseRowOffsets \nInternalSparseRowOffsets \nmatrix.StructuredDisplayAsFormattedMatrix \nStructuredDisplayAsFormattedMatrix \nmatrix.InternalSparseValues \nInternalSparseValues \nmatrix.ElementOps \nElementOps \nmatrix.IsDense \nIsDense \nmatrix.NumRows \nNumRows"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#IsSparse","title":"matrix.IsSparse","content":"matrix.IsSparse \nIsSparse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#InternalSparseColumnValues","title":"matrix.InternalSparseColumnValues","content":"matrix.InternalSparseColumnValues \nInternalSparseColumnValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#Dimensions","title":"matrix.Dimensions","content":"matrix.Dimensions \nDimensions \n\n RowCount * ColumnCount\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#NumCols","title":"matrix.NumCols","content":"matrix.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#Transpose","title":"matrix.Transpose","content":"matrix.Transpose \nTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#InternalDenseValues","title":"matrix.InternalDenseValues","content":"matrix.InternalDenseValues \nInternalDenseValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#Item","title":"matrix.Item","content":"matrix.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#DebugDisplay","title":"matrix.DebugDisplay","content":"matrix.DebugDisplay \nDebugDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#StructuredDisplayAsArray","title":"matrix.StructuredDisplayAsArray","content":"matrix.StructuredDisplayAsArray \nStructuredDisplayAsArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#InternalSparseRowOffsets","title":"matrix.InternalSparseRowOffsets","content":"matrix.InternalSparseRowOffsets \nInternalSparseRowOffsets \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#StructuredDisplayAsFormattedMatrix","title":"matrix.StructuredDisplayAsFormattedMatrix","content":"matrix.StructuredDisplayAsFormattedMatrix \nStructuredDisplayAsFormattedMatrix \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#InternalSparseValues","title":"matrix.InternalSparseValues","content":"matrix.InternalSparseValues \nInternalSparseValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#ElementOps","title":"matrix.ElementOps","content":"matrix.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#IsDense","title":"matrix.IsDense","content":"matrix.IsDense \nIsDense \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-matrix.html#NumRows","title":"matrix.NumRows","content":"matrix.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-permutation-0.html","title":"permutation","content":"permutation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html","title":"rowvec","content":"rowvec \n \nrowvec.NumCols \nNumCols \nrowvec.Transpose \nTranspose \nrowvec.Item \nItem \nrowvec.DebugDisplay \nDebugDisplay \nrowvec.StructuredDisplayAsArray \nStructuredDisplayAsArray \nrowvec.Length \nLength \nrowvec.Values \nValues \nrowvec.Details \nDetails \nrowvec.OpsData \nOpsData \nrowvec.ElementOps \nElementOps \nrowvec.InternalValues \nInternalValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#NumCols","title":"rowvec.NumCols","content":"rowvec.NumCols \nNumCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#Transpose","title":"rowvec.Transpose","content":"rowvec.Transpose \nTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#Item","title":"rowvec.Item","content":"rowvec.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#DebugDisplay","title":"rowvec.DebugDisplay","content":"rowvec.DebugDisplay \nDebugDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#StructuredDisplayAsArray","title":"rowvec.StructuredDisplayAsArray","content":"rowvec.StructuredDisplayAsArray \nStructuredDisplayAsArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#Length","title":"rowvec.Length","content":"rowvec.Length \nLength \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#Values","title":"rowvec.Values","content":"rowvec.Values \nValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#Details","title":"rowvec.Details","content":"rowvec.Details \nDetails \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#OpsData","title":"rowvec.OpsData","content":"rowvec.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#ElementOps","title":"rowvec.ElementOps","content":"rowvec.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rowvec.html#InternalValues","title":"rowvec.InternalValues","content":"rowvec.InternalValues \nInternalValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html","title":"vector","content":"vector \n \nvector.Transpose \nTranspose \nvector.Item \nItem \nvector.DebugDisplay \nDebugDisplay \nvector.StructuredDisplayAsArray \nStructuredDisplayAsArray \nvector.Length \nLength \nvector.Values \nValues \nvector.Details \nDetails \nvector.OpsData \nOpsData \nvector.ElementOps \nElementOps \nvector.NumRows \nNumRows \nvector.InternalValues \nInternalValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#Transpose","title":"vector.Transpose","content":"vector.Transpose \nTranspose \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#Item","title":"vector.Item","content":"vector.Item \nItem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#DebugDisplay","title":"vector.DebugDisplay","content":"vector.DebugDisplay \nDebugDisplay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#StructuredDisplayAsArray","title":"vector.StructuredDisplayAsArray","content":"vector.StructuredDisplayAsArray \nStructuredDisplayAsArray \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#Length","title":"vector.Length","content":"vector.Length \nLength \n\nLength of vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#Values","title":"vector.Values","content":"vector.Values \nValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#Details","title":"vector.Details","content":"vector.Details \nDetails \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#OpsData","title":"vector.OpsData","content":"vector.OpsData \nOpsData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#ElementOps","title":"vector.ElementOps","content":"vector.ElementOps \nElementOps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#NumRows","title":"vector.NumRows","content":"vector.NumRows \nNumRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-vector.html#InternalValues","title":"vector.InternalValues","content":"vector.InternalValues \nInternalValues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-evd.html","title":"EVD","content":"EVD \n \nEVD.symmetricEvd \nsymmetricEvd \nEVD.getRealEigenvalues \ngetRealEigenvalues \nEVD.getImaginaryEigenvalues \ngetImaginaryEigenvalues \nEVD.getEigenvalueMAtrix \ngetEigenvalueMAtrix"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-evd.html#symmetricEvd","title":"EVD.symmetricEvd","content":"EVD.symmetricEvd \nsymmetricEvd \n\n Computes the \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-evd.html#getRealEigenvalues","title":"EVD.getRealEigenvalues","content":"EVD.getRealEigenvalues \ngetRealEigenvalues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-evd.html#getImaginaryEigenvalues","title":"EVD.getImaginaryEigenvalues","content":"EVD.getImaginaryEigenvalues \ngetImaginaryEigenvalues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-evd.html#getEigenvalueMAtrix","title":"EVD.getEigenvalueMAtrix","content":"EVD.getEigenvalueMAtrix \ngetEigenvalueMAtrix \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html","title":"LinearAlgebra","content":"LinearAlgebra \n \nLinearAlgebra.Factorization \nFactorization \nLinearAlgebra.Service \nService \nLinearAlgebra.SolveTriangularLinearSystem \nSolveTriangularLinearSystem \nLinearAlgebra.SolveTriangularLinearSystems \nSolveTriangularLinearSystems \nLinearAlgebra.SolveLinearSystem \nSolveLinearSystem \nLinearAlgebra.SolveLinearSystems \nSolveLinearSystems \nLinearAlgebra.preDivideByVector \npreDivideByVector \nLinearAlgebra.preDivideByMatrix \npreDivideByMatrix \nLinearAlgebra.EVD \nEVD \nLinearAlgebra.EigenValues \nEigenValues \nLinearAlgebra.EigenValuesWhenSymmetric \nEigenValuesWhenSymmetric \nLinearAlgebra.EigenSpectrumWhenSymmetric \nEigenSpectrumWhenSymmetric \nLinearAlgebra.Inverse \nInverse \nLinearAlgebra.LeastSquares \nLeastSquares \nLinearAlgebra.LeastSquaresCholesky \nLeastSquaresCholesky \nLinearAlgebra.Cholesky \nCholesky \nLinearAlgebra.LU \nLU \nLinearAlgebra.QR \nQR \nLinearAlgebra.SVD \nSVD \nLinearAlgebra.spectralNorm \nspectralNorm \nLinearAlgebra.thinSVD \nthinSVD \nLinearAlgebra.Hessenberg \nHessenberg \nLinearAlgebra.hatmatrix \nhatmatrix \nLinearAlgebra.leverageBy \nleverageBy \nLinearAlgebra.leverage \nleverage \nLinearAlgebra.Determinant \nDeterminant"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#Service","title":"LinearAlgebra.Service","content":"LinearAlgebra.Service \nService \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#SolveTriangularLinearSystem","title":"LinearAlgebra.SolveTriangularLinearSystem","content":"LinearAlgebra.SolveTriangularLinearSystem \nSolveTriangularLinearSystem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#SolveTriangularLinearSystems","title":"LinearAlgebra.SolveTriangularLinearSystems","content":"LinearAlgebra.SolveTriangularLinearSystems \nSolveTriangularLinearSystems \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#SolveLinearSystem","title":"LinearAlgebra.SolveLinearSystem","content":"LinearAlgebra.SolveLinearSystem \nSolveLinearSystem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#SolveLinearSystems","title":"LinearAlgebra.SolveLinearSystems","content":"LinearAlgebra.SolveLinearSystems \nSolveLinearSystems \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#preDivideByVector","title":"LinearAlgebra.preDivideByVector","content":"LinearAlgebra.preDivideByVector \npreDivideByVector \n\n Given A[n,m] and B[n] solve for x[m] such that Ax = B\n This call may fail.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#preDivideByMatrix","title":"LinearAlgebra.preDivideByMatrix","content":"LinearAlgebra.preDivideByMatrix \npreDivideByMatrix \n\n Given A[n,m] and B[n,k] solve for X[m,k] such that AX = B\n This call may fail.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#EVD","title":"LinearAlgebra.EVD","content":"LinearAlgebra.EVD \nEVD \n\nCompoutes for an N-by-N real nonsymmetric matrix A, the\neigenvalue decomposition eigenvalues and right eigenvectors.\nThe right eigenvector v(j) of A satisfies\n\n                 A * v(j) = lambda(j) * v(j)\n\nwhere lambda(j) is its eigenvalue.\nThe computed eigenvectors are normalized to have Euclidean norm\nequal to 1 and largest component real. Uses the LAPACK subroutine dgeev with arguments JOBVR = \u0027V\u0027 and JOBVL = \u0027N\u0027\n\nReturns the real (first array) and imaginary (second array) parts of the eigenvalues and a matrix containing the corresponding eigenvectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#EigenValues","title":"LinearAlgebra.EigenValues","content":"LinearAlgebra.EigenValues \nEigenValues \n\n Compute eigenvalues of a square real matrix.\n Returns arrays containing the eigenvalues which may be complex.\n This call may fail.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#EigenValuesWhenSymmetric","title":"LinearAlgebra.EigenValuesWhenSymmetric","content":"LinearAlgebra.EigenValuesWhenSymmetric \nEigenValuesWhenSymmetric \n\n Compute eigenvalues for a real symmetric matrix.\n Returns array of real eigenvalues.\n This call may fail.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#EigenSpectrumWhenSymmetric","title":"LinearAlgebra.EigenSpectrumWhenSymmetric","content":"LinearAlgebra.EigenSpectrumWhenSymmetric \nEigenSpectrumWhenSymmetric \n\n Compute eigenvalues and eigenvectors for a real symmetric matrix.\n Returns arrays of the values and vectors (both based on reals).\n This call may fail.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#Inverse","title":"LinearAlgebra.Inverse","content":"LinearAlgebra.Inverse \nInverse \n\n Given A[n,n] find it\u0027s inverse.\n This call may fail.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#LeastSquares","title":"LinearAlgebra.LeastSquares","content":"LinearAlgebra.LeastSquares \nLeastSquares \n\n Given A[m,n] and B[m] solves AX = B for X[n].\n When m=\u003En, have over constrained system, finds least squares solution for X.\n When m\u003Cn, have under constrained system, finds least norm solution for X.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#LeastSquaresCholesky","title":"LinearAlgebra.LeastSquaresCholesky","content":"LinearAlgebra.LeastSquaresCholesky \nLeastSquaresCholesky \n\n Given A[m,n] and b[m] solves AX = b for X[n].\n When the system is under constrained,\n for example when the columns of A are not linearly independent,\n then it will not give sensible results.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#Cholesky","title":"LinearAlgebra.Cholesky","content":"LinearAlgebra.Cholesky \nCholesky \n\n Given A[n,n] real symmetric positive definite.\n Finds the cholesky decomposition L such that L\u0027 * L = A.\n May fail if not positive definite.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#LU","title":"LinearAlgebra.LU","content":"LinearAlgebra.LU \nLU \n\n Given A[n,n] real matrix.\n Finds P,L,U such that L*U = P*A with L,U lower/upper triangular.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#QR","title":"LinearAlgebra.QR","content":"LinearAlgebra.QR \nQR \n\n Given A[m,n] finds Q[m,m] and R[k,n] where k = min m n.\n Have A = Q.R  when m\u003C=n.\n Have A = Q.RX when m\u003En and RX[m,n] is R[n,n] row extended with (m-n) zero rows.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#SVD","title":"LinearAlgebra.SVD","content":"LinearAlgebra.SVD \nSVD \n\nReturns the full Singular Value Decomposition of the input MxN matrix \n\nA : A = U * SIGMA * V**T in the tuple (S, U, V**T), \n\nwhere S is an array containing the diagonal elements of SIGMA.\nuses the LAPACK routine dgesdd with the argument JOBZ = \u0027A\u0027\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#spectralNorm","title":"LinearAlgebra.spectralNorm","content":"LinearAlgebra.spectralNorm \nspectralNorm \n\nspectral norm of a matrix (for Frobenius norm use Matrix.norm)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#thinSVD","title":"LinearAlgebra.thinSVD","content":"LinearAlgebra.thinSVD \nthinSVD \n\nReturns the thin Singular Value Decomposition of the input MxN matrix A \n\nA = U * SIGMA * V**T in the tuple (S, U, V), \n\nwhere S is an array containing the diagonal elements of SIGMA.\nThe first min(M,N) columns of U and the first min(M,N) rows of V**T are returned in the arrays U and VT;\nuses the LAPACK routine dgesdd with the argument JOBZ = \u0027S\u0027\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#Hessenberg","title":"LinearAlgebra.Hessenberg","content":"LinearAlgebra.Hessenberg \nHessenberg \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#hatmatrix","title":"LinearAlgebra.hatmatrix","content":"LinearAlgebra.hatmatrix \nhatmatrix \n\n computes the hat matrix by the QR decomposition of the designmatrix used in ordinary least squares approaches\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#leverageBy","title":"LinearAlgebra.leverageBy","content":"LinearAlgebra.leverageBy \nleverageBy \n\n computes the hat matrix by the QR decomposition of the designmatrix used in ordinary least squares approaches\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#leverage","title":"LinearAlgebra.leverage","content":"LinearAlgebra.leverage \nleverage \n\n computes the leverage directly by QR decomposition of the designmatrix used in ordinary least squares approaches\n and computing of the diagnonal entries of the Hat matrix, known as the leverages of the regressors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule.html#Determinant","title":"LinearAlgebra.Determinant","content":"LinearAlgebra.Determinant \nDeterminant \n\n Compute the determinant of a matrix by performing an LU decomposition since if A = P\u0027LU,\n then det(A) = det(P\u0027) * det(L) * det(U).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramodule-factorization.html","title":"Factorization","content":"Factorization \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html","title":"LinearAlgebraManaged","content":"LinearAlgebraManaged \n\n This module is for internal use only.\n \nLinearAlgebraManaged.range \nrange \nLinearAlgebraManaged.NYI \nNYI \nLinearAlgebraManaged.SVD \nSVD \nLinearAlgebraManaged.symmetricEigenspectrum \nsymmetricEigenspectrum \nLinearAlgebraManaged.EigenSpectrum \nEigenSpectrum \nLinearAlgebraManaged.Condition \nCondition \nLinearAlgebraManaged.eigenvectors \neigenvectors \nLinearAlgebraManaged.eigenvalues \neigenvalues \nLinearAlgebraManaged.symmetricEigenvalues \nsymmetricEigenvalues \nLinearAlgebraManaged.symmetricEigenvectors \nsymmetricEigenvectors \nLinearAlgebraManaged.SolveTriangularLinearSystems \nSolveTriangularLinearSystems \nLinearAlgebraManaged.SolveTriangularLinearSystem \nSolveTriangularLinearSystem \nLinearAlgebraManaged.sumfR \nsumfR \nLinearAlgebraManaged.Cholesky \nCholesky \nLinearAlgebraManaged.LU \nLU \nLinearAlgebraManaged.SolveLinearSystem \nSolveLinearSystem \nLinearAlgebraManaged.SolveLinearSystems \nSolveLinearSystems \nLinearAlgebraManaged.Inverse \nInverse \nLinearAlgebraManaged.unitV \nunitV \nLinearAlgebraManaged.sign \nsign \nLinearAlgebraManaged.HouseholderTransform \nHouseholderTransform \nLinearAlgebraManaged.QRDense \nQRDense \nLinearAlgebraManaged.QRSparse \nQRSparse \nLinearAlgebraManaged.QR \nQR \nLinearAlgebraManaged.Hessenberg \nHessenberg \nLinearAlgebraManaged.leastSquares \nleastSquares \nLinearAlgebraManaged.leastSquaresCholesky \nleastSquaresCholesky \nLinearAlgebraManaged.hatMatrix \nhatMatrix \nLinearAlgebraManaged.leverageBy \nleverageBy \nLinearAlgebraManaged.leverage \nleverage \nLinearAlgebraManaged.pseudoInvers \npseudoInvers"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#NYI","title":"LinearAlgebraManaged.NYI","content":"LinearAlgebraManaged.NYI \nNYI \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#SVD","title":"LinearAlgebraManaged.SVD","content":"LinearAlgebraManaged.SVD \nSVD \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#symmetricEigenspectrum","title":"LinearAlgebraManaged.symmetricEigenspectrum","content":"LinearAlgebraManaged.symmetricEigenspectrum \nsymmetricEigenspectrum \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#EigenSpectrum","title":"LinearAlgebraManaged.EigenSpectrum","content":"LinearAlgebraManaged.EigenSpectrum \nEigenSpectrum \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#Condition","title":"LinearAlgebraManaged.Condition","content":"LinearAlgebraManaged.Condition \nCondition \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#eigenvectors","title":"LinearAlgebraManaged.eigenvectors","content":"LinearAlgebraManaged.eigenvectors \neigenvectors \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#eigenvalues","title":"LinearAlgebraManaged.eigenvalues","content":"LinearAlgebraManaged.eigenvalues \neigenvalues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#symmetricEigenvalues","title":"LinearAlgebraManaged.symmetricEigenvalues","content":"LinearAlgebraManaged.symmetricEigenvalues \nsymmetricEigenvalues \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#symmetricEigenvectors","title":"LinearAlgebraManaged.symmetricEigenvectors","content":"LinearAlgebraManaged.symmetricEigenvectors \nsymmetricEigenvectors \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#SolveTriangularLinearSystems","title":"LinearAlgebraManaged.SolveTriangularLinearSystems","content":"LinearAlgebraManaged.SolveTriangularLinearSystems \nSolveTriangularLinearSystems \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#SolveTriangularLinearSystem","title":"LinearAlgebraManaged.SolveTriangularLinearSystem","content":"LinearAlgebraManaged.SolveTriangularLinearSystem \nSolveTriangularLinearSystem \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#sumfR","title":"LinearAlgebraManaged.sumfR","content":"LinearAlgebraManaged.sumfR \nsumfR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#Cholesky","title":"LinearAlgebraManaged.Cholesky","content":"LinearAlgebraManaged.Cholesky \nCholesky \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#LU","title":"LinearAlgebraManaged.LU","content":"LinearAlgebraManaged.LU \nLU \n\n For a matrix A, the LU factorization is a pair of lower triangular matrix L and upper triangular matrix U so that A = L*U.\n The pivot function encode a permutation operation such for a matrix P P*A = L*U.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#SolveLinearSystem","title":"LinearAlgebraManaged.SolveLinearSystem","content":"LinearAlgebraManaged.SolveLinearSystem \nSolveLinearSystem \n\n Solves a system of linear equations, AX = B, with A LU factorized.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#SolveLinearSystems","title":"LinearAlgebraManaged.SolveLinearSystems","content":"LinearAlgebraManaged.SolveLinearSystems \nSolveLinearSystems \n\n Solves a system of linear equations, Ax = b, with A LU factorized.        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#Inverse","title":"LinearAlgebraManaged.Inverse","content":"LinearAlgebraManaged.Inverse \nInverse \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#unitV","title":"LinearAlgebraManaged.unitV","content":"LinearAlgebraManaged.unitV \nunitV \n\n Generates a unit vector [1 0 .. 0 ].\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#sign","title":"LinearAlgebraManaged.sign","content":"LinearAlgebraManaged.sign \nsign \n\n Computes the sign of a floating point number.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#HouseholderTransform","title":"LinearAlgebraManaged.HouseholderTransform","content":"LinearAlgebraManaged.HouseholderTransform \nHouseholderTransform \n\n This method computes and performs a Householder reflection. It will change the\n input matrix and return the reflection vector.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#QRDense","title":"LinearAlgebraManaged.QRDense","content":"LinearAlgebraManaged.QRDense \nQRDense \n\n QR factorization function for dense matrices\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#QRSparse","title":"LinearAlgebraManaged.QRSparse","content":"LinearAlgebraManaged.QRSparse \nQRSparse \n\n QR factorization function for sparse matrices, returns Q as a product of givens rotations and R as upper triangular\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#QR","title":"LinearAlgebraManaged.QR","content":"LinearAlgebraManaged.QR \nQR \n\n Matches the union type of the matrix and invokes the according QR factorization function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#Hessenberg","title":"LinearAlgebraManaged.Hessenberg","content":"LinearAlgebraManaged.Hessenberg \nHessenberg \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#leastSquares","title":"LinearAlgebraManaged.leastSquares","content":"LinearAlgebraManaged.leastSquares \nleastSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#leastSquaresCholesky","title":"LinearAlgebraManaged.leastSquaresCholesky","content":"LinearAlgebraManaged.leastSquaresCholesky \nleastSquaresCholesky \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#hatMatrix","title":"LinearAlgebraManaged.hatMatrix","content":"LinearAlgebraManaged.hatMatrix \nhatMatrix \n\n computes the hat matrix by the QR decomposition of the designmatrix used in ordinary least squares approaches\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#leverageBy","title":"LinearAlgebraManaged.leverageBy","content":"LinearAlgebraManaged.leverageBy \nleverageBy \n\n computes the leverages of every dataPoint of a dataSet given by the diagonal of the hat matrix. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#leverage","title":"LinearAlgebraManaged.leverage","content":"LinearAlgebraManaged.leverage \nleverage \n\n computes the leverage directly by QR decomposition of the designmatrix used in ordinary least squares approaches\n and computing of the diagnonal entries of the Hat matrix, known as the leverages of the regressors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged.html#pseudoInvers","title":"LinearAlgebraManaged.pseudoInvers","content":"LinearAlgebraManaged.pseudoInvers \npseudoInvers \n\n Calculates the pseudo inverse of the matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged-range.html","title":"range","content":"range \n \nrange.Item1 \nItem1 \nrange.Item2 \nItem2"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged-range.html#Item1","title":"range.Item1","content":"range.Item1 \nItem1 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebramanaged-range.html#Item2","title":"range.Item2","content":"range.Item2 \nItem2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-svd.html","title":"SVD","content":"SVD \n \nSVD.BreakException \nBreakException \nSVD.computeInPlace \ncomputeInPlace \nSVD.compute \ncompute"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-svd.html#computeInPlace","title":"SVD.computeInPlace","content":"SVD.computeInPlace \ncomputeInPlace \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-svd.html#compute","title":"SVD.compute","content":"SVD.compute \ncompute \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-svd-breakexception.html","title":"BreakException","content":"BreakException \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-ilinearalgebra.html","title":"ILinearAlgebra","content":"ILinearAlgebra \n\nThis is an internal interface and not for user usage.\nIt exposes a specialised subset of BLAS/LAPACK functionality.\nThis functionality is used by us to build the exposed APIs.\nIt is those exposed APIs that should be used.\n \nILinearAlgebra.dgemm_ \ndgemm_ \nILinearAlgebra.dgesdd_ \ndgesdd_ \nILinearAlgebra.dgesdd_thin_ \ndgesdd_thin_ \nILinearAlgebra.dsyevd_ \ndsyevd_"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-ilinearalgebra.html#dgemm_","title":"ILinearAlgebra.dgemm_","content":"ILinearAlgebra.dgemm_ \ndgemm_ \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-ilinearalgebra.html#dgesdd_","title":"ILinearAlgebra.dgesdd_","content":"ILinearAlgebra.dgesdd_ \ndgesdd_ \n\nReturns the full Singular Value Decomposition of the input MxN matrix \n\nA : A = U * SIGMA * V**T in the tuple (S, U, V**T), \n\nwhere S is an array containing the diagonal elements of SIGMA.\nuses the LAPACK routine dgesdd with the argument JOBZ = \u0027A\u0027\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-ilinearalgebra.html#dgesdd_thin_","title":"ILinearAlgebra.dgesdd_thin_","content":"ILinearAlgebra.dgesdd_thin_ \ndgesdd_thin_ \n\nrrqr\nReturns the thin Singular Value Decomposition of the input MxN matrix A \n\nA = U * SIGMA * V**T in the tuple (S, U, V**T), \n\nwhere S is an array containing the diagonal elements of SIGMA.\nThe first min(M,N) columns of U and the first min(M,N) rows of V**T are returned in the arrays U and VT;\nuses the LAPACK routine dgesdd with the argument JOBZ = \u0027S\u0027\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-ilinearalgebra.html#dsyevd_","title":"ILinearAlgebra.dsyevd_","content":"ILinearAlgebra.dsyevd_ \ndsyevd_ \n\nReturns the real (first array) and imaginary (second array) parts of the eigenvalues and a matrix containing the corresponding eigenvectors\nComputes for a N-by-N real symmetric matrix A, the\neigenvalue decomposition of eigenvalues and right eigenvectors.\nThe right eigenvector v(j) of A satisfies\n\n                 A * v(j) = lambda(j) * v(j)\n\nwhere lambda(j) is its eigenvalue.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebra.html","title":"LinearAlgebra","content":"LinearAlgebra \n \nLinearAlgebra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nLinearAlgebra.nullspace \nnullspace"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebra.html#\u0060\u0060.ctor\u0060\u0060","title":"LinearAlgebra.\u0060\u0060.ctor\u0060\u0060","content":"LinearAlgebra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra-linearalgebra.html#nullspace","title":"LinearAlgebra.nullspace","content":"LinearAlgebra.nullspace \nnullspace \n\n Synonym: kernel / right null space. Returns an orthonormal basis for the null space of matrix A (Ax = 0).\n The accuracy defines a threshold whether a singular value is considered as zero (default: 1e-08).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth.html","title":"Bandwidth","content":"Bandwidth \n\n Bandwidth selectors \n \nBandwidth.BinNumber \nBinNumber \nBandwidth.fromBinNumber \nfromBinNumber \nBandwidth.forHistogram \nforHistogram \nBandwidth.scottNormal \nscottNormal \nBandwidth.freedmanDiaconis \nfreedmanDiaconis \nBandwidth.nrd0 \nnrd0 \nBandwidth.uLSCV \nuLSCV"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth.html#fromBinNumber","title":"Bandwidth.fromBinNumber","content":"Bandwidth.fromBinNumber \nfromBinNumber \n\n Calculates the bandwidth from min max and number of bins\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth.html#forHistogram","title":"Bandwidth.forHistogram","content":"Bandwidth.forHistogram \nforHistogram \n\n Simple bandwidth for histogram\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth.html#scottNormal","title":"Bandwidth.scottNormal","content":"Bandwidth.scottNormal \nscottNormal \n\n Calcultes bandwidth according to Scott\u0027s normal reference rule\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth.html#freedmanDiaconis","title":"Bandwidth.freedmanDiaconis","content":"Bandwidth.freedmanDiaconis \nfreedmanDiaconis \n\n Calcultes bandwidth based on the Freedman\u2013Diaconis rule\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth.html#nrd0","title":"Bandwidth.nrd0","content":"Bandwidth.nrd0 \nnrd0 \n\n Implements Silverman\u0027s \u2018rule of thumb\u2019 for choosing the bandwidth of a Gaussian kernel density estimator.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth.html#uLSCV","title":"Bandwidth.uLSCV","content":"Bandwidth.uLSCV \nuLSCV \n\n Least squares cross-validation of bandwidth (unbiased)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth-binnumber.html","title":"BinNumber","content":"BinNumber \n\n Compute the number of bins for a histogram\n \nBinNumber.fromBandwidth \nfromBandwidth \nBinNumber.sqrt \nsqrt \nBinNumber.sturges \nsturges \nBinNumber.riceRule \nriceRule"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth-binnumber.html#fromBandwidth","title":"BinNumber.fromBandwidth","content":"BinNumber.fromBandwidth \nfromBandwidth \n\n Compute the number of bins from bandwidth\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth-binnumber.html#sqrt","title":"BinNumber.sqrt","content":"BinNumber.sqrt \nsqrt \n\n Square-root choice\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth-binnumber.html#sturges","title":"BinNumber.sturges","content":"BinNumber.sturges \nsturges \n\n Sturges\u0027 formula is derived from a binomial distribution and implicitly assumes an approximately normal distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-bandwidth-binnumber.html#riceRule","title":"BinNumber.riceRule","content":"BinNumber.riceRule \nriceRule \n\nThe Rice Rule is presented as a simple alternative to Sturges\u0027s rule.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html","title":"ContinuousDistribution","content":"ContinuousDistribution \n \nContinuousDistribution.Tails \nTails \nContinuousDistribution.normal \nnormal \nContinuousDistribution.chi \nchi \nContinuousDistribution.chiSquared \nchiSquared \nContinuousDistribution.uniform \nuniform \nContinuousDistribution.exponential \nexponential \nContinuousDistribution.gamma \ngamma \nContinuousDistribution.logNormal \nlogNormal \nContinuousDistribution.beta \nbeta \nContinuousDistribution.studentT \nstudentT \nContinuousDistribution.f \nf \nContinuousDistribution.studentizedRange \nstudentizedRange \nContinuousDistribution.multivariateNormal \nmultivariateNormal \nContinuousDistribution.getCriticalTValue \ngetCriticalTValue"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#normal","title":"ContinuousDistribution.normal","content":"ContinuousDistribution.normal \nnormal \n\n Initializes a Normal distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#chi","title":"ContinuousDistribution.chi","content":"ContinuousDistribution.chi \nchi \n\n Initializes a Chi distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#chiSquared","title":"ContinuousDistribution.chiSquared","content":"ContinuousDistribution.chiSquared \nchiSquared \n\n Initializes a ChiSquared distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#uniform","title":"ContinuousDistribution.uniform","content":"ContinuousDistribution.uniform \nuniform \n\n Initializes a uniform distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#exponential","title":"ContinuousDistribution.exponential","content":"ContinuousDistribution.exponential \nexponential \n\n Initializes a Exponential distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#gamma","title":"ContinuousDistribution.gamma","content":"ContinuousDistribution.gamma \ngamma \n\n Initializes a Gamma distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#logNormal","title":"ContinuousDistribution.logNormal","content":"ContinuousDistribution.logNormal \nlogNormal \n\n Initializes a Normal distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#beta","title":"ContinuousDistribution.beta","content":"ContinuousDistribution.beta \nbeta \n\n Initializes a Beta distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#studentT","title":"ContinuousDistribution.studentT","content":"ContinuousDistribution.studentT \nstudentT \n\n Initializes a Student\u0027s T-distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#f","title":"ContinuousDistribution.f","content":"ContinuousDistribution.f \nf \n\n Initializes a F-distribution         \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#studentizedRange","title":"ContinuousDistribution.studentizedRange","content":"ContinuousDistribution.studentizedRange \nstudentizedRange \n\n Initializes a studentized range distribution.     \n Accuracy defines the number of steps within the CDF integration (Recommended: 1k-10k, default: 2k). pValue accuracy is minimum 3 digits for v\u003E3.\n q:qValue r:number of treatments v:df (n-r) c:1.   \n Integration can be performed in parallel using PSeq\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#multivariateNormal","title":"ContinuousDistribution.multivariateNormal","content":"ContinuousDistribution.multivariateNormal \nmultivariateNormal \n\n Initializes a multivariate normal distribution with mean mu and covariance matrix sigma          \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule.html#getCriticalTValue","title":"ContinuousDistribution.getCriticalTValue","content":"ContinuousDistribution.getCriticalTValue \ngetCriticalTValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule-tails.html","title":"Tails","content":"Tails \n \nTails.OneTailed \nOneTailed \nTails.TwoTailed \nTwoTailed"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule-tails.html#OneTailed","title":"Tails.OneTailed","content":"Tails.OneTailed \nOneTailed \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistributionmodule-tails.html#TwoTailed","title":"Tails.TwoTailed","content":"Tails.TwoTailed \nTwoTailed \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discretedistribution.html","title":"DiscreteDistribution","content":"DiscreteDistribution \n\n Discrete probability distributions\n \nDiscreteDistribution.poisson \npoisson \nDiscreteDistribution.bernoulli \nbernoulli \nDiscreteDistribution.binomial \nbinomial \nDiscreteDistribution.hypergeometric \nhypergeometric"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discretedistribution.html#poisson","title":"DiscreteDistribution.poisson","content":"DiscreteDistribution.poisson \npoisson \n\n Initializes a Binomial distribution      \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discretedistribution.html#bernoulli","title":"DiscreteDistribution.bernoulli","content":"DiscreteDistribution.bernoulli \nbernoulli \n\n Initializes a uniform distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discretedistribution.html#binomial","title":"DiscreteDistribution.binomial","content":"DiscreteDistribution.binomial \nbinomial \n\n Initializes a Binomial distribution       \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discretedistribution.html#hypergeometric","title":"DiscreteDistribution.hypergeometric","content":"DiscreteDistribution.hypergeometric \nhypergeometric \n Initializes a hypergeometric distribution.\n \n The hypergeometric distribution is a discrete probability distribution\n that describes the probability of \u0060k\u0060 successes (random draws for which the object\n drawn has a specified feature) in \u0060n\u0060 draws, without replacement, from a finite\n population of size \u0060N\u0060 that contains exactly \u0060K\u0060 objects with that feature,\n wherein each draw is either a success (\u00601.0\u0060) or a failure (\u00600.0\u0060)."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distance.html","title":"Distance","content":"Distance \n\n Module to compute Distances between Distributions\n \nDistance.OneDimensional \nOneDimensional"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distance-onedimensional.html","title":"OneDimensional","content":"OneDimensional \n\n Module to compute Distances between 1D Distributions\n \nOneDimensional.cdfDistance \ncdfDistance \nOneDimensional.cdfDistanceWeighted \ncdfDistanceWeighted \nOneDimensional.wassersteinDistance \nwassersteinDistance \nOneDimensional.wassersteinDistanceWeighted \nwassersteinDistanceWeighted \nOneDimensional.energyDistance \nenergyDistance \nOneDimensional.energyDistanceWeighted \nenergyDistanceWeighted"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distance-onedimensional.html#cdfDistance","title":"OneDimensional.cdfDistance","content":"OneDimensional.cdfDistance \ncdfDistance \n\n Distance between two 1D distributions. p has to be positive\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distance-onedimensional.html#cdfDistanceWeighted","title":"OneDimensional.cdfDistanceWeighted","content":"OneDimensional.cdfDistanceWeighted \ncdfDistanceWeighted \n\n Distance between two 1D distributions. p has to be positive\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distance-onedimensional.html#wassersteinDistance","title":"OneDimensional.wassersteinDistance","content":"OneDimensional.wassersteinDistance \nwassersteinDistance \n\n Wasserstein distance between two 1D distributions\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distance-onedimensional.html#wassersteinDistanceWeighted","title":"OneDimensional.wassersteinDistanceWeighted","content":"OneDimensional.wassersteinDistanceWeighted \nwassersteinDistanceWeighted \n\n Weighted Wasserstein Distance between two 1D distributions\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distance-onedimensional.html#energyDistance","title":"OneDimensional.energyDistance","content":"OneDimensional.energyDistance \nenergyDistance \n\n Energy distance between two 1D distributions\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distance-onedimensional.html#energyDistanceWeighted","title":"OneDimensional.energyDistanceWeighted","content":"OneDimensional.energyDistanceWeighted \nenergyDistanceWeighted \n\n Weighted Energy Distance between two 1D distributions\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html","title":"Empirical","content":"Empirical \n\n Represents a probability mass function (map from values to probabilities).\n \nEmpirical.ofHistogram \nofHistogram \nEmpirical.getZip \ngetZip \nEmpirical.sum \nsum \nEmpirical.maxLike \nmaxLike \nEmpirical.getXValues \ngetXValues \nEmpirical.getYValues \ngetYValues \nEmpirical.probabilityAt \nprobabilityAt \nEmpirical.probabilities \nprobabilities \nEmpirical.normalizewith \nnormalizewith \nEmpirical.normalize \nnormalize \nEmpirical.normalizePercentage \nnormalizePercentage \nEmpirical.normalizeBandwidth \nnormalizeBandwidth \nEmpirical.normalizePDD \nnormalizePDD \nEmpirical.sampleFrom \nsampleFrom \nEmpirical.random \nrandom \nEmpirical.mean \nmean \nEmpirical.varAround \nvarAround \nEmpirical.var \nvar \nEmpirical.log \nlog \nEmpirical.exp \nexp \nEmpirical.create \ncreate"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#ofHistogram","title":"Empirical.ofHistogram","content":"Empirical.ofHistogram \nofHistogram \n\n Creates Pmf of a Histogram (normalize by n)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#getZip","title":"Empirical.getZip","content":"Empirical.getZip \ngetZip \n\n Returns: tuple of (sorted value sequence, probability sequence)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#sum","title":"Empirical.sum","content":"Empirical.sum \nsum \n\n Returns the total of the probabilities in the map\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#maxLike","title":"Empirical.maxLike","content":"Empirical.maxLike \nmaxLike \n\n Returns the largest probability in the map.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#getXValues","title":"Empirical.getXValues","content":"Empirical.getXValues \ngetXValues \n\n Returns distinct values from pmf\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#getYValues","title":"Empirical.getYValues","content":"Empirical.getYValues \ngetYValues \n\n Returns distinct values from pmf\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#probabilityAt","title":"Empirical.probabilityAt","content":"Empirical.probabilityAt \nprobabilityAt \n\n Gets the probability associated with the value x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#probabilities","title":"Empirical.probabilities","content":"Empirical.probabilities \nprobabilities \n\n Gets an unsorted sequence of probabilities\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#normalizewith","title":"Empirical.normalizewith","content":"Empirical.normalizewith \nnormalizewith \n\n Normalizes this PMF so the sum of all probabilities equals fraction\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#normalize","title":"Empirical.normalize","content":"Empirical.normalize \nnormalize \n\n Normalizes this PMF so the sum of all probabilities equals 1. \n Discrete Probability Distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#normalizePercentage","title":"Empirical.normalizePercentage","content":"Empirical.normalizePercentage \nnormalizePercentage \n\n Normalizes this PMF so the sum of all probabilities equals 100 percent \n Discrete Percentage Probability Distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#normalizeBandwidth","title":"Empirical.normalizeBandwidth","content":"Empirical.normalizeBandwidth \nnormalizeBandwidth \n\n Normalizes this PMF by the bandwidth n/\u0394x\n Frequency Denisty Distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#normalizePDD","title":"Empirical.normalizePDD","content":"Empirical.normalizePDD \nnormalizePDD \n\n Normalizes this PMF by the bandwidth to area equals 1.  (n/N)/\u0394x\n Probability Denisty Distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#sampleFrom","title":"Empirical.sampleFrom","content":"Empirical.sampleFrom \nsampleFrom \n\n Chooses a random element from this PMF\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#random","title":"Empirical.random","content":"Empirical.random \nrandom \n\n Chooses a random element from this PMF\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#mean","title":"Empirical.mean","content":"Empirical.mean \nmean \n\n Computes the mean of a PMF\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#varAround","title":"Empirical.varAround","content":"Empirical.varAround \nvarAround \n\n Computes the variance of a PMF around mu\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#var","title":"Empirical.var","content":"Empirical.var \nvar \n\n Computes the variance of a PMF\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#log","title":"Empirical.log","content":"Empirical.log \nlog \n\n Log transforms the probabilities\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#exp","title":"Empirical.exp","content":"Empirical.exp \nexp \n\n Exponentiates the probabilities\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-empirical.html#create","title":"Empirical.create","content":"Empirical.create \ncreate \n\n Creates probability mass function    \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html","title":"Frequency","content":"Frequency \n\n Represents a histogram (map from values to integer frequencies).\n \nFrequency.createGeneric \ncreateGeneric \nFrequency.create \ncreate \nFrequency.getZip \ngetZip \nFrequency.sum \nsum \nFrequency.average \naverage \nFrequency.maxLike \nmaxLike \nFrequency.frequencyAt \nfrequencyAt \nFrequency.frequencies \nfrequencies \nFrequency.isSubset \nisSubset"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html#createGeneric","title":"Frequency.createGeneric","content":"Frequency.createGeneric \ncreateGeneric \n\n Given the list [a,b,a,c,b,b], produce a map {a:2, b:3, c:1} which contains the count of each unique item in the list\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html#create","title":"Frequency.create","content":"Frequency.create \ncreate \n\n Creates probability mass function (histogram)    \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html#getZip","title":"Frequency.getZip","content":"Frequency.getZip \ngetZip \n\n Returns tuple of (sorted value sequence, frequence sequence)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html#sum","title":"Frequency.sum","content":"Frequency.sum \nsum \n\n Returns the total of the frequencies in the map\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html#average","title":"Frequency.average","content":"Frequency.average \naverage \n\n Returns the average of the frequencies in the map\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html#maxLike","title":"Frequency.maxLike","content":"Frequency.maxLike \nmaxLike \n\n Gets the largest frequency in the map.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html#frequencyAt","title":"Frequency.frequencyAt","content":"Frequency.frequencyAt \nfrequencyAt \n\n Gets the frequency associated with the value x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html#frequencies","title":"Frequency.frequencies","content":"Frequency.frequencies \nfrequencies \n\n Gets an unsorted sequence of frequencies\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-frequency.html#isSubset","title":"Frequency.isSubset","content":"Frequency.isSubset \nisSubset \n\n Checks whether the values in this histogram A are a subset of the values in the histogram B\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity.html","title":"KernelDensity","content":"KernelDensity \n\n Module to perform Kernel density estimation\n \nKernelDensity.Kernel \nKernel \nKernelDensity.DensityKernel \nDensityKernel \nKernelDensity.estimateWith \nestimateWith \nKernelDensity.estimateWithWeight \nestimateWithWeight \nKernelDensity.estimateWithRange \nestimateWithRange \nKernelDensity.estimate \nestimate"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity.html#estimateWith","title":"KernelDensity.estimateWith","content":"KernelDensity.estimateWith \nestimateWith \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity.html#estimateWithWeight","title":"KernelDensity.estimateWithWeight","content":"KernelDensity.estimateWithWeight \nestimateWithWeight \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity.html#estimateWithRange","title":"KernelDensity.estimateWithRange","content":"KernelDensity.estimateWithRange \nestimateWithRange \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity.html#estimate","title":"KernelDensity.estimate","content":"KernelDensity.estimate \nestimate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity-kernel.html","title":"Kernel","content":"Kernel \n \nKernel.gaussian \ngaussian \nKernel.rectangular \nrectangular \nKernel.triangular \ntriangular \nKernel.epanechnikov \nepanechnikov \nKernel.biweight \nbiweight \nKernel.cosine \ncosine \nKernel.optcosine \noptcosine"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity-kernel.html#gaussian","title":"Kernel.gaussian","content":"Kernel.gaussian \ngaussian \n\n Gausian kernel\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity-kernel.html#rectangular","title":"Kernel.rectangular","content":"Kernel.rectangular \nrectangular \n\n Rectangular kernel\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity-kernel.html#triangular","title":"Kernel.triangular","content":"Kernel.triangular \ntriangular \n\n Triangular kernel\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity-kernel.html#epanechnikov","title":"Kernel.epanechnikov","content":"Kernel.epanechnikov \nepanechnikov \n\n Epanechnikov kernel\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity-kernel.html#biweight","title":"Kernel.biweight","content":"Kernel.biweight \nbiweight \n\n Biweight kernel\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity-kernel.html#cosine","title":"Kernel.cosine","content":"Kernel.cosine \ncosine \n\n Cosine kernel\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity-kernel.html#optcosine","title":"Kernel.optcosine","content":"Kernel.optcosine \noptcosine \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-kerneldensity-densitykernel.html","title":"DensityKernel","content":"DensityKernel \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistribution-2.html","title":"ContinuousDistribution\u003C\u0027a, \u0027b\u003E","content":"ContinuousDistribution\u003C\u0027a, \u0027b\u003E \n\n Interface for continuous probability distributions.\n \nContinuousDistribution\u003C\u0027a, \u0027b\u003E.PDF \nPDF \nContinuousDistribution\u003C\u0027a, \u0027b\u003E.Sample \nSample \nContinuousDistribution\u003C\u0027a, \u0027b\u003E.Mode \nMode"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistribution-2.html#PDF","title":"ContinuousDistribution\u003C\u0027a, \u0027b\u003E.PDF","content":"ContinuousDistribution\u003C\u0027a, \u0027b\u003E.PDF \nPDF \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistribution-2.html#Sample","title":"ContinuousDistribution\u003C\u0027a, \u0027b\u003E.Sample","content":"ContinuousDistribution\u003C\u0027a, \u0027b\u003E.Sample \nSample \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuousdistribution-2.html#Mode","title":"ContinuousDistribution\u003C\u0027a, \u0027b\u003E.Mode","content":"ContinuousDistribution\u003C\u0027a, \u0027b\u003E.Mode \nMode \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discretedistribution-2.html","title":"DiscreteDistribution\u003C\u0027a, \u0027b\u003E","content":"DiscreteDistribution\u003C\u0027a, \u0027b\u003E \n\n Interface for discrete probability distributions.\n \nDiscreteDistribution\u003C\u0027a, \u0027b\u003E.PMF \nPMF \nDiscreteDistribution\u003C\u0027a, \u0027b\u003E.Sample \nSample \nDiscreteDistribution\u003C\u0027a, \u0027b\u003E.Mode \nMode"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discretedistribution-2.html#PMF","title":"DiscreteDistribution\u003C\u0027a, \u0027b\u003E.PMF","content":"DiscreteDistribution\u003C\u0027a, \u0027b\u003E.PMF \nPMF \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discretedistribution-2.html#Sample","title":"DiscreteDistribution\u003C\u0027a, \u0027b\u003E.Sample","content":"DiscreteDistribution\u003C\u0027a, \u0027b\u003E.Sample \nSample \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discretedistribution-2.html#Mode","title":"DiscreteDistribution\u003C\u0027a, \u0027b\u003E.Mode","content":"DiscreteDistribution\u003C\u0027a, \u0027b\u003E.Mode \nMode \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distribution-1.html","title":"Distribution\u003C\u0027a\u003E","content":"Distribution\u003C\u0027a\u003E \n\n Interface which every probability distribution must implement.\n \nDistribution\u003C\u0027a\u003E.CDF \nCDF \nDistribution\u003C\u0027a\u003E.ToString \nToString \nDistribution\u003C\u0027a\u003E.StandardDeviation \nStandardDeviation \nDistribution\u003C\u0027a\u003E.Variance \nVariance \nDistribution\u003C\u0027a\u003E.Mean \nMean"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distribution-1.html#CDF","title":"Distribution\u003C\u0027a\u003E.CDF","content":"Distribution\u003C\u0027a\u003E.CDF \nCDF \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distribution-1.html#ToString","title":"Distribution\u003C\u0027a\u003E.ToString","content":"Distribution\u003C\u0027a\u003E.ToString \nToString \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distribution-1.html#StandardDeviation","title":"Distribution\u003C\u0027a\u003E.StandardDeviation","content":"Distribution\u003C\u0027a\u003E.StandardDeviation \nStandardDeviation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distribution-1.html#Variance","title":"Distribution\u003C\u0027a\u003E.Variance","content":"Distribution\u003C\u0027a\u003E.Variance \nVariance \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-distribution-1.html#Mean","title":"Distribution\u003C\u0027a\u003E.Mean","content":"Distribution\u003C\u0027a\u003E.Mean \nMean \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html","title":"Beta","content":"Beta \n\n Beta distribution\n \nBeta.CDF \nCDF \nBeta.CheckParam \nCheckParam \nBeta.Estimate \nEstimate \nBeta.Fit \nFit \nBeta.Init \nInit \nBeta.Mean \nMean \nBeta.Mode \nMode \nBeta.PDF \nPDF \nBeta.Sample \nSample \nBeta.StandardDeviation \nStandardDeviation \nBeta.Support \nSupport \nBeta.ToString \nToString \nBeta.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#CDF","title":"Beta.CDF","content":"Beta.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#CheckParam","title":"Beta.CheckParam","content":"Beta.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#Estimate","title":"Beta.Estimate","content":"Beta.Estimate \nEstimate \n\n   Estimates a new Beta distribution from a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#Fit","title":"Beta.Fit","content":"Beta.Fit \nFit \n\n   Fits the underlying distribution to a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#Init","title":"Beta.Init","content":"Beta.Init \nInit \n\n Initializes a Beta distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#Mean","title":"Beta.Mean","content":"Beta.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#Mode","title":"Beta.Mode","content":"Beta.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#PDF","title":"Beta.PDF","content":"Beta.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#Sample","title":"Beta.Sample","content":"Beta.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#StandardDeviation","title":"Beta.StandardDeviation","content":"Beta.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#Support","title":"Beta.Support","content":"Beta.Support \nSupport \n\n Returns the support of the exponential distribution: [0.0, 1.0).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#ToString","title":"Beta.ToString","content":"Beta.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-beta.html#Variance","title":"Beta.Variance","content":"Beta.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html","title":"Chi","content":"Chi \n\n Chi distribution.\n \nChi.CDF \nCDF \nChi.CheckParam \nCheckParam \nChi.Init \nInit \nChi.Mean \nMean \nChi.Mode \nMode \nChi.PDF \nPDF \nChi.Sample \nSample \nChi.StandardDeviation \nStandardDeviation \nChi.Support \nSupport \nChi.ToString \nToString \nChi.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#CDF","title":"Chi.CDF","content":"Chi.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#CheckParam","title":"Chi.CheckParam","content":"Chi.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#Init","title":"Chi.Init","content":"Chi.Init \nInit \n\n Initializes a Chi distribution \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#Mean","title":"Chi.Mean","content":"Chi.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#Mode","title":"Chi.Mode","content":"Chi.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#PDF","title":"Chi.PDF","content":"Chi.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#Sample","title":"Chi.Sample","content":"Chi.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#StandardDeviation","title":"Chi.StandardDeviation","content":"Chi.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#Support","title":"Chi.Support","content":"Chi.Support \nSupport \n\n Returns the support of the exponential distribution: [0, Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#ToString","title":"Chi.ToString","content":"Chi.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chi.html#Variance","title":"Chi.Variance","content":"Chi.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html","title":"ChiSquared","content":"ChiSquared \n\n ChiSquared distribution.\n \nChiSquared.CDF \nCDF \nChiSquared.CheckParam \nCheckParam \nChiSquared.Init \nInit \nChiSquared.Mean \nMean \nChiSquared.Mode \nMode \nChiSquared.PDF \nPDF \nChiSquared.Sample \nSample \nChiSquared.StandardDeviation \nStandardDeviation \nChiSquared.Support \nSupport \nChiSquared.ToString \nToString \nChiSquared.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#CDF","title":"ChiSquared.CDF","content":"ChiSquared.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#CheckParam","title":"ChiSquared.CheckParam","content":"ChiSquared.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#Init","title":"ChiSquared.Init","content":"ChiSquared.Init \nInit \n\n Initializes a ChiSquared distribution \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#Mean","title":"ChiSquared.Mean","content":"ChiSquared.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#Mode","title":"ChiSquared.Mode","content":"ChiSquared.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#PDF","title":"ChiSquared.PDF","content":"ChiSquared.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#Sample","title":"ChiSquared.Sample","content":"ChiSquared.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#StandardDeviation","title":"ChiSquared.StandardDeviation","content":"ChiSquared.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#Support","title":"ChiSquared.Support","content":"ChiSquared.Support \nSupport \n\n Returns the support of the exponential distribution: [0, Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#ToString","title":"ChiSquared.ToString","content":"ChiSquared.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-chisquared.html#Variance","title":"ChiSquared.Variance","content":"ChiSquared.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html","title":"Exponential","content":"Exponential \n\n Exponential distribution.\n \nExponential.CDF \nCDF \nExponential.CheckParam \nCheckParam \nExponential.Estimate \nEstimate \nExponential.Fit \nFit \nExponential.Init \nInit \nExponential.Mean \nMean \nExponential.Mode \nMode \nExponential.PDF \nPDF \nExponential.Sample \nSample \nExponential.StandardDeviation \nStandardDeviation \nExponential.Support \nSupport \nExponential.ToString \nToString \nExponential.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#CDF","title":"Exponential.CDF","content":"Exponential.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#CheckParam","title":"Exponential.CheckParam","content":"Exponential.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#Estimate","title":"Exponential.Estimate","content":"Exponential.Estimate \nEstimate \n\n   Estimates a new Exponential distribution from a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#Fit","title":"Exponential.Fit","content":"Exponential.Fit \nFit \n\n   Fits the underlying distribution to a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#Init","title":"Exponential.Init","content":"Exponential.Init \nInit \n\n Initializes a Exponential distribution    \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#Mean","title":"Exponential.Mean","content":"Exponential.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#Mode","title":"Exponential.Mode","content":"Exponential.Mode \nMode \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#PDF","title":"Exponential.PDF","content":"Exponential.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#Sample","title":"Exponential.Sample","content":"Exponential.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#StandardDeviation","title":"Exponential.StandardDeviation","content":"Exponential.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#Support","title":"Exponential.Support","content":"Exponential.Support \nSupport \n\n Returns the support of the exponential distribution: [0, Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#ToString","title":"Exponential.ToString","content":"Exponential.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-exponential.html#Variance","title":"Exponential.Variance","content":"Exponential.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html","title":"F","content":"F \n\n F-distribution\n \nF.CDF \nCDF \nF.CheckParam \nCheckParam \nF.Init \nInit \nF.Mean \nMean \nF.Mode \nMode \nF.PDF \nPDF \nF.Sample \nSample \nF.StandardDeviation \nStandardDeviation \nF.Support \nSupport \nF.ToString \nToString \nF.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#CDF","title":"F.CDF","content":"F.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#CheckParam","title":"F.CheckParam","content":"F.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#Init","title":"F.Init","content":"F.Init \nInit \n\n Initializes a F-distribution         \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#Mean","title":"F.Mean","content":"F.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#Mode","title":"F.Mode","content":"F.Mode \nMode \n\n Computes the Mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#PDF","title":"F.PDF","content":"F.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#Sample","title":"F.Sample","content":"F.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#StandardDeviation","title":"F.StandardDeviation","content":"F.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#Support","title":"F.Support","content":"F.Support \nSupport \n\n Returns the support of the exponential distribution: (0., Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#ToString","title":"F.ToString","content":"F.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-f.html#Variance","title":"F.Variance","content":"F.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html","title":"Gamma","content":"Gamma \n\n Gamma distribution\n Sampling implementation based on:\n     \u0022A Simple Method for Generating Gamma Variables\u0022 - Marsaglia \u0026 Tsang\n     ACM Transactions on Mathematical Software, Vol. 26, No. 3, September 2000, Pages 363-372.\n alpha = shape (k) \n beta  = scale || 1 / rate (\u03B8)\n \nGamma.CDF \nCDF \nGamma.CheckParam \nCheckParam \nGamma.Estimate \nEstimate \nGamma.Fit \nFit \nGamma.FromMean \nFromMean \nGamma.FromRate \nFromRate \nGamma.Init \nInit \nGamma.Mean \nMean \nGamma.Mode \nMode \nGamma.PDF \nPDF \nGamma.PDFLn \nPDFLn \nGamma.Sample \nSample \nGamma.StandardDeviation \nStandardDeviation \nGamma.Support \nSupport \nGamma.ToString \nToString \nGamma.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#CDF","title":"Gamma.CDF","content":"Gamma.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#CheckParam","title":"Gamma.CheckParam","content":"Gamma.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#Estimate","title":"Gamma.Estimate","content":"Gamma.Estimate \nEstimate \n\n   Estimates a new Gamma distribution from a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#Fit","title":"Gamma.Fit","content":"Gamma.Fit \nFit \n\n Fits the underlying distribution to a given set of observations.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#FromMean","title":"Gamma.FromMean","content":"Gamma.FromMean \nFromMean \n\n Initializes a Gamma distribution\n alpha = shape (k) \n beta  = scale || 1 / rate (\u03B8)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#FromRate","title":"Gamma.FromRate","content":"Gamma.FromRate \nFromRate \n\n Initializes a Gamma distribution\n alpha = shape (k) \n beta  = scale || 1 / rate (\u03B8)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#Init","title":"Gamma.Init","content":"Gamma.Init \nInit \n\n Initializes a Gamma distribution\n alpha = shape (k) \n beta  = scale || 1 / rate (\u03B8)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#Mean","title":"Gamma.Mean","content":"Gamma.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#Mode","title":"Gamma.Mode","content":"Gamma.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#PDF","title":"Gamma.PDF","content":"Gamma.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#PDFLn","title":"Gamma.PDFLn","content":"Gamma.PDFLn \nPDFLn \n\n Computes the log probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#Sample","title":"Gamma.Sample","content":"Gamma.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#StandardDeviation","title":"Gamma.StandardDeviation","content":"Gamma.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#Support","title":"Gamma.Support","content":"Gamma.Support \nSupport \n\n Returns the support of the exponential distribution: [0, Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#ToString","title":"Gamma.ToString","content":"Gamma.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-gamma.html#Variance","title":"Gamma.Variance","content":"Gamma.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html","title":"LogNormal","content":"LogNormal \n\n Log-Normal distribution.\n \nLogNormal.CDF \nCDF \nLogNormal.CheckParam \nCheckParam \nLogNormal.Estimate \nEstimate \nLogNormal.Init \nInit \nLogNormal.Mean \nMean \nLogNormal.Mode \nMode \nLogNormal.PDF \nPDF \nLogNormal.Sample \nSample \nLogNormal.StandardDeviation \nStandardDeviation \nLogNormal.Support \nSupport \nLogNormal.ToString \nToString \nLogNormal.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#CDF","title":"LogNormal.CDF","content":"LogNormal.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#CheckParam","title":"LogNormal.CheckParam","content":"LogNormal.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#Estimate","title":"LogNormal.Estimate","content":"LogNormal.Estimate \nEstimate \n\n Estimates the log-normal distribution parameters from sample data with maximum-likelihood.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#Init","title":"LogNormal.Init","content":"LogNormal.Init \nInit \n\n Initializes a Normal distribution \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#Mean","title":"LogNormal.Mean","content":"LogNormal.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#Mode","title":"LogNormal.Mode","content":"LogNormal.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#PDF","title":"LogNormal.PDF","content":"LogNormal.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#Sample","title":"LogNormal.Sample","content":"LogNormal.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#StandardDeviation","title":"LogNormal.StandardDeviation","content":"LogNormal.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#Support","title":"LogNormal.Support","content":"LogNormal.Support \nSupport \n\n Returns the support of the exponential distribution: [0, Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#ToString","title":"LogNormal.ToString","content":"LogNormal.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-lognormal.html#Variance","title":"LogNormal.Variance","content":"LogNormal.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-multivariatenormal.html","title":"MultivariateNormal","content":"MultivariateNormal \n\n multivariate normal distribution.\n \nMultivariateNormal.CDF \nCDF \nMultivariateNormal.CheckParam \nCheckParam \nMultivariateNormal.Init \nInit \nMultivariateNormal.Mean \nMean \nMultivariateNormal.PDF \nPDF \nMultivariateNormal.Sample \nSample \nMultivariateNormal.StandardDeviation \nStandardDeviation \nMultivariateNormal.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-multivariatenormal.html#CDF","title":"MultivariateNormal.CDF","content":"MultivariateNormal.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-multivariatenormal.html#CheckParam","title":"MultivariateNormal.CheckParam","content":"MultivariateNormal.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-multivariatenormal.html#Init","title":"MultivariateNormal.Init","content":"MultivariateNormal.Init \nInit \n\n Initializes a multivariate normal distribution with mean mu and covariance matrix sigma       \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-multivariatenormal.html#Mean","title":"MultivariateNormal.Mean","content":"MultivariateNormal.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-multivariatenormal.html#PDF","title":"MultivariateNormal.PDF","content":"MultivariateNormal.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-multivariatenormal.html#Sample","title":"MultivariateNormal.Sample","content":"MultivariateNormal.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-multivariatenormal.html#StandardDeviation","title":"MultivariateNormal.StandardDeviation","content":"MultivariateNormal.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-multivariatenormal.html#Variance","title":"MultivariateNormal.Variance","content":"MultivariateNormal.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html","title":"Normal","content":"Normal \n\n Normal distribution.\n \nNormal.CDF \nCDF \nNormal.CheckParam \nCheckParam \nNormal.Estimate \nEstimate \nNormal.Init \nInit \nNormal.Mean \nMean \nNormal.Mode \nMode \nNormal.PDF \nPDF \nNormal.Sample \nSample \nNormal.StandardDeviation \nStandardDeviation \nNormal.Support \nSupport \nNormal.ToString \nToString \nNormal.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#CDF","title":"Normal.CDF","content":"Normal.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#CheckParam","title":"Normal.CheckParam","content":"Normal.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#Estimate","title":"Normal.Estimate","content":"Normal.Estimate \nEstimate \n\n Estimates the Normal distribution parameters from sample data with maximum-likelihood.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#Init","title":"Normal.Init","content":"Normal.Init \nInit \n\n Initializes a Normal distribution        \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#Mean","title":"Normal.Mean","content":"Normal.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#Mode","title":"Normal.Mode","content":"Normal.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#PDF","title":"Normal.PDF","content":"Normal.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#Sample","title":"Normal.Sample","content":"Normal.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#StandardDeviation","title":"Normal.StandardDeviation","content":"Normal.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#Support","title":"Normal.Support","content":"Normal.Support \nSupport \n\n Returns the support of the exponential distribution: [0, Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#ToString","title":"Normal.ToString","content":"Normal.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-normal.html#Variance","title":"Normal.Variance","content":"Normal.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html","title":"StudentT","content":"StudentT \n\n Student\u0027s T-distribution\n \nStudentT.CDF \nCDF \nStudentT.CheckParam \nCheckParam \nStudentT.Init \nInit \nStudentT.Mean \nMean \nStudentT.Mode \nMode \nStudentT.PDF \nPDF \nStudentT.Sample \nSample \nStudentT.StandardDeviation \nStandardDeviation \nStudentT.Support \nSupport \nStudentT.ToString \nToString \nStudentT.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#CDF","title":"StudentT.CDF","content":"StudentT.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#CheckParam","title":"StudentT.CheckParam","content":"StudentT.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#Init","title":"StudentT.Init","content":"StudentT.Init \nInit \n\n Initializes a Student\u0027s T-distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#Mean","title":"StudentT.Mean","content":"StudentT.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#Mode","title":"StudentT.Mode","content":"StudentT.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#PDF","title":"StudentT.PDF","content":"StudentT.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#Sample","title":"StudentT.Sample","content":"StudentT.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#StandardDeviation","title":"StudentT.StandardDeviation","content":"StudentT.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#Support","title":"StudentT.Support","content":"StudentT.Support \nSupport \n\n Returns the support of the exponential distribution: (Negative Infinity, Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#ToString","title":"StudentT.ToString","content":"StudentT.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentt.html#Variance","title":"StudentT.Variance","content":"StudentT.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html","title":"StudentizedRange","content":"StudentizedRange \n\n Studentized range (q) distribution. Used in Tukey\u0027s HSD post hoc test.\n method from: QUANTILES FROM THE MAXIMUM STUDENTIZED RANGE DISTRIBUTION, Ferreira, Rev. Mat. Estat., v.25, n.1, p.117-135, 2007\n table from: Tables of range and studentized range, Harter, 1960 and Lawal B, Applied Statistical Methods in Agriculture, Health and Life Sciences, DOI 10.1007/978-3-319-05555-8, 2014\n \nStudentizedRange.CDF \nCDF \nStudentizedRange.CheckParam \nCheckParam \nStudentizedRange.Init \nInit \nStudentizedRange.Sample \nSample \nStudentizedRange.StandardDeviation \nStandardDeviation \nStudentizedRange.PDF \nPDF \nStudentizedRange.Mode \nMode \nStudentizedRange.Variance \nVariance \nStudentizedRange.Mean \nMean"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html#CDF","title":"StudentizedRange.CDF","content":"StudentizedRange.CDF \nCDF \n\n Computes the cumulative density function.\n Accuracy defines the number of steps within the integration (Recommended: 1k-10k, default: 2k). pValue accuracy is minimum 3 digits for v\u003E3 at pValue=0.05.\n q:qValue r:number of treatments v:df (n-r) c:1.\n Integration can be performed in parallel using PSeq\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html#CheckParam","title":"StudentizedRange.CheckParam","content":"StudentizedRange.CheckParam \nCheckParam \n\n Studentized range distribution helper functions.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html#Init","title":"StudentizedRange.Init","content":"StudentizedRange.Init \nInit \n\n Initializes a studentized range distribution.     \n Accuracy defines the number of steps within the CDF integration (Recommended: 1k-10k, default: 2k). pValue accuracy is minimum 3 digits for v\u003E3.\n q:qValue r:number of treatments v:df (n-r) c:1.   \n Integration can be performed in parallel using PSeq\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html#Sample","title":"StudentizedRange.Sample","content":"StudentizedRange.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html#StandardDeviation","title":"StudentizedRange.StandardDeviation","content":"StudentizedRange.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html#PDF","title":"StudentizedRange.PDF","content":"StudentizedRange.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html#Mode","title":"StudentizedRange.Mode","content":"StudentizedRange.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html#Variance","title":"StudentizedRange.Variance","content":"StudentizedRange.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-studentizedrange.html#Mean","title":"StudentizedRange.Mean","content":"StudentizedRange.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html","title":"Uniform","content":"Uniform \n\n Uniform distribution.\n \nUniform.CDF \nCDF \nUniform.CheckParam \nCheckParam \nUniform.Estimate \nEstimate \nUniform.Fit \nFit \nUniform.Init \nInit \nUniform.Mean \nMean \nUniform.Mode \nMode \nUniform.PDF \nPDF \nUniform.Sample \nSample \nUniform.StandardDeviation \nStandardDeviation \nUniform.Support \nSupport \nUniform.ToString \nToString \nUniform.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#CDF","title":"Uniform.CDF","content":"Uniform.CDF \nCDF \n\n Computes the cumulative distribution function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#CheckParam","title":"Uniform.CheckParam","content":"Uniform.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#Estimate","title":"Uniform.Estimate","content":"Uniform.Estimate \nEstimate \n\n   Estimates a new Uniform distribution from a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#Fit","title":"Uniform.Fit","content":"Uniform.Fit \nFit \n\n   Fits the underlying distribution to a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#Init","title":"Uniform.Init","content":"Uniform.Init \nInit \n\n Initializes a uniform distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#Mean","title":"Uniform.Mean","content":"Uniform.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#Mode","title":"Uniform.Mode","content":"Uniform.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#PDF","title":"Uniform.PDF","content":"Uniform.PDF \nPDF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#Sample","title":"Uniform.Sample","content":"Uniform.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#StandardDeviation","title":"Uniform.StandardDeviation","content":"Uniform.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#Support","title":"Uniform.Support","content":"Uniform.Support \nSupport \n\n Returns the support of the exponential distribution: [0, Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#ToString","title":"Uniform.ToString","content":"Uniform.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-continuous-uniform.html#Variance","title":"Uniform.Variance","content":"Uniform.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html","title":"Bernoulli","content":"Bernoulli \n\n Bernoulli distribution.\n \nBernoulli.CDF \nCDF \nBernoulli.CheckParam \nCheckParam \nBernoulli.Estimate \nEstimate \nBernoulli.Fit \nFit \nBernoulli.Init \nInit \nBernoulli.Mean \nMean \nBernoulli.Mode \nMode \nBernoulli.PMF \nPMF \nBernoulli.Sample \nSample \nBernoulli.StandardDeviation \nStandardDeviation \nBernoulli.Support \nSupport \nBernoulli.ToString \nToString \nBernoulli.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#CDF","title":"Bernoulli.CDF","content":"Bernoulli.CDF \nCDF \n\n Computes the cumulative distribution function. P(X\u003E=k)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#CheckParam","title":"Bernoulli.CheckParam","content":"Bernoulli.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#Estimate","title":"Bernoulli.Estimate","content":"Bernoulli.Estimate \nEstimate \n\n   Estimates a new Bernoulli distribution from a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#Fit","title":"Bernoulli.Fit","content":"Bernoulli.Fit \nFit \n\n   Fits the underlying distribution to a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#Init","title":"Bernoulli.Init","content":"Bernoulli.Init \nInit \n\n Initializes a uniform distribution \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#Mean","title":"Bernoulli.Mean","content":"Bernoulli.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#Mode","title":"Bernoulli.Mode","content":"Bernoulli.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#PMF","title":"Bernoulli.PMF","content":"Bernoulli.PMF \nPMF \n\n Computes the probability density function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#Sample","title":"Bernoulli.Sample","content":"Bernoulli.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#StandardDeviation","title":"Bernoulli.StandardDeviation","content":"Bernoulli.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#Support","title":"Bernoulli.Support","content":"Bernoulli.Support \nSupport \n\n Returns the support of the bernoulli distribution: {0, 1}.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#ToString","title":"Bernoulli.ToString","content":"Bernoulli.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-bernoulli.html#Variance","title":"Bernoulli.Variance","content":"Bernoulli.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html","title":"Binomial","content":"Binomial \n\nBinomial distribution\n \nBinomial.CDF \nCDF \nBinomial.CheckParam \nCheckParam \nBinomial.Estimate \nEstimate \nBinomial.Fit \nFit \nBinomial.Init \nInit \nBinomial.Mean \nMean \nBinomial.Mode \nMode \nBinomial.PMF \nPMF \nBinomial.Sample \nSample \nBinomial.StandardDeviation \nStandardDeviation \nBinomial.Support \nSupport \nBinomial.ToString \nToString \nBinomial.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#CDF","title":"Binomial.CDF","content":"Binomial.CDF \nCDF \n\n Computes the cumulative distribution function at x, i.e. P(X \u003C= x).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#CheckParam","title":"Binomial.CheckParam","content":"Binomial.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#Estimate","title":"Binomial.Estimate","content":"Binomial.Estimate \nEstimate \n\n   Estimates a new Binomial distribution from a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#Fit","title":"Binomial.Fit","content":"Binomial.Fit \nFit \n\n   Fits the underlying distribution to a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#Init","title":"Binomial.Init","content":"Binomial.Init \nInit \n\n Initializes a Binomial distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#Mean","title":"Binomial.Mean","content":"Binomial.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#Mode","title":"Binomial.Mode","content":"Binomial.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#PMF","title":"Binomial.PMF","content":"Binomial.PMF \nPMF \n\n Computes the probability density function at k, i.e. P(K = k)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#Sample","title":"Binomial.Sample","content":"Binomial.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#StandardDeviation","title":"Binomial.StandardDeviation","content":"Binomial.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#Support","title":"Binomial.Support","content":"Binomial.Support \nSupport \n\n Returns the support of the Binomial distribution: (0., n).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#ToString","title":"Binomial.ToString","content":"Binomial.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-binomial.html#Variance","title":"Binomial.Variance","content":"Binomial.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html","title":"Hypergeometric","content":"Hypergeometric \n\n Hypergeometric distribution\n \nHypergeometric.CDF \nCDF \nHypergeometric.CheckParam \nCheckParam \nHypergeometric.CheckParam_k \nCheckParam_k \nHypergeometric.Init \nInit \nHypergeometric.Mean \nMean \nHypergeometric.Mode \nMode \nHypergeometric.PMF \nPMF \nHypergeometric.Sample \nSample \nHypergeometric.StandardDeviation \nStandardDeviation \nHypergeometric.Support \nSupport \nHypergeometric.ToString \nToString \nHypergeometric.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#CDF","title":"Hypergeometric.CDF","content":"Hypergeometric.CDF \nCDF \n\n Computes the cumulative distribution function at x, i.e. P(X \u003C= x).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#CheckParam","title":"Hypergeometric.CheckParam","content":"Hypergeometric.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#CheckParam_k","title":"Hypergeometric.CheckParam_k","content":"Hypergeometric.CheckParam_k \nCheckParam_k \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#Init","title":"Hypergeometric.Init","content":"Hypergeometric.Init \nInit \n Initializes a hypergeometric distribution.\n \n The hypergeometric distribution is a discrete probability distribution\n that describes the probability of \u0060k\u0060 successes (random draws for which the object\n drawn has a specified feature) in \u0060n\u0060 draws, without replacement, from a finite\n population of size \u0060N\u0060 that contains exactly \u0060K\u0060 objects with that feature,\n wherein each draw is either a success (\u00601.0\u0060) or a failure (\u00600.0\u0060)."},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#Mean","title":"Hypergeometric.Mean","content":"Hypergeometric.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#Mode","title":"Hypergeometric.Mode","content":"Hypergeometric.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#PMF","title":"Hypergeometric.PMF","content":"Hypergeometric.PMF \nPMF \n\n Computes the probability mass function at k for P(X = k).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#Sample","title":"Hypergeometric.Sample","content":"Hypergeometric.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()) and returns the number of success states \u0060k\u0060.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#StandardDeviation","title":"Hypergeometric.StandardDeviation","content":"Hypergeometric.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#Support","title":"Hypergeometric.Support","content":"Hypergeometric.Support \nSupport \n\n Returns the support of the hypergeometric distribution: (0., Positive Infinity).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#ToString","title":"Hypergeometric.ToString","content":"Hypergeometric.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-hypergeometric.html#Variance","title":"Hypergeometric.Variance","content":"Hypergeometric.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html","title":"Poisson","content":"Poisson \n\nPoisson distribution\n \nPoisson.CDF \nCDF \nPoisson.CheckParam \nCheckParam \nPoisson.Entropy \nEntropy \nPoisson.Estimate \nEstimate \nPoisson.Fit \nFit \nPoisson.Init \nInit \nPoisson.Mean \nMean \nPoisson.Mode \nMode \nPoisson.PMF \nPMF \nPoisson.Sample \nSample \nPoisson.StandardDeviation \nStandardDeviation \nPoisson.Support \nSupport \nPoisson.ToString \nToString \nPoisson.Variance \nVariance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#CDF","title":"Poisson.CDF","content":"Poisson.CDF \nCDF \n\n Computes the cumulative distribution function at x, i.e. P(X \u003C= x).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#CheckParam","title":"Poisson.CheckParam","content":"Poisson.CheckParam \nCheckParam \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#Entropy","title":"Poisson.Entropy","content":"Poisson.Entropy \nEntropy \n\n   Computes the entropy for this distribution.\n  \n     \n   It\u0027s an approximation and better for large lambda.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#Estimate","title":"Poisson.Estimate","content":"Poisson.Estimate \nEstimate \n\n   Estimates a new Poisson distribution from a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#Fit","title":"Poisson.Fit","content":"Poisson.Fit \nFit \n\n   Fits the underlying distribution to a given set of observations.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#Init","title":"Poisson.Init","content":"Poisson.Init \nInit \n\n Initializes a Binomial distribution \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#Mean","title":"Poisson.Mean","content":"Poisson.Mean \nMean \n\n Computes the mean.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#Mode","title":"Poisson.Mode","content":"Poisson.Mode \nMode \n\n Computes the mode.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#PMF","title":"Poisson.PMF","content":"Poisson.PMF \nPMF \n\n Computes the probability density function at k, i.e. P(K = k)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#Sample","title":"Poisson.Sample","content":"Poisson.Sample \nSample \n\n Produces a random sample using the current random number generator (from GetSampleGenerator()).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#StandardDeviation","title":"Poisson.StandardDeviation","content":"Poisson.StandardDeviation \nStandardDeviation \n\n Computes the standard deviation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#Support","title":"Poisson.Support","content":"Poisson.Support \nSupport \n\n Returns the support interval for this distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#ToString","title":"Poisson.ToString","content":"Poisson.ToString \nToString \n\n A string representation of the distribution.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-distributions-discrete-poisson.html#Variance","title":"Poisson.Variance","content":"Poisson.Variance \nVariance \n\n Computes the variance.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation.html","title":"CrossValidation","content":"CrossValidation \n \nCrossValidation.Error \nError \nCrossValidation.CrossValidationResult\u003C\u0027a\u003E \nCrossValidationResult\u003C\u0027a\u003E \nCrossValidation.createCrossValidationResult \ncreateCrossValidationResult \nCrossValidation.kFoldParallel \nkFoldParallel \nCrossValidation.repeatedKFold \nrepeatedKFold \nCrossValidation.kFold \nkFold \nCrossValidation.loocv \nloocv \nCrossValidation.shuffelAndSplit \nshuffelAndSplit"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation.html#createCrossValidationResult","title":"CrossValidation.createCrossValidationResult","content":"CrossValidation.createCrossValidationResult \ncreateCrossValidationResult \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation.html#kFoldParallel","title":"CrossValidation.kFoldParallel","content":"CrossValidation.kFoldParallel \nkFoldParallel \n\n Computes a k fold cross-validation (in parallel)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation.html#repeatedKFold","title":"CrossValidation.repeatedKFold","content":"CrossValidation.repeatedKFold \nrepeatedKFold \n\n Computes a repeated k fold cross-validation,\n k: training set size (and number of iterations),\n iterations: number of random subset creation,\n xData: rowwise x-coordinate matrix,\n yData: yData vector\n fit: x and y data lead to function that maps a xData row vector to a y-coordinate,\n error: defines the error of the fitted y-coordinate and the actual y-coordinate,\n getStDev: function that calculates the standard deviation from a seq\u003C^T\u003E. (Seq.stDev)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation.html#kFold","title":"CrossValidation.kFold","content":"CrossValidation.kFold \nkFold \n\n Computes a k fold cross-validation,\n k: training set size (and number of iterations),\n xData: rowwise x-coordinate matrix,\n yData: yData vector\n fit: x and y data lead to function that maps a rowwise matrix of xCoordinates to a y-coordinate,\n error: defines the error of the fitted y-coordinate and the actual y-coordinate\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation.html#loocv","title":"CrossValidation.loocv","content":"CrossValidation.loocv \nloocv \n\n Computes a leave one out cross-validation\n xData: rowwise x-coordinate matrix,\n yData: yData vector\n fit: x and y data lead to function that maps an xData row vector to a y-coordinate,\n error: defines the error of the fitted y-coordinate and the actual y-coordinate\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation.html#shuffelAndSplit","title":"CrossValidation.shuffelAndSplit","content":"CrossValidation.shuffelAndSplit \nshuffelAndSplit \n\n Computes a repeated shuffel-and-split cross validation\n p: percentage of training set size from original size,\n iterations: number of random subset creation,\n xData: rowwise x-coordinate matrix,\n yData: yData vector\n fit: x and y data lead to function that maps a xData row vector to a y-coordinate,\n error: defines the error of the fitted y-coordinate and the actual y-coordinate,\n getStDev: function that calculates the standard deviation from a seq\u003C^T\u003E. (Seq.stDev)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation-error.html","title":"Error","content":"Error \n \nError.ssr \nssr \nError.rmse \nrmse"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation-error.html#ssr","title":"Error.ssr","content":"Error.ssr \nssr \n\n Computes sum of squared residuals (SSR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation-error.html#rmse","title":"Error.rmse","content":"Error.rmse \nrmse \n\n Computes root mean square error (RMSE)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation-crossvalidationresult-1.html","title":"CrossValidationResult\u003C\u0027a\u003E","content":"CrossValidationResult\u003C\u0027a\u003E \n \nCrossValidationResult\u003C\u0027a\u003E.Error \nError \nCrossValidationResult\u003C\u0027a\u003E.ErrorStDev \nErrorStDev"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation-crossvalidationresult-1.html#Error","title":"CrossValidationResult\u003C\u0027a\u003E.Error","content":"CrossValidationResult\u003C\u0027a\u003E.Error \nError \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-crossvalidation-crossvalidationresult-1.html#ErrorStDev","title":"CrossValidationResult\u003C\u0027a\u003E.ErrorStDev","content":"CrossValidationResult\u003C\u0027a\u003E.ErrorStDev \nErrorStDev \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html","title":"GoodnessOfFit","content":"GoodnessOfFit \n \nGoodnessOfFit.OrdinaryLeastSquares \nOrdinaryLeastSquares \nGoodnessOfFit.SumOfSquares \nSumOfSquares \nGoodnessOfFit.createSumOfSquares \ncreateSumOfSquares \nGoodnessOfFit.calculateSumOfSquares \ncalculateSumOfSquares \nGoodnessOfFit.stDevY \nstDevY \nGoodnessOfFit.standardErrorEstimate \nstandardErrorEstimate \nGoodnessOfFit.stDevSlope \nstDevSlope \nGoodnessOfFit.standardErrorSlope \nstandardErrorSlope \nGoodnessOfFit.stDevIntercept \nstDevIntercept \nGoodnessOfFit.standardErrorIntercept \nstandardErrorIntercept \nGoodnessOfFit.ttestSlope \nttestSlope \nGoodnessOfFit.ttestIntercept \nttestIntercept \nGoodnessOfFit.calculateDetermination \ncalculateDetermination \nGoodnessOfFit.calculateDeterminationFromValue \ncalculateDeterminationFromValue \nGoodnessOfFit.calculateDeterminationAdj \ncalculateDeterminationAdj \nGoodnessOfFit.calcAIC \ncalcAIC \nGoodnessOfFit.calcBIC \ncalcBIC \nGoodnessOfFit.getResiduals \ngetResiduals \nGoodnessOfFit.calculateSSE \ncalculateSSE \nGoodnessOfFit.calculateSSR \ncalculateSSR \nGoodnessOfFit.calculateSST \ncalculateSST \nGoodnessOfFit.calculateANOVA \ncalculateANOVA"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#createSumOfSquares","title":"GoodnessOfFit.createSumOfSquares","content":"GoodnessOfFit.createSumOfSquares \ncreateSumOfSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calculateSumOfSquares","title":"GoodnessOfFit.calculateSumOfSquares","content":"GoodnessOfFit.calculateSumOfSquares \ncalculateSumOfSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#stDevY","title":"GoodnessOfFit.stDevY","content":"GoodnessOfFit.stDevY \nstDevY \n\n Standard deviation of y(x) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#standardErrorEstimate","title":"GoodnessOfFit.standardErrorEstimate","content":"GoodnessOfFit.standardErrorEstimate \nstandardErrorEstimate \n\n Standard error if the estimate \n Square root of variance s2y,x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#stDevSlope","title":"GoodnessOfFit.stDevSlope","content":"GoodnessOfFit.stDevSlope \nstDevSlope \n\n Standard deviation of slope (beta)    \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#standardErrorSlope","title":"GoodnessOfFit.standardErrorSlope","content":"GoodnessOfFit.standardErrorSlope \nstandardErrorSlope \n\n Standard error of slope (beta)    \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#stDevIntercept","title":"GoodnessOfFit.stDevIntercept","content":"GoodnessOfFit.stDevIntercept \nstDevIntercept \n\n Standard deviation of intercept (alpha)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#standardErrorIntercept","title":"GoodnessOfFit.standardErrorIntercept","content":"GoodnessOfFit.standardErrorIntercept \nstandardErrorIntercept \n\n Standard error of intercept (alpha)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#ttestSlope","title":"GoodnessOfFit.ttestSlope","content":"GoodnessOfFit.ttestSlope \nttestSlope \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#ttestIntercept","title":"GoodnessOfFit.ttestIntercept","content":"GoodnessOfFit.ttestIntercept \nttestIntercept \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calculateDetermination","title":"GoodnessOfFit.calculateDetermination","content":"GoodnessOfFit.calculateDetermination \ncalculateDetermination \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calculateDeterminationFromValue","title":"GoodnessOfFit.calculateDeterminationFromValue","content":"GoodnessOfFit.calculateDeterminationFromValue \ncalculateDeterminationFromValue \n\n Gets the coefficient of determination, as known as the R-Squared (R\u00B2)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calculateDeterminationAdj","title":"GoodnessOfFit.calculateDeterminationAdj","content":"GoodnessOfFit.calculateDeterminationAdj \ncalculateDeterminationAdj \n\n Gets the adjusted coefficient of determination, as known as the R-Squared (R\u00B2adj). It is adjusted by the number of used variables (not including the constant term) (https://ebrary.net/1008/economics/adjusted_coefficient_determination_adjusted)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calcAIC","title":"GoodnessOfFit.calcAIC","content":"GoodnessOfFit.calcAIC \ncalcAIC \n\n Calculates Akaike information criterion (AIC) which is a measure of the relative quality of a regression model for a given set of data    \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calcBIC","title":"GoodnessOfFit.calcBIC","content":"GoodnessOfFit.calcBIC \ncalcBIC \n\n Calculates Bayesian information criterion (BIC) which is a measure of the relative quality of a regression model for a given set of data\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#getResiduals","title":"GoodnessOfFit.getResiduals","content":"GoodnessOfFit.getResiduals \ngetResiduals \n\n Calculates the residuals\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calculateSSE","title":"GoodnessOfFit.calculateSSE","content":"GoodnessOfFit.calculateSSE \ncalculateSSE \n\n Calculates SSE: sum of squares of errors\n also: unexplained sum of squares; residual sum of squares   \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calculateSSR","title":"GoodnessOfFit.calculateSSR","content":"GoodnessOfFit.calculateSSR \ncalculateSSR \n\n Calculates SSR: sum of squares regression.\n also: explained sum of squares\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calculateSST","title":"GoodnessOfFit.calculateSST","content":"GoodnessOfFit.calculateSST \ncalculateSST \n\n Calculates SST: sum of squares total.\n also: total sum of squares\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit.html#calculateANOVA","title":"GoodnessOfFit.calculateANOVA","content":"GoodnessOfFit.calculateANOVA \ncalculateANOVA \n\n explained = total - unexplained\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares.html","title":"OrdinaryLeastSquares","content":"OrdinaryLeastSquares \n \nOrdinaryLeastSquares.Linear \nLinear \nOrdinaryLeastSquares.Polynomial \nPolynomial"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-linear.html","title":"Linear","content":"Linear \n \nLinear.RTO \nRTO \nLinear.Univariable \nUnivariable"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-linear-rto.html","title":"RTO","content":"RTO \n \nRTO.calculateANOVA \ncalculateANOVA"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-linear-rto.html#calculateANOVA","title":"RTO.calculateANOVA","content":"RTO.calculateANOVA \ncalculateANOVA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-linear-univariable.html","title":"Univariable","content":"Univariable \n \nUnivariable.calculateANOVA \ncalculateANOVA \nUnivariable.calculateConfidenceBandError \ncalculateConfidenceBandError \nUnivariable.calculatePredictionBandError \ncalculatePredictionBandError"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-linear-univariable.html#calculateANOVA","title":"Univariable.calculateANOVA","content":"Univariable.calculateANOVA \ncalculateANOVA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-linear-univariable.html#calculateConfidenceBandError","title":"Univariable.calculateConfidenceBandError","content":"Univariable.calculateConfidenceBandError \ncalculateConfidenceBandError \n\nreturns a function, that reports the confidence y_intercept for a given x value\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-linear-univariable.html#calculatePredictionBandError","title":"Univariable.calculatePredictionBandError","content":"Univariable.calculatePredictionBandError \ncalculatePredictionBandError \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-polynomial.html","title":"Polynomial","content":"Polynomial \n \nPolynomial.CrossValidation \nCrossValidation \nPolynomial.calculateANOVA \ncalculateANOVA"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-polynomial.html#calculateANOVA","title":"Polynomial.calculateANOVA","content":"Polynomial.calculateANOVA \ncalculateANOVA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-polynomial-crossvalidation.html","title":"CrossValidation","content":"CrossValidation \n \nCrossValidation.loocv \nloocv \nCrossValidation.kfcv \nkfcv"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-polynomial-crossvalidation.html#loocv","title":"CrossValidation.loocv","content":"CrossValidation.loocv \nloocv \n\ncalculates LeaveOneOutCrossValidation\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-ordinaryleastsquares-polynomial-crossvalidation.html#kfcv","title":"CrossValidation.kfcv","content":"CrossValidation.kfcv \nkfcv \n\nk-fold cross validation\nCalculates the average SSE of given data, the order used to fit the polynomial and the subset you want to leave out (k).\nConsider to choose k that n%k=0 for equally bin sizes.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-sumofsquares.html","title":"SumOfSquares","content":"SumOfSquares \n\n Three sum of squares \n \nSumOfSquares.Regression \nRegression \nSumOfSquares.Error \nError \nSumOfSquares.Total \nTotal \nSumOfSquares.SSxx \nSSxx \nSumOfSquares.SSxy \nSSxy \nSumOfSquares.MeanX \nMeanX \nSumOfSquares.MeanY \nMeanY \nSumOfSquares.Count \nCount"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-sumofsquares.html#Regression","title":"SumOfSquares.Regression","content":"SumOfSquares.Regression \nRegression \n\n Regression sum of squares (SSR: explained); Sum((yFit-yMean)**2.)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-sumofsquares.html#Error","title":"SumOfSquares.Error","content":"SumOfSquares.Error \nError \n\n Error sum of squares (SSE: unexplained); residual sum of squares; Sum((y-yFit)**2.)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-sumofsquares.html#Total","title":"SumOfSquares.Total","content":"SumOfSquares.Total \nTotal \n\n Total sum of squares (SST: total); Sum((y-yMean)**2.)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-sumofsquares.html#SSxx","title":"SumOfSquares.SSxx","content":"SumOfSquares.SSxx \nSSxx \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-sumofsquares.html#SSxy","title":"SumOfSquares.SSxy","content":"SumOfSquares.SSxy \nSSxy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-sumofsquares.html#MeanX","title":"SumOfSquares.MeanX","content":"SumOfSquares.MeanX \nMeanX \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-sumofsquares.html#MeanY","title":"SumOfSquares.MeanY","content":"SumOfSquares.MeanY \nMeanY \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-goodnessoffit-sumofsquares.html#Count","title":"SumOfSquares.Count","content":"SumOfSquares.Count \nCount \n\n Count N\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression.html","title":"LinearRegression","content":"LinearRegression \n \nLinearRegression.OrdinaryLeastSquares \nOrdinaryLeastSquares \nLinearRegression.RobustRegression \nRobustRegression"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares.html","title":"OrdinaryLeastSquares","content":"OrdinaryLeastSquares \n \nOrdinaryLeastSquares.Linear \nLinear \nOrdinaryLeastSquares.Polynomial \nPolynomial"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear.html","title":"Linear","content":"Linear \n\n Simple linear regression y : x -\u003E a \u002B bx\n \nLinear.Multivariable \nMultivariable \nLinear.RTO \nRTO \nLinear.RidgeRegression \nRidgeRegression \nLinear.Univariable \nUnivariable"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-multivariable.html","title":"Multivariable","content":"Multivariable \n \nMultivariable.coefficients \ncoefficients \nMultivariable.coefficientsCholesky \ncoefficientsCholesky \nMultivariable.fit \nfit"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-multivariable.html#coefficients","title":"Multivariable.coefficients","content":"Multivariable.coefficients \ncoefficients \n\n Calculates the coefficients for linear regression\n in the form of [|intercept; slope;|]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-multivariable.html#coefficientsCholesky","title":"Multivariable.coefficientsCholesky","content":"Multivariable.coefficientsCholesky \ncoefficientsCholesky \n\n Calculates the coefficients for linear regression\n in the form of [|intercept; slope;|] using Cholesky Decomposition\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-multivariable.html#fit","title":"Multivariable.fit","content":"Multivariable.fit \nfit \n\n Fit to x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-rto.html","title":"RTO","content":"RTO \n\n Regression through the origin (y : x -\u003E bx)\n \nRTO.coefficientOfVector \ncoefficientOfVector \nRTO.coefficient \ncoefficient \nRTO.fitFunc \nfitFunc \nRTO.fit \nfit"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-rto.html#coefficientOfVector","title":"RTO.coefficientOfVector","content":"RTO.coefficientOfVector \ncoefficientOfVector \n\n Calculates the coefficients for linear regression through the origin \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-rto.html#coefficient","title":"RTO.coefficient","content":"RTO.coefficient \ncoefficient \n\n Calculates the coefficients for linear regression through the origin \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-rto.html#fitFunc","title":"RTO.fitFunc","content":"RTO.fitFunc \nfitFunc \n\n Returns the regression function\n coefficient is beta only\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-rto.html#fit","title":"RTO.fit","content":"RTO.fit \nfit \n\n Fit to x\n coefficient is beta only\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-ridgeregression.html","title":"RidgeRegression","content":"RidgeRegression \n \nRidgeRegression.coefficients \ncoefficients \nRidgeRegression.fit \nfit"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-ridgeregression.html#coefficients","title":"RidgeRegression.coefficients","content":"RidgeRegression.coefficients \ncoefficients \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-ridgeregression.html#fit","title":"RidgeRegression.fit","content":"RidgeRegression.fit \nfit \n\n Fit to x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-univariable.html","title":"Univariable","content":"Univariable \n \nUnivariable.coefficient \ncoefficient \nUnivariable.coefficientCholesky \ncoefficientCholesky \nUnivariable.coefficientConstrained \ncoefficientConstrained \nUnivariable.fit \nfit \nUnivariable.cooksDistance \ncooksDistance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-univariable.html#coefficient","title":"Univariable.coefficient","content":"Univariable.coefficient \ncoefficient \n\n Calculates the coefficients for linear regression\n in the form of [|intercept; slope;|]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-univariable.html#coefficientCholesky","title":"Univariable.coefficientCholesky","content":"Univariable.coefficientCholesky \ncoefficientCholesky \n\n Calculates the coefficients for linear regression\n in the form of [|intercept; slope;|] using Cholesky Decomposition\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-univariable.html#coefficientConstrained","title":"Univariable.coefficientConstrained","content":"Univariable.coefficientConstrained \ncoefficientConstrained \n\n Calculates the coefficients for linear regression through a specified point (xC,yC) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-univariable.html#fit","title":"Univariable.fit","content":"Univariable.fit \nfit \n\n Fit to x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-linear-univariable.html#cooksDistance","title":"Univariable.cooksDistance","content":"Univariable.cooksDistance \ncooksDistance \n\n Fits a model (y(x) = b \u002B m * x) to the data and returns the cooks distance for every data pair present in the\n input collections as an estimator for the influence of each data point in coefficient estimation.  \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-polynomial.html","title":"Polynomial","content":"Polynomial \n\n Simple polynomial regression\n \nPolynomial.coefficient \ncoefficient \nPolynomial.coefficientsWithWeighting \ncoefficientsWithWeighting \nPolynomial.fit \nfit \nPolynomial.getDerivative \ngetDerivative \nPolynomial.cooksDistance \ncooksDistance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-polynomial.html#coefficient","title":"Polynomial.coefficient","content":"Polynomial.coefficient \ncoefficient \n\n Calculates the coefficients for polynomial regression\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-polynomial.html#coefficientsWithWeighting","title":"Polynomial.coefficientsWithWeighting","content":"Polynomial.coefficientsWithWeighting \ncoefficientsWithWeighting \n\n Calculates the coefficients for polynomial regression with given weighting\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-polynomial.html#fit","title":"Polynomial.fit","content":"Polynomial.fit \nfit \n\n Fit to x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-polynomial.html#getDerivative","title":"Polynomial.getDerivative","content":"Polynomial.getDerivative \ngetDerivative \n\ngets derivative at x with given polynomial coefficients. Level1 = fst derivative; Level2 = smd derivative ...\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-ordinaryleastsquares-polynomial.html#cooksDistance","title":"Polynomial.cooksDistance","content":"Polynomial.cooksDistance \ncooksDistance \n\n Fits a polynomial model of user defined order to the data and returns the cooks distance for every data pair present in the\n input collections as an estimator for the influence of each data point in coefficient estimation.  \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-robustregression.html","title":"RobustRegression","content":"RobustRegression \n \nRobustRegression.Linear \nLinear"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-robustregression-linear.html","title":"Linear","content":"Linear \n\n Simple linear regression y : x -\u003E a \u002B bx\n \nLinear.theilEstimator \ntheilEstimator \nLinear.theilSenEstimator \ntheilSenEstimator \nLinear.fit \nfit"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-robustregression-linear.html#theilEstimator","title":"Linear.theilEstimator","content":"Linear.theilEstimator \ntheilEstimator \n\nCalculates theil\u0027s incomplete method in the form of [|intercept; slope;|]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-robustregression-linear.html#theilSenEstimator","title":"Linear.theilSenEstimator","content":"Linear.theilSenEstimator \ntheilSenEstimator \n\nCalculates the robust Theil-Sen estimator for linear regression in the form of [|intercept; slope;|]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-linearregression-robustregression-linear.html#fit","title":"Linear.fit","content":"Linear.fit \nfit \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-logisticregression.html","title":"LogisticRegression","content":"LogisticRegression \n\n Functions for creating and using logistic regression models.\nImplementation taken from Mathias Brandewinder \n\nhttps://github.com/mathias-brandewinder/Machine-Learning-In-Action/blob/master/MachineLearningInAction/MachineLearningInAction/LogisticRegression.fs\n \nLogisticRegression.Multivariable \nMultivariable \nLogisticRegression.Univariable \nUnivariable"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-logisticregression-multivariable.html","title":"Multivariable","content":"Multivariable \n \nMultivariable.coefficient \ncoefficient \nMultivariable.fitFunc \nfitFunc \nMultivariable.fit \nfit"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-logisticregression-multivariable.html#coefficient","title":"Multivariable.coefficient","content":"Multivariable.coefficient \ncoefficient \n\n Calculates the weights for logistic regression.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-logisticregression-multivariable.html#fitFunc","title":"Multivariable.fitFunc","content":"Multivariable.fitFunc \nfitFunc \n\n Returns the regression function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-logisticregression-multivariable.html#fit","title":"Multivariable.fit","content":"Multivariable.fit \nfit \n\n Returns the regression function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-logisticregression-univariable.html","title":"Univariable","content":"Univariable \n \nUnivariable.coefficient \ncoefficient \nUnivariable.fit \nfit \nUnivariable.estimateAlpha \nestimateAlpha"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-logisticregression-univariable.html#coefficient","title":"Univariable.coefficient","content":"Univariable.coefficient \ncoefficient \n\n Calculates the weights for logistic regression.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-logisticregression-univariable.html#fit","title":"Univariable.fit","content":"Univariable.fit \nfit \n\n Returns the regression function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-logisticregression-univariable.html#estimateAlpha","title":"Univariable.estimateAlpha","content":"Univariable.estimateAlpha \nestimateAlpha \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression.html","title":"NonLinearRegression","content":"NonLinearRegression \n \nNonLinearRegression.GaussNewton \nGaussNewton \nNonLinearRegression.LevenbergMarquardt \nLevenbergMarquardt \nNonLinearRegression.LevenbergMarquardtConstrained \nLevenbergMarquardtConstrained \nNonLinearRegression.Table \nTable \nNonLinearRegression.Model \nModel \nNonLinearRegression.SolverOptions \nSolverOptions \nNonLinearRegression.standardErrorOfPrediction \nstandardErrorOfPrediction \nNonLinearRegression.createModel \ncreateModel \nNonLinearRegression.createSolverOption \ncreateSolverOption \nNonLinearRegression.getRSS \ngetRSS \nNonLinearRegression.updateJacobianInplace \nupdateJacobianInplace \nNonLinearRegression.updateResidualVectorInPlace \nupdateResidualVectorInPlace \nNonLinearRegression.shouldTerminate \nshouldTerminate \nNonLinearRegression.solverConverged \nsolverConverged"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression.html#standardErrorOfPrediction","title":"NonLinearRegression.standardErrorOfPrediction","content":"NonLinearRegression.standardErrorOfPrediction \nstandardErrorOfPrediction \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression.html#createModel","title":"NonLinearRegression.createModel","content":"NonLinearRegression.createModel \ncreateModel \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression.html#createSolverOption","title":"NonLinearRegression.createSolverOption","content":"NonLinearRegression.createSolverOption \ncreateSolverOption \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression.html#getRSS","title":"NonLinearRegression.getRSS","content":"NonLinearRegression.getRSS \ngetRSS \n\n Returns the residual sum of squares (RSS) as a measure of discrepancy between the data and the used estimation model.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression.html#updateJacobianInplace","title":"NonLinearRegression.updateJacobianInplace","content":"NonLinearRegression.updateJacobianInplace \nupdateJacobianInplace \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression.html#updateResidualVectorInPlace","title":"NonLinearRegression.updateResidualVectorInPlace","content":"NonLinearRegression.updateResidualVectorInPlace \nupdateResidualVectorInPlace \n\n Returns the residual vector, each row i contains the difference between the yEst_i and the yData_i. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression.html#shouldTerminate","title":"NonLinearRegression.shouldTerminate","content":"NonLinearRegression.shouldTerminate \nshouldTerminate \n\n Returns true if convergence criteria are met or a user defined number of iiterations has been carried out\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression.html#solverConverged","title":"NonLinearRegression.solverConverged","content":"NonLinearRegression.solverConverged \nsolverConverged \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-gaussnewton.html","title":"GaussNewton","content":"GaussNewton \n \nGaussNewton.estimatedParamsVerbose \nestimatedParamsVerbose \nGaussNewton.estimatedParams \nestimatedParams"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-gaussnewton.html#estimatedParamsVerbose","title":"GaussNewton.estimatedParamsVerbose","content":"GaussNewton.estimatedParamsVerbose \nestimatedParamsVerbose \n\n Returns an collection of parameter vectors as a possible solution for linear least square based nonlinear fitting of a given dataset (xData, yData) with a given \n model function. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-gaussnewton.html#estimatedParams","title":"GaussNewton.estimatedParams","content":"GaussNewton.estimatedParams \nestimatedParams \n\n Returns a parameter vector as a possible solution for linear least square based nonlinear fitting of a given dataset (xData, yData) with a given \n model function. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-levenbergmarquardt.html","title":"LevenbergMarquardt","content":"LevenbergMarquardt \n \nLevenbergMarquardt.estimatedParamsVerbose \nestimatedParamsVerbose \nLevenbergMarquardt.estimatedParams \nestimatedParams"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-levenbergmarquardt.html#estimatedParamsVerbose","title":"LevenbergMarquardt.estimatedParamsVerbose","content":"LevenbergMarquardt.estimatedParamsVerbose \nestimatedParamsVerbose \n\n Returns an collection of parameter vectors as a possible solution for linear least square based nonlinear fitting of a given dataset (xData, yData) with a given \n model function. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-levenbergmarquardt.html#estimatedParams","title":"LevenbergMarquardt.estimatedParams","content":"LevenbergMarquardt.estimatedParams \nestimatedParams \n\n Returns a parameter vector as a possible solution for least square based nonlinear fitting of a given dataset (xData, yData) with a given \n model function. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-levenbergmarquardtconstrained.html","title":"LevenbergMarquardtConstrained","content":"LevenbergMarquardtConstrained \n\n This LevenbergMarquardt implementation supports the usage of box constrains. \n \nLevenbergMarquardtConstrained.estimatedParamsVerbose \nestimatedParamsVerbose \nLevenbergMarquardtConstrained.estimatedParams \nestimatedParams \nLevenbergMarquardtConstrained.estimatedParamsWithRSS \nestimatedParamsWithRSS \nLevenbergMarquardtConstrained.initialParam \ninitialParam \nLevenbergMarquardtConstrained.initialParamsOverRange \ninitialParamsOverRange"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-levenbergmarquardtconstrained.html#estimatedParamsVerbose","title":"LevenbergMarquardtConstrained.estimatedParamsVerbose","content":"LevenbergMarquardtConstrained.estimatedParamsVerbose \nestimatedParamsVerbose \n\n Returns an collection of parameter vectors as a possible solution for least square based nonlinear fitting of a given dataset (xData, yData) with a given \n model function. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-levenbergmarquardtconstrained.html#estimatedParams","title":"LevenbergMarquardtConstrained.estimatedParams","content":"LevenbergMarquardtConstrained.estimatedParams \nestimatedParams \n\n Returns a parameter vector as a possible solution for linear least square based nonlinear fitting of a given dataset (xData, yData) with a given \n model function. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-levenbergmarquardtconstrained.html#estimatedParamsWithRSS","title":"LevenbergMarquardtConstrained.estimatedParamsWithRSS","content":"LevenbergMarquardtConstrained.estimatedParamsWithRSS \nestimatedParamsWithRSS \n\n Returns a parameter vector tupled with its residual sum of squares (RSS) as a possible solution for linear least square based nonlinear fitting of a given dataset (xData, yData) with a given\n model function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-levenbergmarquardtconstrained.html#initialParam","title":"LevenbergMarquardtConstrained.initialParam","content":"LevenbergMarquardtConstrained.initialParam \ninitialParam \n\n Returns an estimate for an initial parameter for the linear least square estimator for a given dataset (xData, yData).\n The initial estimation is intended for a logistic function.\n The returned parameters are the max y value, the steepness of the curve and the x value in the middle of the slope.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-levenbergmarquardtconstrained.html#initialParamsOverRange","title":"LevenbergMarquardtConstrained.initialParamsOverRange","content":"LevenbergMarquardtConstrained.initialParamsOverRange \ninitialParamsOverRange \n\n Returns an estimate for an initial parameter for the linear least square estimator for a given dataset (xData, yData).\n The steepness is given as an array and not estimated. An initial estimate is returned for every given steepness.\n The initial estimation is intended for a logistic function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html","title":"Table","content":"Table \n \nTable.Finances \nFinances \nTable.GrowthModels \nGrowthModels \nTable.lineModel \nlineModel \nTable.lineSolverOptions \nlineSolverOptions \nTable.parabolaModel \nparabolaModel \nTable.parabolaSolverOptions \nparabolaSolverOptions \nTable.gaussModel \ngaussModel \nTable.gaussSolverOptions \ngaussSolverOptions \nTable.expModel \nexpModel \nTable.expSolverOptions \nexpSolverOptions \nTable.logNormalModel \nlogNormalModel \nTable.logNormalOptions \nlogNormalOptions \nTable.emgModel \nemgModel \nTable.emgSolverOptions \nemgSolverOptions \nTable.hillModel \nhillModel \nTable.hillSolverOptions \nhillSolverOptions \nTable.LogisticFunction \nLogisticFunction \nTable.LogisticFunctionDescending \nLogisticFunctionDescending \nTable.LogisticFunctionAscending \nLogisticFunctionAscending \nTable.LogisticFunctionVarYDescending \nLogisticFunctionVarYDescending \nTable.LogisticFunctionVarYAscending \nLogisticFunctionVarYAscending \nTable.richardsGenericDescending \nrichardsGenericDescending"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#lineModel","title":"Table.lineModel","content":"Table.lineModel \nlineModel \n\n Line  \n Line model of the form \u0022y = a * x \u002B b\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#lineSolverOptions","title":"Table.lineSolverOptions","content":"Table.lineSolverOptions \nlineSolverOptions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#parabolaModel","title":"Table.parabolaModel","content":"Table.parabolaModel \nparabolaModel \n\n Parabola\n paraboola model of the form \u0022y = a * x^2 \u002B b * x \u002B c\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#parabolaSolverOptions","title":"Table.parabolaSolverOptions","content":"Table.parabolaSolverOptions \nparabolaSolverOptions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#gaussModel","title":"Table.gaussModel","content":"Table.gaussModel \ngaussModel \n\n Gaussian function of the form \u0022y = amp * exp( -1. * ( ( ( (x-meanX)**2. ) / (2.*std**2.)) ) )\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#gaussSolverOptions","title":"Table.gaussSolverOptions","content":"Table.gaussSolverOptions \ngaussSolverOptions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#expModel","title":"Table.expModel","content":"Table.expModel \nexpModel \n\n Exponential function of the form \u0022y = a * exp(b * x)\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#expSolverOptions","title":"Table.expSolverOptions","content":"Table.expSolverOptions \nexpSolverOptions \n\nTakes the result of the linearization as initialGuessParams\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#logNormalModel","title":"Table.logNormalModel","content":"Table.logNormalModel \nlogNormalModel \n\n log normal distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#logNormalOptions","title":"Table.logNormalOptions","content":"Table.logNormalOptions \nlogNormalOptions \n\nTakes the result of the linearization as initialGuessParams\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#emgModel","title":"Table.emgModel","content":"Table.emgModel \nemgModel \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#emgSolverOptions","title":"Table.emgSolverOptions","content":"Table.emgSolverOptions \nemgSolverOptions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#hillModel","title":"Table.hillModel","content":"Table.hillModel \nhillModel \n\n Hill equation \u0022y = Vm * x^n / (k^n\u002Bx^n)\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#hillSolverOptions","title":"Table.hillSolverOptions","content":"Table.hillSolverOptions \nhillSolverOptions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#LogisticFunction","title":"Table.LogisticFunction","content":"Table.LogisticFunction \nLogisticFunction \n\n Logistic function of the form \u0022y = L/(1\u002Be^(k(t-x)))\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#LogisticFunctionDescending","title":"Table.LogisticFunctionDescending","content":"Table.LogisticFunctionDescending \nLogisticFunctionDescending \n\n Logistic function of the form \u0022y = L/(1\u002Be^(k(t-x)))\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#LogisticFunctionAscending","title":"Table.LogisticFunctionAscending","content":"Table.LogisticFunctionAscending \nLogisticFunctionAscending \n\n Logistic function of the form \u0022y = L/(1\u002Be^(-k(t-x)))\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#LogisticFunctionVarYDescending","title":"Table.LogisticFunctionVarYDescending","content":"Table.LogisticFunctionVarYDescending \nLogisticFunctionVarYDescending \n\n Logistic function of the form \u0022y = L/(1\u002Be^(k(t-x)))\u002BN\u0022\n Modified version of the Logistic function model with a variable curve minimum.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#LogisticFunctionVarYAscending","title":"Table.LogisticFunctionVarYAscending","content":"Table.LogisticFunctionVarYAscending \nLogisticFunctionVarYAscending \n\n Logistic function of the form \u0022y = L/(1\u002Be^(-k(t-x)))\u002BN\u0022\n Modified version of the Logistic function model with a variable curve minimum.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table.html#richardsGenericDescending","title":"Table.richardsGenericDescending","content":"Table.richardsGenericDescending \nrichardsGenericDescending \n\n Descending version of the generalized logistic function or curve, also known as Richards\u0027 curve with 7 parameters.\n Logistic function of the form \u0022Y(t) = A \u002B (K - A) / (C \u002B Q * e^(B * (t - M)))**(1. / v)\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-finances.html","title":"Finances","content":"Finances \n \nFinances.nelsonSiegel \nnelsonSiegel \nFinances.nelsonSiegelSvensson \nnelsonSiegelSvensson"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-finances.html#nelsonSiegel","title":"Finances.nelsonSiegel","content":"Finances.nelsonSiegel \nnelsonSiegel \n\n Nelson-Siegel is a curve fitting model that is frequently applied in finance to fit smoothed yield curves. \n xData: The periods of available yield rates (time).\n yData: The observed yields.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-finances.html#nelsonSiegelSvensson","title":"Finances.nelsonSiegelSvensson","content":"Finances.nelsonSiegelSvensson \nnelsonSiegelSvensson \n\n Nelson-Siegel-Svensson is a curve fitting model that is frequently applied in finance to fit smoothed yield curves and extends the Nelson Siegel model by a term introducing a second hump. \n xData: The periods of available yield rates (time).\n yData: The observed yields.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html","title":"GrowthModels","content":"GrowthModels \n \nGrowthModels.gompertz \ngompertz \nGrowthModels.getSolverOptionsGompertz \ngetSolverOptionsGompertz \nGrowthModels.richards \nrichards \nGrowthModels.richardsGeneric \nrichardsGeneric \nGrowthModels.weibull \nweibull \nGrowthModels.janoschek \njanoschek \nGrowthModels.exponential \nexponential \nGrowthModels.morganMercerFlodin \nmorganMercerFlodin \nGrowthModels.verhulst \nverhulst \nGrowthModels.verhulst4Param \nverhulst4Param \nGrowthModels.vonBertalanffy \nvonBertalanffy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#gompertz","title":"GrowthModels.gompertz","content":"GrowthModels.gompertz \ngompertz \n\n The gompertz function describes the log cell count at time point t.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#getSolverOptionsGompertz","title":"GrowthModels.getSolverOptionsGompertz","content":"GrowthModels.getSolverOptionsGompertz \ngetSolverOptionsGompertz \n\n determines the solver options for cell count growth data (must be in log space). For untransformed data use \u0027id\u0027 as transform.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#richards","title":"GrowthModels.richards","content":"GrowthModels.richards \nrichards \n\n 4 parameter richards curve with minimum at 0; d \u003C\u003E 1\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#richardsGeneric","title":"GrowthModels.richardsGeneric","content":"GrowthModels.richardsGeneric \nrichardsGeneric \n\n Generalized logistic function or curve, also known as Richards\u0027 curve with 7 parameters.\n Logistic function of the form \u0022Y(t) = A \u002B (K - A) / (C \u002B Q * e^(-B * (t - M)))**(1. / v)\u0022\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#weibull","title":"GrowthModels.weibull","content":"GrowthModels.weibull \nweibull \n\n weibull growth model; if d=1 then it is a simple exponential growth model\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#janoschek","title":"GrowthModels.janoschek","content":"GrowthModels.janoschek \njanoschek \n\n stable growth model similar to weibull model\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#exponential","title":"GrowthModels.exponential","content":"GrowthModels.exponential \nexponential \n\n exponential growth model\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#morganMercerFlodin","title":"GrowthModels.morganMercerFlodin","content":"GrowthModels.morganMercerFlodin \nmorganMercerFlodin \n\n 4 parameter Morgan-Mercer-Flodin growth model \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#verhulst","title":"GrowthModels.verhulst","content":"GrowthModels.verhulst \nverhulst \n\n 3 parameter verhulst logistic model with lower asymptote=0\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#verhulst4Param","title":"GrowthModels.verhulst4Param","content":"GrowthModels.verhulst4Param \nverhulst4Param \n\n 4 parameter verhulst model with variably lowers asymptote\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-table-growthmodels.html#vonBertalanffy","title":"GrowthModels.vonBertalanffy","content":"GrowthModels.vonBertalanffy \nvonBertalanffy \n\n 3 parameter von Bertalanffy growth model\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-model.html","title":"Model","content":"Model \n \nModel.ParameterNames \nParameterNames \nModel.GetFunctionValue \nGetFunctionValue \nModel.GetGradientValue \nGetGradientValue"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-model.html#ParameterNames","title":"Model.ParameterNames","content":"Model.ParameterNames \nParameterNames \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-model.html#GetFunctionValue","title":"Model.GetFunctionValue","content":"Model.GetFunctionValue \nGetFunctionValue \n\noriginally GetValue; contains function body\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-model.html#GetGradientValue","title":"Model.GetGradientValue","content":"Model.GetGradientValue \nGetGradientValue \n\nGradient: Vector of partial derivations of function body\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-solveroptions.html","title":"SolverOptions","content":"SolverOptions \n \nSolverOptions.MinimumDeltaValue \nMinimumDeltaValue \nSolverOptions.MinimumDeltaParameters \nMinimumDeltaParameters \nSolverOptions.MaximumIterations \nMaximumIterations \nSolverOptions.InitialParamGuess \nInitialParamGuess"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-solveroptions.html#MinimumDeltaValue","title":"SolverOptions.MinimumDeltaValue","content":"SolverOptions.MinimumDeltaValue \nMinimumDeltaValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-solveroptions.html#MinimumDeltaParameters","title":"SolverOptions.MinimumDeltaParameters","content":"SolverOptions.MinimumDeltaParameters \nMinimumDeltaParameters \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-solveroptions.html#MaximumIterations","title":"SolverOptions.MaximumIterations","content":"SolverOptions.MaximumIterations \nMaximumIterations \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-nonlinearregression-solveroptions.html#InitialParamGuess","title":"SolverOptions.InitialParamGuess","content":"SolverOptions.InitialParamGuess \nInitialParamGuess \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-quantilenormalization.html","title":"QuantileNormalization","content":"QuantileNormalization \n \nQuantileNormalization.quantileNorm \nquantileNorm"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-quantilenormalization.html#quantileNorm","title":"QuantileNormalization.quantileNorm","content":"QuantileNormalization.quantileNorm \nquantileNorm \n\n Computes the quantile normalization of a given dataset  \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-spline.html","title":"Spline","content":"Spline \n \nSpline.smoothingSpline \nsmoothingSpline"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-fitting-spline.html#smoothingSpline","title":"Spline.smoothingSpline","content":"Spline.smoothingSpline \nsmoothingSpline \n\n Creates a smoothing spline through some data. Takes as spline points the x-values given by basispts.\n The resulting function takes lambda (regularization parameter) and a x_Value as input. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-differentiation.html","title":"Differentiation","content":"Differentiation \n\nIn numerical analysis, numerical differentiation describes algorithms for estimating the derivative of a mathematical function using values of the function and perhaps other knowledge about the function.\n \nDifferentiation.TwoPointDifferentiation \nTwoPointDifferentiation \nDifferentiation.differentiateThreePoint \ndifferentiateThreePoint"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-differentiation.html#differentiateThreePoint","title":"Differentiation.differentiateThreePoint","content":"Differentiation.differentiateThreePoint \ndifferentiateThreePoint \n\n Three-Point Differentiation Helper.\n xValues Sample Points t.\n yValues Sample Values x(t)\n idxT Index of the point of the differentiation.\u003C/param\u003E\n idx0 Index of the first sample.\u003C/param\u003E\n idx1 Index of the second sample.\u003C/param\u003E\n idx2 Index of the third sample.\u003C/param\u003E\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-differentiation-twopointdifferentiation.html","title":"TwoPointDifferentiation","content":"TwoPointDifferentiation \n\nA two-point estimation is to compute the slope of a nearby secant line through two points.\nThis gives an approximations of f\u0027(x) at x respectively to two points \u0022x and x\u002Bh\u0022/\u0022x-h and x\u002Bh\u0022(depending on the used algorithm) of the function f.\nChoosing a small number h, h represents a small change in x, and it can be either positive or negative.\n \nTwoPointDifferentiation.differentiate \ndifferentiate \nTwoPointDifferentiation.differentiateOptimalHBy \ndifferentiateOptimalHBy \nTwoPointDifferentiation.differentiateOptimalH \ndifferentiateOptimalH"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-differentiation-twopointdifferentiation.html#differentiate","title":"TwoPointDifferentiation.differentiate","content":"TwoPointDifferentiation.differentiate \ndifferentiate \n\nReturns the approximation of f\u0027(x) at x by calculating the two point differentiation.\nh is the window for the difference calculation. f is the function for which to calculate numerical differentiation. x is the point at which the difference between \u0022x and x\u002Bh\u0022/\u0022x-h and x\u002Bh\u0022 is calculated.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-differentiation-twopointdifferentiation.html#differentiateOptimalHBy","title":"TwoPointDifferentiation.differentiateOptimalHBy","content":"TwoPointDifferentiation.differentiateOptimalHBy \ndifferentiateOptimalHBy \n\nReturns the approximation of f\u0027(x) at x by calculating the two point differentiation.\nFinds optimal h from all values given in hArr and calculates \u0022differentiate\u0022 -function.\nf is the function and x the point at which numerical differentiation is calculated.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-differentiation-twopointdifferentiation.html#differentiateOptimalH","title":"TwoPointDifferentiation.differentiateOptimalH","content":"TwoPointDifferentiation.differentiateOptimalH \ndifferentiateOptimalH \n\nReturns the approximation of f\u0027(x) at x by calculating the two point differentiation.\nCalculates optimal h for the \u0022differentiate\u0022-function from a preset, suggested array.\nh is tested from h = 0.01 to 5e^-100 in [|0.01; 0.005; 0.001; 0.0005; 0.0001 ..|]-increments. \nf is the function and x the point at which numerical differentiation is calculated.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegration.html","title":"NumericalIntegration","content":"NumericalIntegration \n\n Definite integral approximation\n \nNumericalIntegration.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNumericalIntegration.definiteIntegral \ndefiniteIntegral \nNumericalIntegration.definiteIntegral \ndefiniteIntegral"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegration.html#\u0060\u0060.ctor\u0060\u0060","title":"NumericalIntegration.\u0060\u0060.ctor\u0060\u0060","content":"NumericalIntegration.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegration.html#definiteIntegral","title":"NumericalIntegration.definiteIntegral","content":"NumericalIntegration.definiteIntegral \ndefiniteIntegral \n\n returns a function that approximates the AUC of the observations ((x,y) data) with the given numerical integration method\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegration.html#definiteIntegral","title":"NumericalIntegration.definiteIntegral","content":"NumericalIntegration.definiteIntegral \ndefiniteIntegral \n\n Returns a function that approximates the definite integral of the input function (float -\u003E float) with the given \u0060method\u0060 for partitions of equal size \u0060partitions\u0060 in an inclusive closed interval [\u0060intervalStart\u0060, \u0060intervalEnd\u0060]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html","title":"NumericalIntegrationMethod","content":"NumericalIntegrationMethod \n\n Approximation methods for definitive integral estimation\n \nNumericalIntegrationMethod.calculateDefiniteFunctionIntegralParallel \ncalculateDefiniteFunctionIntegralParallel \nNumericalIntegrationMethod.calculateDefiniteFunctionIntegral \ncalculateDefiniteFunctionIntegral \nNumericalIntegrationMethod.getPartitionIntegrals \ngetPartitionIntegrals \nNumericalIntegrationMethod.getObservationPartitionIntegrals \ngetObservationPartitionIntegrals \nNumericalIntegrationMethod.calculateDefiniteObservationIntegral \ncalculateDefiniteObservationIntegral \nNumericalIntegrationMethod.LeftEndpoint \nLeftEndpoint \nNumericalIntegrationMethod.RightEndpoint \nRightEndpoint \nNumericalIntegrationMethod.Midpoint \nMidpoint \nNumericalIntegrationMethod.Trapezoidal \nTrapezoidal \nNumericalIntegrationMethod.Simpson \nSimpson"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#calculateDefiniteFunctionIntegralParallel","title":"NumericalIntegrationMethod.calculateDefiniteFunctionIntegralParallel","content":"NumericalIntegrationMethod.calculateDefiniteFunctionIntegralParallel \ncalculateDefiniteFunctionIntegralParallel \n\n returns a function that estimates the definite integral of a function with the given method in parallel\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#calculateDefiniteFunctionIntegral","title":"NumericalIntegrationMethod.calculateDefiniteFunctionIntegral","content":"NumericalIntegrationMethod.calculateDefiniteFunctionIntegral \ncalculateDefiniteFunctionIntegral \n\n returns a function that estimates the definite integral of a function with the given method \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#getPartitionIntegrals","title":"NumericalIntegrationMethod.getPartitionIntegrals","content":"NumericalIntegrationMethod.getPartitionIntegrals \ngetPartitionIntegrals \n\n returns a function that returns the estimated partition integrals of a function with the given method \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#getObservationPartitionIntegrals","title":"NumericalIntegrationMethod.getObservationPartitionIntegrals","content":"NumericalIntegrationMethod.getObservationPartitionIntegrals \ngetObservationPartitionIntegrals \n\n returns a function that returns the estimated partition integrals of observations with the given method \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#calculateDefiniteObservationIntegral","title":"NumericalIntegrationMethod.calculateDefiniteObservationIntegral","content":"NumericalIntegrationMethod.calculateDefiniteObservationIntegral \ncalculateDefiniteObservationIntegral \n\n returns a function that estimates the definite integral of observations with the given method \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#LeftEndpoint","title":"NumericalIntegrationMethod.LeftEndpoint","content":"NumericalIntegrationMethod.LeftEndpoint \nLeftEndpoint \n\n Left Riemann sum or left endpoint rule - approximation via partition intervals using the function values of the left partition boundary\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#RightEndpoint","title":"NumericalIntegrationMethod.RightEndpoint","content":"NumericalIntegrationMethod.RightEndpoint \nRightEndpoint \n\n Right Riemann sum or right endpoint rule - approximation via partition intervals using the function values of the right partition boundary\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#Midpoint","title":"NumericalIntegrationMethod.Midpoint","content":"NumericalIntegrationMethod.Midpoint \nMidpoint \n\n Midpoint rule - approximation via partition intervals using the function values of the mid points of the partition boundaries\n \n Note: when estimating definite integrals for observations, the best guess for midpoints is at xMid = (x2-x1)/2 , yMid = (y2-y1)/2 which will lead to the same results as the trapezoidal rule.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#Trapezoidal","title":"NumericalIntegrationMethod.Trapezoidal","content":"NumericalIntegrationMethod.Trapezoidal \nTrapezoidal \n\n Trapezoidal rule - approximation via partition intervals using trapezoids in the partition boundaries\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-integration-numericalintegrationmethod.html#Simpson","title":"NumericalIntegrationMethod.Simpson","content":"NumericalIntegrationMethod.Simpson \nSimpson \n\nSimpson\u0027s 1/3 rule or \u0027Kepplersche Fa\uFFFDregel\u0027 (barrel rule) - approximation via parabolas\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-formatters.html","title":"Formatters","content":"Formatters \n \nFormatters.matrixToHtmlTable \nmatrixToHtmlTable"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-formatters.html#matrixToHtmlTable","title":"Formatters.matrixToHtmlTable","content":"Formatters.matrixToHtmlTable \nmatrixToHtmlTable \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-interactiveconfig.html","title":"InteractiveConfig","content":"InteractiveConfig \n \nInteractiveConfig.Matrix \nMatrix \nInteractiveConfig.Reset \nReset"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-interactiveconfig.html#Reset","title":"InteractiveConfig.Reset","content":"InteractiveConfig.Reset \nReset \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-interactiveconfig-matrix.html","title":"Matrix","content":"Matrix \n \nMatrix.MaxRows \nMaxRows \nMatrix.MaxCols \nMaxCols \nMatrix.ShowInfo \nShowInfo \nMatrix.ShowDimensions \nShowDimensions"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-interactiveconfig-matrix.html#MaxRows","title":"Matrix.MaxRows","content":"Matrix.MaxRows \nMaxRows \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-interactiveconfig-matrix.html#MaxCols","title":"Matrix.MaxCols","content":"Matrix.MaxCols \nMaxCols \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-interactiveconfig-matrix.html#ShowInfo","title":"Matrix.ShowInfo","content":"Matrix.ShowInfo \nShowInfo \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-interactiveconfig-matrix.html#ShowDimensions","title":"Matrix.ShowDimensions","content":"Matrix.ShowDimensions \nShowDimensions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-formatterkernelextension.html","title":"FormatterKernelExtension","content":"FormatterKernelExtension \n \nFormatterKernelExtension.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interactive-formatterkernelextension.html#\u0060\u0060.ctor\u0060\u0060","title":"FormatterKernelExtension.\u0060\u0060.ctor\u0060\u0060","content":"FormatterKernelExtension.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-approximation.html","title":"Approximation","content":"Approximation \n \nApproximation.regularizeValues \nregularizeValues \nApproximation.approx \napprox"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-approximation.html#regularizeValues","title":"Approximation.regularizeValues","content":"Approximation.regularizeValues \nregularizeValues \n\n Regularize (like R! regularize.values) used in approx\n 1. pairs x -y values \n 2. filters nan on both sides and sortby x\n 3. handels ties by given function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-approximation.html#approx","title":"Approximation.approx","content":"Approximation.approx \napprox \n\n Return a sequence of points which linearly interpolate given data points, or a function performing the linear interpolation.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline.html","title":"CubicSpline","content":"CubicSpline \n \nCubicSpline.Differentiable \nDifferentiable \nCubicSpline.Simple \nSimple"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html","title":"Differentiable","content":"Differentiable \n \nDifferentiable.SplineCoefficients \nSplineCoefficients \nDifferentiable.interpolateHermiteSorted \ninterpolateHermiteSorted \nDifferentiable.leftSegmentIdx \nleftSegmentIdx \nDifferentiable.akimaCoefficients \nakimaCoefficients \nDifferentiable.interpolateAtX \ninterpolateAtX \nDifferentiable.firstDerivative \nfirstDerivative \nDifferentiable.secondDerivative \nsecondDerivative \nDifferentiable.computeIndefiniteIntegral \ncomputeIndefiniteIntegral \nDifferentiable.integrate \nintegrate \nDifferentiable.definiteIntegral \ndefiniteIntegral"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html#interpolateHermiteSorted","title":"Differentiable.interpolateHermiteSorted","content":"Differentiable.interpolateHermiteSorted \ninterpolateHermiteSorted \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html#leftSegmentIdx","title":"Differentiable.leftSegmentIdx","content":"Differentiable.leftSegmentIdx \nleftSegmentIdx \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html#akimaCoefficients","title":"Differentiable.akimaCoefficients","content":"Differentiable.akimaCoefficients \nakimaCoefficients \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html#interpolateAtX","title":"Differentiable.interpolateAtX","content":"Differentiable.interpolateAtX \ninterpolateAtX \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html#firstDerivative","title":"Differentiable.firstDerivative","content":"Differentiable.firstDerivative \nfirstDerivative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html#secondDerivative","title":"Differentiable.secondDerivative","content":"Differentiable.secondDerivative \nsecondDerivative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html#computeIndefiniteIntegral","title":"Differentiable.computeIndefiniteIntegral","content":"Differentiable.computeIndefiniteIntegral \ncomputeIndefiniteIntegral \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html#integrate","title":"Differentiable.integrate","content":"Differentiable.integrate \nintegrate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable.html#definiteIntegral","title":"Differentiable.definiteIntegral","content":"Differentiable.definiteIntegral \ndefiniteIntegral \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable-splinecoefficients.html","title":"SplineCoefficients","content":"SplineCoefficients \n \nSplineCoefficients.XValues \nXValues \nSplineCoefficients.C0 \nC0 \nSplineCoefficients.C1 \nC1 \nSplineCoefficients.C2 \nC2 \nSplineCoefficients.C3 \nC3"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable-splinecoefficients.html#XValues","title":"SplineCoefficients.XValues","content":"SplineCoefficients.XValues \nXValues \n\n sample points (N\u002B1), sorted ascending\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable-splinecoefficients.html#C0","title":"SplineCoefficients.C0","content":"SplineCoefficients.C0 \nC0 \n\n Zero order spline coefficients (N)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable-splinecoefficients.html#C1","title":"SplineCoefficients.C1","content":"SplineCoefficients.C1 \nC1 \n\n First order spline coefficients (N)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable-splinecoefficients.html#C2","title":"SplineCoefficients.C2","content":"SplineCoefficients.C2 \nC2 \n\n Second order spline coefficients (N)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-differentiable-splinecoefficients.html#C3","title":"SplineCoefficients.C3","content":"SplineCoefficients.C3 \nC3 \n\n Third order spline coefficients (N)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple.html","title":"Simple","content":"Simple \n \nSimple.Hermite \nHermite \nSimple.BoundaryCondition \nBoundaryCondition \nSimple.coefficients \ncoefficients \nSimple.fit \nfit \nSimple.fitForce \nfitForce \nSimple.fitWithLinearPrediction \nfitWithLinearPrediction \nSimple.getFirstDerivative \ngetFirstDerivative \nSimple.getSecondDerivative \ngetSecondDerivative \nSimple.getThirdDerivative \ngetThirdDerivative"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple.html#coefficients","title":"Simple.coefficients","content":"Simple.coefficients \ncoefficients \n\n computes all coefficients for piecewise interpolating splines. In the form of [a0;b0;c0;d0;a1;b1;...;d(n-2)]. \n where: fn(x) = (an)x^3\u002B(bn)x^2\u002B(cn)x\u002B(dn)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple.html#fit","title":"Simple.fit","content":"Simple.fit \nfit \n\nFits a cubic spline with given coefficients. Only defined within the range of the given xValues\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple.html#fitForce","title":"Simple.fitForce","content":"Simple.fitForce \nfitForce \n\nforces a spline fit even outside of the interval defined in xValues\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple.html#fitWithLinearPrediction","title":"Simple.fitWithLinearPrediction","content":"Simple.fitWithLinearPrediction \nfitWithLinearPrediction \n\nfits a cubic spline fit even outside of the interval defined in xValues by linear interpolation of slope given by border knots\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple.html#getFirstDerivative","title":"Simple.getFirstDerivative","content":"Simple.getFirstDerivative \ngetFirstDerivative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple.html#getSecondDerivative","title":"Simple.getSecondDerivative","content":"Simple.getSecondDerivative \ngetSecondDerivative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple.html#getThirdDerivative","title":"Simple.getThirdDerivative","content":"Simple.getThirdDerivative \ngetThirdDerivative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-hermite.html","title":"Hermite","content":"Hermite \n \nHermite.cubicHermite \ncubicHermite \nHermite.getSimpleSlopes \ngetSimpleSlopes \nHermite.getSlopesTryMonotonicity \ngetSlopesTryMonotonicity"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-hermite.html#cubicHermite","title":"Hermite.cubicHermite","content":"Hermite.cubicHermite \ncubicHermite \n\ncalculates a function to interpolate between the datapoints with given slopes (yData\u0027).\nthe data has to be sorted ascending\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-hermite.html#getSimpleSlopes","title":"Hermite.getSimpleSlopes","content":"Hermite.getSimpleSlopes \ngetSimpleSlopes \n\ncalculates the slopes by averaging the slopes of neighbouring tangents\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-hermite.html#getSlopesTryMonotonicity","title":"Hermite.getSlopesTryMonotonicity","content":"Hermite.getSlopesTryMonotonicity \ngetSlopesTryMonotonicity \n\nif the knots are monotone in/decreasing, the spline also is monotone (http://www.korf.co.uk/spline.pdf)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-boundarycondition.html","title":"BoundaryCondition","content":"BoundaryCondition \n \nBoundaryCondition.Natural \nNatural \nBoundaryCondition.Periodic \nPeriodic \nBoundaryCondition.Parabolic \nParabolic \nBoundaryCondition.NotAKnot \nNotAKnot \nBoundaryCondition.Quadratic \nQuadratic \nBoundaryCondition.Clamped \nClamped"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-boundarycondition.html#Natural","title":"BoundaryCondition.Natural","content":"BoundaryCondition.Natural \nNatural \n\nmost used spline variant: f\u0027\u0027 at borders is set to 0\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-boundarycondition.html#Periodic","title":"BoundaryCondition.Periodic","content":"BoundaryCondition.Periodic \nPeriodic \n\nf\u0027 at first point is the same as f\u0027 at the last point\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-boundarycondition.html#Parabolic","title":"BoundaryCondition.Parabolic","content":"BoundaryCondition.Parabolic \nParabolic \n\nf\u0027\u0027 at first/second and last/penultimate knot are equal\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-boundarycondition.html#NotAKnot","title":"BoundaryCondition.NotAKnot","content":"BoundaryCondition.NotAKnot \nNotAKnot \n\nf\u0027\u0027\u0027 at second and penultimate knot are continuous\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-boundarycondition.html#Quadratic","title":"BoundaryCondition.Quadratic","content":"BoundaryCondition.Quadratic \nQuadratic \n\nfirst and last polynomial are quadratic, not cubic\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-cubicspline-simple-boundarycondition.html#Clamped","title":"BoundaryCondition.Clamped","content":"BoundaryCondition.Clamped \nClamped \n\nf\u0027 at first and last knot are set by user\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline.html","title":"LinearSpline","content":"LinearSpline \n \nLinearSpline.LinearSplineCoef \nLinearSplineCoef \nLinearSpline.createLinearSplineCoef \ncreateLinearSplineCoef \nLinearSpline.initInterpolateSorted \ninitInterpolateSorted \nLinearSpline.initInterpolateInplace \ninitInterpolateInplace \nLinearSpline.initInterpolate \ninitInterpolate \nLinearSpline.interpolate \ninterpolate \nLinearSpline.differentiate \ndifferentiate"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline.html#createLinearSplineCoef","title":"LinearSpline.createLinearSplineCoef","content":"LinearSpline.createLinearSplineCoef \ncreateLinearSplineCoef \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline.html#initInterpolateSorted","title":"LinearSpline.initInterpolateSorted","content":"LinearSpline.initInterpolateSorted \ninitInterpolateSorted \n\n Returns the linear spline interpolation coefficients from sorted x,y data\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline.html#initInterpolateInplace","title":"LinearSpline.initInterpolateInplace","content":"LinearSpline.initInterpolateInplace \ninitInterpolateInplace \n\n Returns the linear spline interpolation coefficients from unsorted x,y data \n Works in place\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline.html#initInterpolate","title":"LinearSpline.initInterpolate","content":"LinearSpline.initInterpolate \ninitInterpolate \n\n Returns the linear spline interpolation coefficients from unsorted x,y data     \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline.html#interpolate","title":"LinearSpline.interpolate","content":"LinearSpline.interpolate \ninterpolate \n\n Interpolate at point x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline.html#differentiate","title":"LinearSpline.differentiate","content":"LinearSpline.differentiate \ndifferentiate \n\n Differentiate at point x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline-linearsplinecoef.html","title":"LinearSplineCoef","content":"LinearSplineCoef \n \nLinearSplineCoef.XValues \nXValues \nLinearSplineCoef.C0 \nC0 \nLinearSplineCoef.C1 \nC1"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline-linearsplinecoef.html#XValues","title":"LinearSplineCoef.XValues","content":"LinearSplineCoef.XValues \nXValues \n\n sample points (N\u002B1), sorted ascending\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline-linearsplinecoef.html#C0","title":"LinearSplineCoef.C0","content":"LinearSplineCoef.C0 \nC0 \n\n Zero order spline coefficients (N)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-linearspline-linearsplinecoef.html#C1","title":"LinearSplineCoef.C1","content":"LinearSplineCoef.C1 \nC1 \n\n First order spline coefficients (N)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-polynomial.html","title":"Polynomial","content":"Polynomial \n \nPolynomial.coefficients \ncoefficients \nPolynomial.fit \nfit \nPolynomial.getDerivative \ngetDerivative"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-polynomial.html#coefficients","title":"Polynomial.coefficients","content":"Polynomial.coefficients \ncoefficients \n\ncalculates the polynomial coefficients for interpolating the given unsorted data. No duplicates allowed!\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-polynomial.html#fit","title":"Polynomial.fit","content":"Polynomial.fit \nfit \n\ntakes polynomial coefficients and x value to get the corresponding interpolating y\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-interpolation-polynomial.html#getDerivative","title":"Polynomial.getDerivative","content":"Polynomial.getDerivative \ngetDerivative \n\ncalculates derivatives at x with given polynomial coefficients. Level 1 = fst derivative; Level2 = snd derivative ...\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics.html","title":"DistanceMetrics","content":"DistanceMetrics \n \nDistanceMetrics.Array \nArray \nDistanceMetrics.Vector \nVector \nDistanceMetrics.euclidean \neuclidean \nDistanceMetrics.euclideanNaN \neuclideanNaN \nDistanceMetrics.euclideanNaNSquared \neuclideanNaNSquared \nDistanceMetrics.cityblock \ncityblock \nDistanceMetrics.cityblockNaN \ncityblockNaN \nDistanceMetrics.dissimilarity \ndissimilarity \nDistanceMetrics.wagnerFischerLazy \nwagnerFischerLazy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics.html#euclidean","title":"DistanceMetrics.euclidean","content":"DistanceMetrics.euclidean \neuclidean \n\n Euclidean distance of two coordinate sequences\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics.html#euclideanNaN","title":"DistanceMetrics.euclideanNaN","content":"DistanceMetrics.euclideanNaN \neuclideanNaN \n\n Euclidean distance of two coordinate float sequences (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics.html#euclideanNaNSquared","title":"DistanceMetrics.euclideanNaNSquared","content":"DistanceMetrics.euclideanNaNSquared \neuclideanNaNSquared \n\n Squared Euclidean distance of two coordinate float sequences (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics.html#cityblock","title":"DistanceMetrics.cityblock","content":"DistanceMetrics.cityblock \ncityblock \n\n Cityblock distance of two coordinate float sequences\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics.html#cityblockNaN","title":"DistanceMetrics.cityblockNaN","content":"DistanceMetrics.cityblockNaN \ncityblockNaN \n\n Cityblock distance of two coordinate float sequences\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics.html#dissimilarity","title":"DistanceMetrics.dissimilarity","content":"DistanceMetrics.dissimilarity \ndissimilarity \n\n \u0022Dissimilarity\u0022 uses 1. - pearsons correlation coefficient \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics.html#wagnerFischerLazy","title":"DistanceMetrics.wagnerFischerLazy","content":"DistanceMetrics.wagnerFischerLazy \nwagnerFischerLazy \n\n Levenshtein distance between\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-array.html","title":"Array","content":"Array \n \nArray.euclidean \neuclidean \nArray.euclideanNaN \neuclideanNaN \nArray.euclideanNaNSquared \neuclideanNaNSquared \nArray.cityblock \ncityblock \nArray.cityblockNaN \ncityblockNaN"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-array.html#euclidean","title":"Array.euclidean","content":"Array.euclidean \neuclidean \n\n Euclidean distance of two coordinate arrays\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-array.html#euclideanNaN","title":"Array.euclideanNaN","content":"Array.euclideanNaN \neuclideanNaN \n\n Euclidean distance of two coordinate float arrays (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-array.html#euclideanNaNSquared","title":"Array.euclideanNaNSquared","content":"Array.euclideanNaNSquared \neuclideanNaNSquared \n\n Squared Euclidean distance of two coordinate float arrays (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-array.html#cityblock","title":"Array.cityblock","content":"Array.cityblock \ncityblock \n\n Cityblock distance of two coordinate arrays\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-array.html#cityblockNaN","title":"Array.cityblockNaN","content":"Array.cityblockNaN \ncityblockNaN \n\n Cityblock distance of two coordinate float arrays (ignores nan)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-vector.html","title":"Vector","content":"Vector \n \nVector.euclidean \neuclidean \nVector.euclideanSquared \neuclideanSquared \nVector.euclideanNaN \neuclideanNaN \nVector.cityblock \ncityblock \nVector.cityblockNaN \ncityblockNaN"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-vector.html#euclidean","title":"Vector.euclidean","content":"Vector.euclidean \neuclidean \n\n Euclidean distance between 2 vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-vector.html#euclideanSquared","title":"Vector.euclideanSquared","content":"Vector.euclideanSquared \neuclideanSquared \n\n Squared Euclidean distance between 2 vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-vector.html#euclideanNaN","title":"Vector.euclideanNaN","content":"Vector.euclideanNaN \neuclideanNaN \n\n Euclidean distance between 2 vectors (ignores nan) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-vector.html#cityblock","title":"Vector.cityblock","content":"Vector.cityblock \ncityblock \n\n Cityblock distance of two vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-distancemetrics-vector.html#cityblockNaN","title":"Vector.cityblockNaN","content":"Vector.cityblockNaN \ncityblockNaN \n\n Cityblock distance of two vectors\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute.html","title":"Impute","content":"Impute \n\n Module for data imputation and missing value filtering\n \nImpute.Cleaning \nCleaning \nImpute.MatrixBaseImputation\u003C\u0027a, \u0027b\u003E \nMatrixBaseImputation\u003C\u0027a, \u0027b\u003E \nImpute.VectorBaseImputation\u003C\u0027a\u003E \nVectorBaseImputation\u003C\u0027a\u003E \nImpute.rnd \nrnd \nImpute.normal \nnormal \nImpute.kNearestImpute \nkNearestImpute \nImpute.imputeColWiseBy \nimputeColWiseBy \nImpute.imputeRowWiseBy \nimputeRowWiseBy \nImpute.imputeBy \nimputeBy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute.html#rnd","title":"Impute.rnd","content":"Impute.rnd \nrnd \n\n Imputation by random sampling from the input vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute.html#normal","title":"Impute.normal","content":"Impute.normal \nnormal \n\n Imputation by sampling from a gausian normal distribution based on the input vector\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute.html#kNearestImpute","title":"Impute.kNearestImpute","content":"Impute.kNearestImpute \nkNearestImpute \n\n Imputation by k-nearest neighbour\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute.html#imputeColWiseBy","title":"Impute.imputeColWiseBy","content":"Impute.imputeColWiseBy \nimputeColWiseBy \n\n Imputes column-wise by vector-based imputation\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute.html#imputeRowWiseBy","title":"Impute.imputeRowWiseBy","content":"Impute.imputeRowWiseBy \nimputeRowWiseBy \n\n Imputes row-wise by vector-based imputation\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute.html#imputeBy","title":"Impute.imputeBy","content":"Impute.imputeBy \nimputeBy \n\n Imputes rows by matrix-based imputation\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute-cleaning.html","title":"Cleaning","content":"Cleaning \n \nCleaning.calcFractionBy \ncalcFractionBy \nCleaning.removeAllBy \nremoveAllBy"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute-cleaning.html#calcFractionBy","title":"Cleaning.calcFractionBy","content":"Cleaning.calcFractionBy \ncalcFractionBy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute-cleaning.html#removeAllBy","title":"Cleaning.removeAllBy","content":"Cleaning.removeAllBy \nremoveAllBy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute-matrixbaseimputation-2.html","title":"MatrixBaseImputation\u003C\u0027a, \u0027b\u003E","content":"MatrixBaseImputation\u003C\u0027a, \u0027b\u003E \n\n Type definintion for a vector based imputation\n The imputed values are based on the given whole dataset\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-impute-vectorbaseimputation-1.html","title":"VectorBaseImputation\u003C\u0027a\u003E","content":"VectorBaseImputation\u003C\u0027a\u003E \n\n Type definintion for a vector based imputation.\n The imputed values are based only on the given array\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-similaritymetrics.html","title":"SimilarityMetrics","content":"SimilarityMetrics \n \nSimilarityMetrics.Set \nSet \nSimilarityMetrics.Similarity\u003C\u0027a\u003E \nSimilarity\u003C\u0027a\u003E"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-similaritymetrics-set.html","title":"Set","content":"Set \n \nSet.jaccard \njaccard \nSet.overlap \noverlap \nSet.sorensenDice \nsorensenDice \nSet.tversky \ntversky \nSet.tverskySymmetric \ntverskySymmetric"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-similaritymetrics-set.html#jaccard","title":"Set.jaccard","content":"Set.jaccard \njaccard \n\nComputes the Jaccard index of two finite sets, also known as Intersection over Union. \n\nThe Jaccard coefficient measures similarity between finite sample sets, \nand is defined as the size of the intersection divided by the size of the union of the sample sets\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-similaritymetrics-set.html#overlap","title":"Set.overlap","content":"Set.overlap \noverlap \n\nComputes the overlap coefficient, or Szymkiewicz\uFFFDSimpson coefficient, \n\nThe Overlap coefficient measures the overlap between two finite sets. It is related to the Jaccard index and is \ndefined as the size of the intersection divided by the smaller of the size of the two sets.\n\nIf set X is a subset of Y or the converse then the overlap coefficient is equal to 1.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-similaritymetrics-set.html#sorensenDice","title":"Set.sorensenDice","content":"Set.sorensenDice \nsorensenDice \n\nComputes the Sorensen\uFFFDDice coefficient similarity measure for two finite sets\n\nATTENTION: The Sorensen\uFFFDDice coefficient doesn\u0027t satisfy the triangle inequality.\nThe corresponding difference function (1 - sorensenDice) is not a proper distance measure.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-similaritymetrics-set.html#tversky","title":"Set.tversky","content":"Set.tversky \ntversky \n\nComputes the Tversky index, an asymmetric similarity measure on sets that compares a variant to a prototype. \nThe Tversky index can be seen as a generalization of Sorencsen-Dice coefficient and Jaccard index.\n\nATTENTION: this is an asymmetric similarity measure. Use tverskySymmetric if symmetry is needed.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-similaritymetrics-set.html#tverskySymmetric","title":"Set.tverskySymmetric","content":"Set.tverskySymmetric \ntverskySymmetric \n\nComputes the symmetric variant of the Tversky index. https://www.aclweb.org/anthology/S13-1028\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-similaritymetrics-similarity-1.html","title":"Similarity\u003C\u0027a\u003E","content":"Similarity\u003C\u0027a\u003E \n\n Signiture type for similarity functions\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis.html","title":"SurprisalAnalysis","content":"SurprisalAnalysis \n \nSurprisalAnalysis.SAResult \nSAResult \nSurprisalAnalysis.compute \ncompute \nSurprisalAnalysis.getEnergyLandscapeData \ngetEnergyLandscapeData \nSurprisalAnalysis.getDiagonalEnergyData \ngetDiagonalEnergyData"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis.html#compute","title":"SurprisalAnalysis.compute","content":"SurprisalAnalysis.compute \ncompute \n\nperforms Surprisal Analysis on the input matrix A. For meaningfull results, A should be \nof the following form:\nThe rows contain measurements for a single unique entity,\ncorresponding to timepoints represented by the columns\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis.html#getEnergyLandscapeData","title":"SurprisalAnalysis.getEnergyLandscapeData","content":"SurprisalAnalysis.getEnergyLandscapeData \ngetEnergyLandscapeData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis.html#getDiagonalEnergyData","title":"SurprisalAnalysis.getDiagonalEnergyData","content":"SurprisalAnalysis.getDiagonalEnergyData \ngetDiagonalEnergyData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis-saresult.html","title":"SAResult","content":"SAResult \n\nSummary type for the results of applying Surprisal Analysis to a dataset\n \nSAResult.LeftSingularVecors \nLeftSingularVecors \nSAResult.RightSingularVectors \nRightSingularVectors \nSAResult.SingularValuesDiag \nSingularValuesDiag \nSAResult.SingularValues \nSingularValues \nSAResult.MolecularPhenotypes \nMolecularPhenotypes \nSAResult.Potentials \nPotentials"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis-saresult.html#LeftSingularVecors","title":"SAResult.LeftSingularVecors","content":"SAResult.LeftSingularVecors \nLeftSingularVecors \n\nleft singular vectors resulting from the thin SVD of the input matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis-saresult.html#RightSingularVectors","title":"SAResult.RightSingularVectors","content":"SAResult.RightSingularVectors \nRightSingularVectors \n\nright singular vectors resulting from the thin SVD of the input matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis-saresult.html#SingularValuesDiag","title":"SAResult.SingularValuesDiag","content":"SAResult.SingularValuesDiag \nSingularValuesDiag \n\ndiagonal matrix containing the singular values resulting from the thin SVD of the input matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis-saresult.html#SingularValues","title":"SAResult.SingularValues","content":"SAResult.SingularValues \nSingularValues \n\nVector containing the singular values resulting from the thin SVD of the input matrix in descending order\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis-saresult.html#MolecularPhenotypes","title":"SAResult.MolecularPhenotypes","content":"SAResult.MolecularPhenotypes \nMolecularPhenotypes \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-surprisalanalysis-saresult.html#Potentials","title":"SAResult.Potentials","content":"SAResult.Potentials \nPotentials \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber.html","title":"ClusterNumber","content":"ClusterNumber \n \nClusterNumber.SilhouetteResult \nSilhouetteResult \nClusterNumber.kRuleOfThumb \nkRuleOfThumb \nClusterNumber.k_ruleOfThumb \nk_ruleOfThumb \nClusterNumber.calcAIC \ncalcAIC \nClusterNumber.silhouetteIndex \nsilhouetteIndex \nClusterNumber.silhouetteIndexKMeans \nsilhouetteIndexKMeans"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber.html#kRuleOfThumb","title":"ClusterNumber.kRuleOfThumb","content":"ClusterNumber.kRuleOfThumb \nkRuleOfThumb \n\n Simple estimator for number of cluster (k) // can be used as the upper bound for other methods\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber.html#k_ruleOfThumb","title":"ClusterNumber.k_ruleOfThumb","content":"ClusterNumber.k_ruleOfThumb \nk_ruleOfThumb \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber.html#calcAIC","title":"ClusterNumber.calcAIC","content":"ClusterNumber.calcAIC \ncalcAIC \n\n Akaike Information Criterion (AIC)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber.html#silhouetteIndex","title":"ClusterNumber.silhouetteIndex","content":"ClusterNumber.silhouetteIndex \nsilhouetteIndex \n\n Calculates the silhouette score for a clustered data set where the coordinates of each data point is given as float [].\n The index ranges from -1 (bad clustering result) to 1 (perfekt clustering result)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber.html#silhouetteIndexKMeans","title":"ClusterNumber.silhouetteIndexKMeans","content":"ClusterNumber.silhouetteIndexKMeans \nsilhouetteIndexKMeans \n\n The silhouette index can be used to determine the optimal cluster number in k means clustering.\n bootstraps indicates the number the k means clustering is performed for each k and maxK indicated the maximal cluster number.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber-silhouetteresult.html","title":"SilhouetteResult","content":"SilhouetteResult \n \nSilhouetteResult.ClusterNumber \nClusterNumber \nSilhouetteResult.SilhouetteIndex \nSilhouetteIndex \nSilhouetteResult.SilhouetteIndexStDev \nSilhouetteIndexStDev"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber-silhouetteresult.html#ClusterNumber","title":"SilhouetteResult.ClusterNumber","content":"SilhouetteResult.ClusterNumber \nClusterNumber \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber-silhouetteresult.html#SilhouetteIndex","title":"SilhouetteResult.SilhouetteIndex","content":"SilhouetteResult.SilhouetteIndex \nSilhouetteIndex \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-clusternumber-silhouetteresult.html#SilhouetteIndexStDev","title":"SilhouetteResult.SilhouetteIndexStDev","content":"SilhouetteResult.SilhouetteIndexStDev \nSilhouetteIndexStDev \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan.html","title":"DbScan","content":"DbScan \n \nDbScan.DbscanFlag \nDbscanFlag \nDbScan.DbscanResult\u003C\u0027a\u003E \nDbscanResult\u003C\u0027a\u003E \nDbScan.TaggedValue\u003C\u0027a\u003E \nTaggedValue\u003C\u0027a\u003E \nDbScan.compute \ncompute"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan.html#compute","title":"DbScan.compute","content":"DbScan.compute \ncompute \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-dbscanflag.html","title":"DbscanFlag","content":"DbscanFlag \n \nDbscanFlag.None \nNone \nDbscanFlag.IsVisited \nIsVisited \nDbscanFlag.IsCore \nIsCore \nDbscanFlag.IsInCluster \nIsInCluster"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-dbscanflag.html#None","title":"DbscanFlag.None","content":"DbscanFlag.None \nNone \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-dbscanflag.html#IsVisited","title":"DbscanFlag.IsVisited","content":"DbscanFlag.IsVisited \nIsVisited \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-dbscanflag.html#IsCore","title":"DbscanFlag.IsCore","content":"DbscanFlag.IsCore \nIsCore \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-dbscanflag.html#IsInCluster","title":"DbscanFlag.IsInCluster","content":"DbscanFlag.IsInCluster \nIsInCluster \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-dbscanresult-1.html","title":"DbscanResult\u003C\u0027a\u003E","content":"DbscanResult\u003C\u0027a\u003E \n \nDbscanResult\u003C\u0027a\u003E.Clusterlist \nClusterlist \nDbscanResult\u003C\u0027a\u003E.Noisepoints \nNoisepoints"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-dbscanresult-1.html#Clusterlist","title":"DbscanResult\u003C\u0027a\u003E.Clusterlist","content":"DbscanResult\u003C\u0027a\u003E.Clusterlist \nClusterlist \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-dbscanresult-1.html#Noisepoints","title":"DbscanResult\u003C\u0027a\u003E.Noisepoints","content":"DbscanResult\u003C\u0027a\u003E.Noisepoints \nNoisepoints \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-taggedvalue-1.html","title":"TaggedValue\u003C\u0027a\u003E","content":"TaggedValue\u003C\u0027a\u003E \n \nTaggedValue\u003C\u0027a\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTaggedValue\u003C\u0027a\u003E.SetIsInCluster \nSetIsInCluster \nTaggedValue\u003C\u0027a\u003E.SetIsVisited \nSetIsVisited \nTaggedValue\u003C\u0027a\u003E.IsInCluster \nIsInCluster \nTaggedValue\u003C\u0027a\u003E.IsVisited \nIsVisited \nTaggedValue\u003C\u0027a\u003E.Value \nValue"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-taggedvalue-1.html#\u0060\u0060.ctor\u0060\u0060","title":"TaggedValue\u003C\u0027a\u003E.\u0060\u0060.ctor\u0060\u0060","content":"TaggedValue\u003C\u0027a\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-taggedvalue-1.html#SetIsInCluster","title":"TaggedValue\u003C\u0027a\u003E.SetIsInCluster","content":"TaggedValue\u003C\u0027a\u003E.SetIsInCluster \nSetIsInCluster \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-taggedvalue-1.html#SetIsVisited","title":"TaggedValue\u003C\u0027a\u003E.SetIsVisited","content":"TaggedValue\u003C\u0027a\u003E.SetIsVisited \nSetIsVisited \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-taggedvalue-1.html#IsInCluster","title":"TaggedValue\u003C\u0027a\u003E.IsInCluster","content":"TaggedValue\u003C\u0027a\u003E.IsInCluster \nIsInCluster \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-taggedvalue-1.html#IsVisited","title":"TaggedValue\u003C\u0027a\u003E.IsVisited","content":"TaggedValue\u003C\u0027a\u003E.IsVisited \nIsVisited \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-dbscan-taggedvalue-1.html#Value","title":"TaggedValue\u003C\u0027a\u003E.Value","content":"TaggedValue\u003C\u0027a\u003E.Value \nValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics.html","title":"GapStatistics","content":"GapStatistics \n \nGapStatistics.ClusterDispersionMetric \nClusterDispersionMetric \nGapStatistics.PointGenerators \nPointGenerators \nGapStatistics.GapStatisticResult \nGapStatisticResult \nGapStatistics.GenericClusterDispersion\u003C\u0027a\u003E \nGenericClusterDispersion\u003C\u0027a\u003E \nGapStatistics.GenericPointGenerator\u003C\u0027a\u003E \nGenericPointGenerator\u003C\u0027a\u003E \nGapStatistics.createGapStatisticResult \ncreateGapStatisticResult \nGapStatistics.dispersion \ndispersion \nGapStatistics.referenceDispersion \nreferenceDispersion \nGapStatistics.calculate \ncalculate"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics.html#createGapStatisticResult","title":"GapStatistics.createGapStatisticResult","content":"GapStatistics.createGapStatisticResult \ncreateGapStatisticResult \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics.html#dispersion","title":"GapStatistics.dispersion","content":"GapStatistics.dispersion \ndispersion \n\n Not used.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics.html#referenceDispersion","title":"GapStatistics.referenceDispersion","content":"GapStatistics.referenceDispersion \nreferenceDispersion \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics.html#calculate","title":"GapStatistics.calculate","content":"GapStatistics.calculate \ncalculate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-clusterdispersionmetric.html","title":"ClusterDispersionMetric","content":"ClusterDispersionMetric \n \nClusterDispersionMetric.logDispersionKMeansInitRandom \nlogDispersionKMeansInitRandom \nClusterDispersionMetric.logDispersionKMeans_initRandom \nlogDispersionKMeans_initRandom \nClusterDispersionMetric.logDispersionKMeansInitCvMax \nlogDispersionKMeansInitCvMax \nClusterDispersionMetric.logDispersionKMeans_initCvMax \nlogDispersionKMeans_initCvMax"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-clusterdispersionmetric.html#logDispersionKMeansInitRandom","title":"ClusterDispersionMetric.logDispersionKMeansInitRandom","content":"ClusterDispersionMetric.logDispersionKMeansInitRandom \nlogDispersionKMeansInitRandom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-clusterdispersionmetric.html#logDispersionKMeans_initRandom","title":"ClusterDispersionMetric.logDispersionKMeans_initRandom","content":"ClusterDispersionMetric.logDispersionKMeans_initRandom \nlogDispersionKMeans_initRandom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-clusterdispersionmetric.html#logDispersionKMeansInitCvMax","title":"ClusterDispersionMetric.logDispersionKMeansInitCvMax","content":"ClusterDispersionMetric.logDispersionKMeansInitCvMax \nlogDispersionKMeansInitCvMax \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-clusterdispersionmetric.html#logDispersionKMeans_initCvMax","title":"ClusterDispersionMetric.logDispersionKMeans_initCvMax","content":"ClusterDispersionMetric.logDispersionKMeans_initCvMax \nlogDispersionKMeans_initCvMax \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-pointgenerators.html","title":"PointGenerators","content":"PointGenerators \n \nPointGenerators.generateUniformPoints \ngenerateUniformPoints \nPointGenerators.generate_uniform_points \ngenerate_uniform_points \nPointGenerators.generateUniformPointsPCA \ngenerateUniformPointsPCA \nPointGenerators.generate_uniform_points_PCA \ngenerate_uniform_points_PCA"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-pointgenerators.html#generateUniformPoints","title":"PointGenerators.generateUniformPoints","content":"PointGenerators.generateUniformPoints \ngenerateUniformPoints \n\n Generate uniform points within the range of \u0060data\u0060.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-pointgenerators.html#generate_uniform_points","title":"PointGenerators.generate_uniform_points","content":"PointGenerators.generate_uniform_points \ngenerate_uniform_points \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-pointgenerators.html#generateUniformPointsPCA","title":"PointGenerators.generateUniformPointsPCA","content":"PointGenerators.generateUniformPointsPCA \ngenerateUniformPointsPCA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-pointgenerators.html#generate_uniform_points_PCA","title":"PointGenerators.generate_uniform_points_PCA","content":"PointGenerators.generate_uniform_points_PCA \ngenerate_uniform_points_PCA \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-gapstatisticresult.html","title":"GapStatisticResult","content":"GapStatisticResult \n \nGapStatisticResult.ClusterIndex \nClusterIndex \nGapStatisticResult.Dispersion \nDispersion \nGapStatisticResult.ReferenceDispersion \nReferenceDispersion \nGapStatisticResult.RefDispersionStDev \nRefDispersionStDev \nGapStatisticResult.Gaps \nGaps"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-gapstatisticresult.html#ClusterIndex","title":"GapStatisticResult.ClusterIndex","content":"GapStatisticResult.ClusterIndex \nClusterIndex \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-gapstatisticresult.html#Dispersion","title":"GapStatisticResult.Dispersion","content":"GapStatisticResult.Dispersion \nDispersion \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-gapstatisticresult.html#ReferenceDispersion","title":"GapStatisticResult.ReferenceDispersion","content":"GapStatisticResult.ReferenceDispersion \nReferenceDispersion \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-gapstatisticresult.html#RefDispersionStDev","title":"GapStatisticResult.RefDispersionStDev","content":"GapStatisticResult.RefDispersionStDev \nRefDispersionStDev \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-gapstatisticresult.html#Gaps","title":"GapStatisticResult.Gaps","content":"GapStatisticResult.Gaps \nGaps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-genericclusterdispersion-1.html","title":"GenericClusterDispersion\u003C\u0027a\u003E","content":"GenericClusterDispersion\u003C\u0027a\u003E \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-gapstatistics-genericpointgenerator-1.html","title":"GenericPointGenerator\u003C\u0027a\u003E","content":"GenericPointGenerator\u003C\u0027a\u003E \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html","title":"HierarchicalClustering","content":"HierarchicalClustering \n\n Agglomerative hierarchical clustering\n \nHierarchicalClustering.Linker \nLinker \nHierarchicalClustering.Cluster\u003C\u0027T\u003E \nCluster\u003C\u0027T\u003E \nHierarchicalClustering.DistanceCaching\u003C\u0027T\u003E \nDistanceCaching\u003C\u0027T\u003E \nHierarchicalClustering.getClusterId \ngetClusterId \nHierarchicalClustering.tryGetLeafValue \ntryGetLeafValue \nHierarchicalClustering.createCluster \ncreateCluster \nHierarchicalClustering.createClusterValue \ncreateClusterValue \nHierarchicalClustering.getDistancesOfCluster \ngetDistancesOfCluster \nHierarchicalClustering.getLeafsOfCluster \ngetLeafsOfCluster \nHierarchicalClustering.aggregateClusterByDistance \naggregateClusterByDistance \nHierarchicalClustering.aggregateClusterBy \naggregateClusterBy \nHierarchicalClustering.mapClusterLeaftags \nmapClusterLeaftags \nHierarchicalClustering.generate \ngenerate \nHierarchicalClustering.getClusterMemberLabels \ngetClusterMemberLabels \nHierarchicalClustering.flattenHClust \nflattenHClust \nHierarchicalClustering.cutHClust \ncutHClust \nHierarchicalClustering.printHClust \nprintHClust"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#getClusterId","title":"HierarchicalClustering.getClusterId","content":"HierarchicalClustering.getClusterId \ngetClusterId \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#tryGetLeafValue","title":"HierarchicalClustering.tryGetLeafValue","content":"HierarchicalClustering.tryGetLeafValue \ntryGetLeafValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#createCluster","title":"HierarchicalClustering.createCluster","content":"HierarchicalClustering.createCluster \ncreateCluster \n\n Create a cluster Node containing the two given subbranches\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#createClusterValue","title":"HierarchicalClustering.createClusterValue","content":"HierarchicalClustering.createClusterValue \ncreateClusterValue \n\n Create a cluster Leaf\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#getDistancesOfCluster","title":"HierarchicalClustering.getDistancesOfCluster","content":"HierarchicalClustering.getDistancesOfCluster \ngetDistancesOfCluster \n\nReturns a list of the distances between the subclusters\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#getLeafsOfCluster","title":"HierarchicalClustering.getLeafsOfCluster","content":"HierarchicalClustering.getLeafsOfCluster \ngetLeafsOfCluster \n\nReturns a list of the leaf names\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#aggregateClusterByDistance","title":"HierarchicalClustering.aggregateClusterByDistance","content":"HierarchicalClustering.aggregateClusterByDistance \naggregateClusterByDistance \n\n Aggregates the subbranches of a node to leafs, if the distance between them is smaller than the given distanceCutoff\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#aggregateClusterBy","title":"HierarchicalClustering.aggregateClusterBy","content":"HierarchicalClustering.aggregateClusterBy \naggregateClusterBy \n\n Aggregates the subbranches of a node to leafs, if the predicate function taking the distance and the number of subLeafs returns true\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#mapClusterLeaftags","title":"HierarchicalClustering.mapClusterLeaftags","content":"HierarchicalClustering.mapClusterLeaftags \nmapClusterLeaftags \n\n Maps the tags of the leafs of the cluster by applying a given mapping function\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#generate","title":"HierarchicalClustering.generate","content":"HierarchicalClustering.generate \ngenerate \n\n Builds a hierarchy of clusters of data containing cluster labels\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#getClusterMemberLabels","title":"HierarchicalClustering.getClusterMemberLabels","content":"HierarchicalClustering.getClusterMemberLabels \ngetClusterMemberLabels \n\n Returns a list of all IDs in the cluster\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#flattenHClust","title":"HierarchicalClustering.flattenHClust","content":"HierarchicalClustering.flattenHClust \nflattenHClust \n\n Returns a flatten list containing Leafs\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#cutHClust","title":"HierarchicalClustering.cutHClust","content":"HierarchicalClustering.cutHClust \ncutHClust \n\n Cuts a tree, as resulting from hclust, into several groups by specifying the desired number(s).\n If the desired number is odd the function cut the cluster with maximal distance\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering.html#printHClust","title":"HierarchicalClustering.printHClust","content":"HierarchicalClustering.printHClust \nprintHClust \n\n Converts clusters into string seq\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-linker.html","title":"Linker","content":"Linker \n\n The linkage criterion determines the distance between sets of observations as a function of the pairwise distances between observations\n \nLinker.LancWilliamsLinker \nLancWilliamsLinker \nLinker.singleLwLinker \nsingleLwLinker \nLinker.completeLwLinker \ncompleteLwLinker \nLinker.medianLwLinker \nmedianLwLinker \nLinker.weightedGroupAverageLwLinker \nweightedGroupAverageLwLinker \nLinker.upgmaLwLinker \nupgmaLwLinker \nLinker.centroidLwLinker \ncentroidLwLinker \nLinker.wardLwLinker \nwardLwLinker"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-linker.html#singleLwLinker","title":"Linker.singleLwLinker","content":"Linker.singleLwLinker \nsingleLwLinker \n\n Single linkage criterion\n Calculates the minimal distance between all elements of a cluster\n d(A u B, C)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-linker.html#completeLwLinker","title":"Linker.completeLwLinker","content":"Linker.completeLwLinker \ncompleteLwLinker \n\n Complete linkage criterion\n Calculates the \n d(A u B, C)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-linker.html#medianLwLinker","title":"Linker.medianLwLinker","content":"Linker.medianLwLinker \nmedianLwLinker \n\n Median linkage criterion\n Calculates the \n d(A u B, C)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-linker.html#weightedGroupAverageLwLinker","title":"Linker.weightedGroupAverageLwLinker","content":"Linker.weightedGroupAverageLwLinker \nweightedGroupAverageLwLinker \n\n Weighted Group Average linkage criterion\n Calculates the \n d(A u B, C)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-linker.html#upgmaLwLinker","title":"Linker.upgmaLwLinker","content":"Linker.upgmaLwLinker \nupgmaLwLinker \n\n Unweighted Group Average linkage criterion (UPGMA)\n Calculates the \n d(A u B, C)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-linker.html#centroidLwLinker","title":"Linker.centroidLwLinker","content":"Linker.centroidLwLinker \ncentroidLwLinker \n\n Centroid linkage criterion (UPGMA)\n Calculates the \n d(A u B, C)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-linker.html#wardLwLinker","title":"Linker.wardLwLinker","content":"Linker.wardLwLinker \nwardLwLinker \n\n Ward linkage criterion (UPGMA)\n Calculates the \n d(A u B, C)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-linker-lancwilliamslinker.html","title":"LancWilliamsLinker","content":"LancWilliamsLinker \n\n Signiture type for Lance and Williams Linker functions\n D(A u B,C) = alpa1 d(A,C) \u002B  alpa2 d(B,C) \u002B beta d(A,B) \u002B gamma |d(A,C) - d(BC))|\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-cluster-1.html","title":"Cluster\u003C\u0027T\u003E","content":"Cluster\u003C\u0027T\u003E \n\n Binary distance tree\n \nCluster\u003C\u0027T\u003E.Node \nNode \nCluster\u003C\u0027T\u003E.Leaf \nLeaf"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-cluster-1.html#Node","title":"Cluster\u003C\u0027T\u003E.Node","content":"Cluster\u003C\u0027T\u003E.Node \nNode \n\nID * distance * leafCount * cluster left * cluster right\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-cluster-1.html#Leaf","title":"Cluster\u003C\u0027T\u003E.Leaf","content":"Cluster\u003C\u0027T\u003E.Leaf \nLeaf \n\nID * leafCount * Tag\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-distancecaching-1.html","title":"DistanceCaching\u003C\u0027T\u003E","content":"DistanceCaching\u003C\u0027T\u003E \n\n Class for chaching already calculated distances to speed up cluster build\n \nDistanceCaching\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDistanceCaching\u003C\u0027T\u003E.calcDistance \ncalcDistance"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-distancecaching-1.html#\u0060\u0060.ctor\u0060\u0060","title":"DistanceCaching\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"DistanceCaching\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-hierarchicalclustering-distancecaching-1.html#calcDistance","title":"DistanceCaching\u003C\u0027T\u003E.calcDistance","content":"DistanceCaching\u003C\u0027T\u003E.calcDistance \ncalcDistance \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html","title":"IterativeClustering","content":"IterativeClustering \n \nIterativeClustering.CentroidsFactory\u003C\u0027a\u003E \nCentroidsFactory\u003C\u0027a\u003E \nIterativeClustering.KClusteringResult\u003C\u0027a\u003E \nKClusteringResult\u003C\u0027a\u003E \nIterativeClustering.ToCentroid\u003C\u0027a\u003E \nToCentroid\u003C\u0027a\u003E \nIterativeClustering.createKClusteringResult \ncreateKClusteringResult \nIterativeClustering.randomCentroids \nrandomCentroids \nIterativeClustering.initCVMAX \ninitCVMAX \nIterativeClustering.avgCentroid \navgCentroid \nIterativeClustering.compute \ncompute \nIterativeClustering.kmeans \nkmeans \nIterativeClustering.nearest \nnearest \nIterativeClustering.nearestDistance \nnearestDistance \nIterativeClustering.Dispersion \nDispersion \nIterativeClustering.DispersionOfClusterResult \nDispersionOfClusterResult"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#createKClusteringResult","title":"IterativeClustering.createKClusteringResult","content":"IterativeClustering.createKClusteringResult \ncreateKClusteringResult \n\n Creates a k-clustering  result\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#randomCentroids","title":"IterativeClustering.randomCentroids","content":"IterativeClustering.randomCentroids \nrandomCentroids \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#initCVMAX","title":"IterativeClustering.initCVMAX","content":"IterativeClustering.initCVMAX \ninitCVMAX \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#avgCentroid","title":"IterativeClustering.avgCentroid","content":"IterativeClustering.avgCentroid \navgCentroid \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#compute","title":"IterativeClustering.compute","content":"IterativeClustering.compute \ncompute \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#kmeans","title":"IterativeClustering.kmeans","content":"IterativeClustering.kmeans \nkmeans \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#nearest","title":"IterativeClustering.nearest","content":"IterativeClustering.nearest \nnearest \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#nearestDistance","title":"IterativeClustering.nearestDistance","content":"IterativeClustering.nearestDistance \nnearestDistance \n\n Calculates the distance from the data point to the centroid \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#Dispersion","title":"IterativeClustering.Dispersion","content":"IterativeClustering.Dispersion \nDispersion \n\n Calculates the average squared distance from the data points\n to the cluster centroid (also refered to as error)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering.html#DispersionOfClusterResult","title":"IterativeClustering.DispersionOfClusterResult","content":"IterativeClustering.DispersionOfClusterResult \nDispersionOfClusterResult \n\n Calculates the average squared distance from the data points\n to the cluster centroid (also refered to as error)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering-centroidsfactory-1.html","title":"CentroidsFactory\u003C\u0027a\u003E","content":"CentroidsFactory\u003C\u0027a\u003E \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering-kclusteringresult-1.html","title":"KClusteringResult\u003C\u0027a\u003E","content":"KClusteringResult\u003C\u0027a\u003E \n\n Result of a kmeans clustering\n \nKClusteringResult\u003C\u0027a\u003E.Centroids \nCentroids \nKClusteringResult\u003C\u0027a\u003E.Classifier \nClassifier \nKClusteringResult\u003C\u0027a\u003E.ClosestDistances \nClosestDistances \nKClusteringResult\u003C\u0027a\u003E.DistanceMetric \nDistanceMetric"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering-kclusteringresult-1.html#Centroids","title":"KClusteringResult\u003C\u0027a\u003E.Centroids","content":"KClusteringResult\u003C\u0027a\u003E.Centroids \nCentroids \n\n Centroids with index and data\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering-kclusteringresult-1.html#Classifier","title":"KClusteringResult\u003C\u0027a\u003E.Classifier","content":"KClusteringResult\u003C\u0027a\u003E.Classifier \nClassifier \n\n Classifier function returns cluster index and centroid\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering-kclusteringresult-1.html#ClosestDistances","title":"KClusteringResult\u003C\u0027a\u003E.ClosestDistances","content":"KClusteringResult\u003C\u0027a\u003E.ClosestDistances \nClosestDistances \n\n Indices and Distances to closest centroid\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering-kclusteringresult-1.html#DistanceMetric","title":"KClusteringResult\u003C\u0027a\u003E.DistanceMetric","content":"KClusteringResult\u003C\u0027a\u003E.DistanceMetric \nDistanceMetric \n\n Used distance metric\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-iterativeclustering-tocentroid-1.html","title":"ToCentroid\u003C\u0027a\u003E","content":"ToCentroid\u003C\u0027a\u003E \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-pca.html","title":"PCA","content":"PCA \n\n Principle component analysis \n \nPCA.PCA \nPCA \nPCA.center \ncenter \nPCA.compute \ncompute"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-pca.html#center","title":"PCA.center","content":"PCA.center \ncenter \n\n Normalizes each feature by substracting the corresponing mean followed by a division by its standard deviation.\n The centered features of the matrix are centered around 0 and possess a standard deviation of 1.\n Expects a data matrix with rows representing observations and columns representing features.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-pca.html#compute","title":"PCA.compute","content":"PCA.compute \ncompute \n\n Computes the PCA of a column centered data matrix m.\n Expects a column centered data matrix m, with rows representing observations (a.k.a. samples) and columns representing features.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-pca-pca.html","title":"PCA","content":"PCA \n \nPCA.VarianceOfComponent \nVarianceOfComponent \nPCA.VarExplainedByComponentIndividual \nVarExplainedByComponentIndividual \nPCA.VarExplainedByComponentCumulative \nVarExplainedByComponentCumulative \nPCA.PrincipalComponents \nPrincipalComponents \nPCA.Loadings \nLoadings"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-pca-pca.html#VarianceOfComponent","title":"PCA.VarianceOfComponent","content":"PCA.VarianceOfComponent \nVarianceOfComponent \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-pca-pca.html#VarExplainedByComponentIndividual","title":"PCA.VarExplainedByComponentIndividual","content":"PCA.VarExplainedByComponentIndividual \nVarExplainedByComponentIndividual \n\nVariance explained by principal components\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-pca-pca.html#VarExplainedByComponentCumulative","title":"PCA.VarExplainedByComponentCumulative","content":"PCA.VarExplainedByComponentCumulative \nVarExplainedByComponentCumulative \n\nCumulative Variance explained by principal components \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-pca-pca.html#PrincipalComponents","title":"PCA.PrincipalComponents","content":"PCA.PrincipalComponents \nPrincipalComponents \n\nMatrix with columns representing individual principal components (\u0022raw\u0022 principal components, projections on principal directions) and rows representing samples.\nAlso reffered to as \u0022scores\u0022. Corresponds to the attribute \u0022x\u0022 of the result object of Rs prcomp() function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-ml-unsupervised-pca-pca.html#Loadings","title":"PCA.Loadings","content":"PCA.Loadings \nLoadings \n\nMatrix with columns representing component loadings and rows individual features. \nCorresponds to the attribute \u0022rotation\u0022 of the result object of Rs prcomp() function.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization-bisection.html","title":"Bisection","content":"Bisection \n \nBisection.tryFindRoot \ntryFindRoot"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization-bisection.html#tryFindRoot","title":"Bisection.tryFindRoot","content":"Bisection.tryFindRoot \ntryFindRoot \n\nFinds the value in an interval for which a given function returns a value close to 0 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization-brent.html","title":"Brent","content":"Brent \n \nBrent.minimizeWith \nminimizeWith \nBrent.minimize \nminimize \nBrent.maximizeWith \nmaximizeWith \nBrent.maximize \nmaximize"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization-brent.html#minimizeWith","title":"Brent.minimizeWith","content":"Brent.minimizeWith \nminimizeWith \n\n Finds the minimum in the given function between the lower and upper boundary with given tolerance via brent search. Returns None if maxiterations are reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization-brent.html#minimize","title":"Brent.minimize","content":"Brent.minimize \nminimize \n\n Finds the minimum in the given function between the lower and upper boundary with tolerance 10^-7 via brent search. Returns None if 100 iterations are reached.   \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization-brent.html#maximizeWith","title":"Brent.maximizeWith","content":"Brent.maximizeWith \nmaximizeWith \n\n Finds the maximum in the given function between the lower and upper boundary with given tolerance via brent search. Returns None if maxiterations are reached.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization-brent.html#maximize","title":"Brent.maximize","content":"Brent.maximize \nmaximize \n\n Finds the maximum in the given function between the lower and upper boundary with tolerance 10^-7 via brent search. Returns None if 100 iterations are reached.   \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization-gradientdescent.html","title":"GradientDescent","content":"GradientDescent \n \nGradientDescent.eps \neps"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-optimization-gradientdescent.html#eps","title":"GradientDescent.eps","content":"GradientDescent.eps \neps \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rootfinding-brent.html","title":"Brent","content":"Brent \n \nBrent.tryFindRootWith \ntryFindRootWith \nBrent.tryFindRoot \ntryFindRoot"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rootfinding-brent.html#tryFindRootWith","title":"Brent.tryFindRootWith","content":"Brent.tryFindRootWith \ntryFindRootWith \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-rootfinding-brent.html#tryFindRoot","title":"Brent.tryFindRoot","content":"Brent.tryFindRoot \ntryFindRoot \n\n Convergence is reached, return root\n accuracy is not sufficient to reach a root \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-baseline.html","title":"Baseline","content":"Baseline \n \nBaseline.diag \ndiag \nBaseline.diff \ndiff \nBaseline.baselineAls \nbaselineAls \nBaseline.baselineAls\u0027 \nbaselineAls\u0027"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-baseline.html#diag","title":"Baseline.diag","content":"Baseline.diag \ndiag \n\n Creates a diagonal 2-D array with the given order and set all diagonal values to x\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-baseline.html#diff","title":"Baseline.diff","content":"Baseline.diff \ndiff \n\n Calculate the n-th order discrete difference along given axis.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-baseline.html#baselineAls","title":"Baseline.baselineAls","content":"Baseline.baselineAls \nbaselineAls \n\n Asymmetric Least Squares Smoothing by P. Eilers and H. Boelens in 2005\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-baseline.html#baselineAls\u0027","title":"Baseline.baselineAls\u0027","content":"Baseline.baselineAls\u0027 \nbaselineAls\u0027 \n\n Asymmetric Least Squares Smoothing using sparse Matrix\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet.html","title":"ContinuousWavelet","content":"ContinuousWavelet \n\nContinuous wavelet transform on non discrete data\n \nContinuousWavelet.Discrete \nDiscrete \nContinuousWavelet.HelperFunctions \nHelperFunctions \nContinuousWavelet.transform \ntransform \nContinuousWavelet.transformDefault \ntransformDefault \nContinuousWavelet.transformDefaultZero \ntransformDefaultZero"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet.html#transform","title":"ContinuousWavelet.transform","content":"ContinuousWavelet.transform \ntransform \n\ncalculates the continuous wavelet transform: \ndata: data to transform (x_Value,y_Value) [];\ngetDiff: get the difference in x_Values as float representation (if \u0027a is float then (-))\nborderpadding: define the number of points padded to the beginning and end of the data (has to be the same as used in padding)\nwavelet: used wavelet\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet.html#transformDefault","title":"ContinuousWavelet.transformDefault","content":"ContinuousWavelet.transformDefault \ntransformDefault \n\nminDistance is half the median spacing; maxDistance is 10 times the median spacing; internal padding=linear interpolation; hugeGap padding=random\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet.html#transformDefaultZero","title":"ContinuousWavelet.transformDefaultZero","content":"ContinuousWavelet.transformDefaultZero \ntransformDefaultZero \n\nminDistance is half the overall minimum spacing; maxDistance is infinity; internal padding=zero; hugeGap padding=zero (but redundant)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-discrete.html","title":"Discrete","content":"Discrete \n \nDiscrete.ThreeDimensional \nThreeDimensional \nDiscrete.transform \ntransform"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-discrete.html#transform","title":"Discrete.transform","content":"Discrete.transform \ntransform \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-discrete-threedimensional.html","title":"ThreeDimensional","content":"ThreeDimensional \n \nThreeDimensional.transform \ntransform"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-discrete-threedimensional.html#transform","title":"ThreeDimensional.transform","content":"ThreeDimensional.transform \ntransform \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-helperfunctions.html","title":"HelperFunctions","content":"HelperFunctions \n \nHelperFunctions.Float \nFloat \nHelperFunctions.Int \nInt \nHelperFunctions.Time \nTime"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-helperfunctions-float.html","title":"Float","content":"Float \n \nFloat.getDiffFloat \ngetDiffFloat"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-helperfunctions-float.html#getDiffFloat","title":"Float.getDiffFloat","content":"Float.getDiffFloat \ngetDiffFloat \n\ngetDiff: calculates the difference of the two events (-)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-helperfunctions-int.html","title":"Int","content":"Int \n \nInt.getDiffInt \ngetDiffInt"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-helperfunctions-int.html#getDiffInt","title":"Int.getDiffInt","content":"Int.getDiffInt \ngetDiffInt \n\ngetDiff: calculates the difference of the two events\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-helperfunctions-time.html","title":"Time","content":"Time \n \nTime.getDiffMinutes \ngetDiffMinutes"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-continuouswavelet-helperfunctions-time.html#getDiffMinutes","title":"Time.getDiffMinutes","content":"Time.getDiffMinutes \ngetDiffMinutes \n\ngetDiff: calculates the time span between the two events as total minutes (float)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-convolution.html","title":"Convolution","content":"Convolution \n \nConvolution.convolve \nconvolve"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-convolution.html#convolve","title":"Convolution.convolve","content":"Convolution.convolve \nconvolve \n\n Computes a complete non-circular convolution of x and y. This function does not use\n the fast fourier transformation to calculate the convolution and can be slow if x and y are large.\n This function does not perform a padding of x and y. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-fft.html","title":"FFT","content":"FFT \n\n FFT analysis converts a signal from its original domain (often time or space) to a representation in the frequency domain and vice versa.\n \nFFT.forwardInPlace \nforwardInPlace \nFFT.inverseInPlace \ninverseInPlace \nFFT.asymmetricScalingInPlace \nasymmetricScalingInPlace \nFFT.symmetricScalingInPlace \nsymmetricScalingInPlace \nFFT.inverseAsymmetricScalingInPlace \ninverseAsymmetricScalingInPlace \nFFT.inverseSymmetricScalingInPlace \ninverseSymmetricScalingInPlace"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-fft.html#forwardInPlace","title":"FFT.forwardInPlace","content":"FFT.forwardInPlace \nforwardInPlace \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-fft.html#inverseInPlace","title":"FFT.inverseInPlace","content":"FFT.inverseInPlace \ninverseInPlace \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-fft.html#asymmetricScalingInPlace","title":"FFT.asymmetricScalingInPlace","content":"FFT.asymmetricScalingInPlace \nasymmetricScalingInPlace \n\n No scaling in forward direction.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-fft.html#symmetricScalingInPlace","title":"FFT.symmetricScalingInPlace","content":"FFT.symmetricScalingInPlace \nsymmetricScalingInPlace \n\n Universal; Symmetric scaling and common exponent (used in Maple) Default InverseExponent\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-fft.html#inverseAsymmetricScalingInPlace","title":"FFT.inverseAsymmetricScalingInPlace","content":"FFT.inverseAsymmetricScalingInPlace \ninverseAsymmetricScalingInPlace \n\n Only scale by 1/N in the inverse direction; No scaling in forward direction.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-fft.html#inverseSymmetricScalingInPlace","title":"FFT.inverseSymmetricScalingInPlace","content":"FFT.inverseSymmetricScalingInPlace \ninverseSymmetricScalingInPlace \n\n Universal; Symmetric scaling and common exponent (used in Maple) Default\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-filtering.html","title":"Filtering","content":"Filtering \n \nFiltering.savitzkyGolay \nsavitzkyGolay \nFiltering.savitzky_golay \nsavitzky_golay \nFiltering.optimizeWindowWidth \noptimizeWindowWidth"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-filtering.html#savitzkyGolay","title":"Filtering.savitzkyGolay","content":"Filtering.savitzkyGolay \nsavitzkyGolay \n\n Smooth (and optionally differentiate) data with a Savitzky-Golay filter.\n The Savitzky-Golay filter is a type of low-pass filter and removes high frequency noise from data.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-filtering.html#savitzky_golay","title":"Filtering.savitzky_golay","content":"Filtering.savitzky_golay \nsavitzky_golay \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-filtering.html#optimizeWindowWidth","title":"Filtering.optimizeWindowWidth","content":"Filtering.optimizeWindowWidth \noptimizeWindowWidth \n\n Estimates the autocorrelation at lag 1 of a blank signal (containing only noise). Subsequently, the signal of interest is smoothed\n several times by a savitzky golay filter using constant polynomial order and variing windowWidth. For each iteration, the deviation\n of the smoothed to the original signal is computed and the autocorrelation at lag 1 of this residual noise is computed. The function returns the optimized\n window width yielding a autocorrelation at lag 1 closest to the value computed for the blank signal.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization.html","title":"Normalization","content":"Normalization \n \nNormalization.MorResult \nMorResult \nNormalization.zScoreTransformPopulation \nzScoreTransformPopulation \nNormalization.zScoreTransform \nzScoreTransform \nNormalization.medianOfRatiosBy \nmedianOfRatiosBy \nNormalization.medianOfRatios \nmedianOfRatios \nNormalization.medianOfRatiosWideBy \nmedianOfRatiosWideBy \nNormalization.medianOfRatiosWide \nmedianOfRatiosWide \nNormalization.quantile \nquantile"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization.html#zScoreTransformPopulation","title":"Normalization.zScoreTransformPopulation","content":"Normalization.zScoreTransformPopulation \nzScoreTransformPopulation \n\n z normalization using the population standard deviation\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization.html#zScoreTransform","title":"Normalization.zScoreTransform","content":"Normalization.zScoreTransform \nzScoreTransform \n\n z normalization using the sample standard deviation\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization.html#medianOfRatiosBy","title":"Normalization.medianOfRatiosBy","content":"Normalization.medianOfRatiosBy \nmedianOfRatiosBy \n\n As used by Deseq2, see: https://github.com/hbctraining/DGE_workshop/blob/master/lessons/02_DGE_count_normalization.md \n\n Rows are genes, columns are samples\n\n The additional function is applied on all values of the matrix when calculating the normalization factors. By this, a zero in the original dataset will still remain zero.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization.html#medianOfRatios","title":"Normalization.medianOfRatios","content":"Normalization.medianOfRatios \nmedianOfRatios \n\n As used by Deseq2, see: https://github.com/hbctraining/DGE_workshop/blob/master/lessons/02_DGE_count_normalization.md \n\n Rows are genes, columns are samples\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization.html#medianOfRatiosWideBy","title":"Normalization.medianOfRatiosWideBy","content":"Normalization.medianOfRatiosWideBy \nmedianOfRatiosWideBy \n\n As used by Deseq2, see: https://github.com/hbctraining/DGE_workshop/blob/master/lessons/02_DGE_count_normalization.md \n\n Columns are genes, rows are samples\n\n The additional function is applied on all values of the matrix when calculating the normalization factors. By this, a zero in the original dataset will still remain zero.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization.html#medianOfRatiosWide","title":"Normalization.medianOfRatiosWide","content":"Normalization.medianOfRatiosWide \nmedianOfRatiosWide \n\n As used by Deseq2, see: https://github.com/hbctraining/DGE_workshop/blob/master/lessons/02_DGE_count_normalization.md \n\n Columns are genes, rows are samples\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization.html#quantile","title":"Normalization.quantile","content":"Normalization.quantile \nquantile \n\n Quantile normalization with equal number of elements for each sample.\n\n Rows are genes, columns are samples\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization-morresult.html","title":"MorResult","content":"MorResult \n\n Summary of the median of ratios (mor) normalization with normed data and determined correctionfactors.\n \nMorResult.Create \nCreate \nMorResult.CorrFactors \nCorrFactors \nMorResult.NormedData \nNormedData"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization-morresult.html#Create","title":"MorResult.Create","content":"MorResult.Create \nCreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization-morresult.html#CorrFactors","title":"MorResult.CorrFactors","content":"MorResult.CorrFactors \nCorrFactors \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-normalization-morresult.html#NormedData","title":"MorResult.NormedData","content":"MorResult.NormedData \nNormedData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-outliers.html","title":"Outliers","content":"Outliers \n \nOutliers.tukey \ntukey \nOutliers.zScore \nzScore \nOutliers.zScoresOfPopulation \nzScoresOfPopulation \nOutliers.populationIntervalByZScore \npopulationIntervalByZScore \nOutliers.zScoresOfSample \nzScoresOfSample \nOutliers.sampleIntervalByZscore \nsampleIntervalByZscore \nOutliers.mahalanobisDistanceOfEntry \nmahalanobisDistanceOfEntry \nOutliers.mahalanobisDistances \nmahalanobisDistances"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-outliers.html#tukey","title":"Outliers.tukey","content":"Outliers.tukey \ntukey \n\n Tukey\u0027s fences based on interquartile range. c defines the magnitude of interquartile range that is added/subtracted to Q3 and Q1 respectively.\n Commonly c is 1.5 for outliers and 3 for points \u0027far out\u0027 (Tukey 1977).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-outliers.html#zScore","title":"Outliers.zScore","content":"Outliers.zScore \nzScore \n\n Returns Z Score for an individual point. \n x - raw score(raw data)\n m - mean of the population\n s - standard deviation of the population\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-outliers.html#zScoresOfPopulation","title":"Outliers.zScoresOfPopulation","content":"Outliers.zScoresOfPopulation \nzScoresOfPopulation \n\nReturns a list of Z scores of a population\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-outliers.html#populationIntervalByZScore","title":"Outliers.populationIntervalByZScore","content":"Outliers.populationIntervalByZScore \npopulationIntervalByZScore \n\nReturns a population interval according to desired max and min Z Score values    \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-outliers.html#zScoresOfSample","title":"Outliers.zScoresOfSample","content":"Outliers.zScoresOfSample \nzScoresOfSample \n\nReturns a list of Z scores of a sample\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-outliers.html#sampleIntervalByZscore","title":"Outliers.sampleIntervalByZscore","content":"Outliers.sampleIntervalByZscore \nsampleIntervalByZscore \n\nReturns a sample interval according to desired max and min Z Score values    \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-outliers.html#mahalanobisDistanceOfEntry","title":"Outliers.mahalanobisDistanceOfEntry","content":"Outliers.mahalanobisDistanceOfEntry \nmahalanobisDistanceOfEntry \n\nReturns Mahalanobi\u0027s distance for an individual observation in a matrix.\ndataSource - Sample or Population.\norientation - RowWise or ColWise.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-outliers.html#mahalanobisDistances","title":"Outliers.mahalanobisDistances","content":"Outliers.mahalanobisDistances \nmahalanobisDistances \n\nReturns Mahalanobi\u0027s distance for for every observation in a matrix.\ndataSource - Sample or Population.\norientation - RowWise or ColWise. (RowWise orientation means that each row is a Vector) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding.html","title":"Padding","content":"Padding \n\npadds data points to the beginning, the end and on internal intervals of the data\n \nPadding.Discrete \nDiscrete \nPadding.HelperFunctions \nHelperFunctions \nPadding.BorderPaddingMethod \nBorderPaddingMethod \nPadding.HugeGapPaddingMethod \nHugeGapPaddingMethod \nPadding.InternalPaddingMethod \nInternalPaddingMethod \nPadding.pad \npad \nPadding.padSignalStartAndEnd \npadSignalStartAndEnd \nPadding.padSignalStart \npadSignalStart \nPadding.padSignalEnd \npadSignalEnd \nPadding.padSparseSignal \npadSparseSignal"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding.html#pad","title":"Padding.pad","content":"Padding.pad \npad \n\nAdds additional data points to the beginning and end of data set (number: borderpadding; x_Value distance: minDistance; y_Value: random).\nBetween every pair of data point where the difference in x_Values is greater than minDistance, additional datapoints are generated as defined in internalPaddingMethod.\nIf huge data chunks are missing (missing gap \u003C maxDistance), data points are added as defined in hugeGapPaddingMethod.\ndefault: internalPaddingMethod=LinearInterpolation; hugeGapPaddingMethod=Random (like in border cases)\ngetDiff: get the difference in x_Values as float representation (if \u0027a is float then (-))\naddToXValue: function that adds a float to the x_Value (if \u0027a is float then (\u002B))\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding.html#padSignalStartAndEnd","title":"Padding.padSignalStartAndEnd","content":"Padding.padSignalStartAndEnd \npadSignalStartAndEnd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding.html#padSignalStart","title":"Padding.padSignalStart","content":"Padding.padSignalStart \npadSignalStart \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding.html#padSignalEnd","title":"Padding.padSignalEnd","content":"Padding.padSignalEnd \npadSignalEnd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding.html#padSparseSignal","title":"Padding.padSparseSignal","content":"Padding.padSparseSignal \npadSparseSignal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-discrete.html","title":"Discrete","content":"Discrete \n \nDiscrete.ThreeDimensional \nThreeDimensional \nDiscrete.padRnd \npadRnd \nDiscrete.padZero \npadZero"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-discrete.html#padRnd","title":"Discrete.padRnd","content":"Discrete.padRnd \npadRnd \n\nAdds additional data points to the beginning and end of data set (number: borderpadding; y_Value: random).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-discrete.html#padZero","title":"Discrete.padZero","content":"Discrete.padZero \npadZero \n\nAdds additional data points to the beginning and end of data set (number: borderpadding; y_Value: random).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-discrete-threedimensional.html","title":"ThreeDimensional","content":"ThreeDimensional \n \nThreeDimensional.Padding3DMethod \nPadding3DMethod \nThreeDimensional.pad \npad"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-discrete-threedimensional.html#pad","title":"ThreeDimensional.pad","content":"ThreeDimensional.pad \npad \n\n padds artificial data points to the borders of the given Array2D. increment=1; n=borderpadding\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-discrete-threedimensional-padding3dmethod.html","title":"Padding3DMethod","content":"Padding3DMethod \n \nPadding3DMethod.Zero \nZero \nPadding3DMethod.Random \nRandom"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-discrete-threedimensional-padding3dmethod.html#Zero","title":"Padding3DMethod.Zero","content":"Padding3DMethod.Zero \nZero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-discrete-threedimensional-padding3dmethod.html#Random","title":"Padding3DMethod.Random","content":"Padding3DMethod.Random \nRandom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions.html","title":"HelperFunctions","content":"HelperFunctions \n \nHelperFunctions.Float \nFloat \nHelperFunctions.Int \nInt \nHelperFunctions.Time \nTime \nHelperFunctions.getAvgSpacing \ngetAvgSpacing \nHelperFunctions.getMedianSpacing \ngetMedianSpacing \nHelperFunctions.getMinimumSpacing \ngetMinimumSpacing"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions.html#getAvgSpacing","title":"HelperFunctions.getAvgSpacing","content":"HelperFunctions.getAvgSpacing \ngetAvgSpacing \n\naverage spacing of the data points\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions.html#getMedianSpacing","title":"HelperFunctions.getMedianSpacing","content":"HelperFunctions.getMedianSpacing \ngetMedianSpacing \n\nmedian spacing of the data points\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions.html#getMinimumSpacing","title":"HelperFunctions.getMinimumSpacing","content":"HelperFunctions.getMinimumSpacing \ngetMinimumSpacing \n\nminimum spacing of the data points\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-float.html","title":"Float","content":"Float \n \nFloat.getDiffFloat \ngetDiffFloat \nFloat.addToXValueFloat \naddToXValueFloat"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-float.html#getDiffFloat","title":"Float.getDiffFloat","content":"Float.getDiffFloat \ngetDiffFloat \n\ngetDiff: calculates the difference of the two events (-)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-float.html#addToXValueFloat","title":"Float.addToXValueFloat","content":"Float.addToXValueFloat \naddToXValueFloat \n\naddToXValue: adds toAdd to a (\u002B)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-int.html","title":"Int","content":"Int \n \nInt.getDiffInt \ngetDiffInt \nInt.addToXValueInt \naddToXValueInt"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-int.html#getDiffInt","title":"Int.getDiffInt","content":"Int.getDiffInt \ngetDiffInt \n\ngetDiff: calculates the difference of the two events\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-int.html#addToXValueInt","title":"Int.addToXValueInt","content":"Int.addToXValueInt \naddToXValueInt \n\naddToXValue: adds toAdd to a\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-time.html","title":"Time","content":"Time \n \nTime.getDiffMinutes \ngetDiffMinutes \nTime.addToXValueMinutes \naddToXValueMinutes \nTime.addToXValueHours \naddToXValueHours"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-time.html#getDiffMinutes","title":"Time.getDiffMinutes","content":"Time.getDiffMinutes \ngetDiffMinutes \n\ngetDiff: calculates the time span between the two events as total minutes (float)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-time.html#addToXValueMinutes","title":"Time.addToXValueMinutes","content":"Time.addToXValueMinutes \naddToXValueMinutes \n\naddToXValue: adds minutes to the date\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-helperfunctions-time.html#addToXValueHours","title":"Time.addToXValueHours","content":"Time.addToXValueHours \naddToXValueHours \n\naddToXValue: adds minutes to the date\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-borderpaddingmethod.html","title":"BorderPaddingMethod","content":"BorderPaddingMethod \n \nBorderPaddingMethod.Random \nRandom \nBorderPaddingMethod.Zero \nZero"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-borderpaddingmethod.html#Random","title":"BorderPaddingMethod.Random","content":"BorderPaddingMethod.Random \nRandom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-borderpaddingmethod.html#Zero","title":"BorderPaddingMethod.Zero","content":"BorderPaddingMethod.Zero \nZero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-hugegappaddingmethod.html","title":"HugeGapPaddingMethod","content":"HugeGapPaddingMethod \n \nHugeGapPaddingMethod.Random \nRandom \nHugeGapPaddingMethod.NaN \nNaN \nHugeGapPaddingMethod.Delete \nDelete \nHugeGapPaddingMethod.Zero \nZero \nHugeGapPaddingMethod.LinearInterpolation \nLinearInterpolation"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-hugegappaddingmethod.html#Random","title":"HugeGapPaddingMethod.Random","content":"HugeGapPaddingMethod.Random \nRandom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-hugegappaddingmethod.html#NaN","title":"HugeGapPaddingMethod.NaN","content":"HugeGapPaddingMethod.NaN \nNaN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-hugegappaddingmethod.html#Delete","title":"HugeGapPaddingMethod.Delete","content":"HugeGapPaddingMethod.Delete \nDelete \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-hugegappaddingmethod.html#Zero","title":"HugeGapPaddingMethod.Zero","content":"HugeGapPaddingMethod.Zero \nZero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-hugegappaddingmethod.html#LinearInterpolation","title":"HugeGapPaddingMethod.LinearInterpolation","content":"HugeGapPaddingMethod.LinearInterpolation \nLinearInterpolation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-internalpaddingmethod.html","title":"InternalPaddingMethod","content":"InternalPaddingMethod \n \nInternalPaddingMethod.Random \nRandom \nInternalPaddingMethod.NaN \nNaN \nInternalPaddingMethod.Delete \nDelete \nInternalPaddingMethod.Zero \nZero \nInternalPaddingMethod.LinearInterpolation \nLinearInterpolation"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-internalpaddingmethod.html#Random","title":"InternalPaddingMethod.Random","content":"InternalPaddingMethod.Random \nRandom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-internalpaddingmethod.html#NaN","title":"InternalPaddingMethod.NaN","content":"InternalPaddingMethod.NaN \nNaN \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-internalpaddingmethod.html#Delete","title":"InternalPaddingMethod.Delete","content":"InternalPaddingMethod.Delete \nDelete \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-internalpaddingmethod.html#Zero","title":"InternalPaddingMethod.Zero","content":"InternalPaddingMethod.Zero \nZero \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-padding-internalpaddingmethod.html#LinearInterpolation","title":"InternalPaddingMethod.LinearInterpolation","content":"InternalPaddingMethod.LinearInterpolation \nLinearInterpolation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html","title":"PeakDetection","content":"PeakDetection \n \nPeakDetection.SecondDerivative \nSecondDerivative \nPeakDetection.Extrema \nExtrema \nPeakDetection.IdentifiedPeak \nIdentifiedPeak \nPeakDetection.PeakFeature \nPeakFeature \nPeakDetection.Tag\u003C\u0027t, \u0027v\u003E \nTag\u003C\u0027t, \u0027v\u003E \nPeakDetection.iterUntil \niterUntil \nPeakDetection.iterUntili \niterUntili \nPeakDetection.createPeakFeature \ncreatePeakFeature \nPeakDetection.createIdentifiedPeak \ncreateIdentifiedPeak \nPeakDetection.localMaxima \nlocalMaxima \nPeakDetection.localMaximaIdx \nlocalMaximaIdx \nPeakDetection.localMinima \nlocalMinima \nPeakDetection.localMinimaIdx \nlocalMinimaIdx \nPeakDetection.idxOfHighestPeakBy \nidxOfHighestPeakBy \nPeakDetection.idxOfClosestPeakBy \nidxOfClosestPeakBy \nPeakDetection.labelPeaks \nlabelPeaks \nPeakDetection.idxOfHighestLabeledPeakBy \nidxOfHighestLabeledPeakBy \nPeakDetection.idxOfClosestLabeledPeak \nidxOfClosestLabeledPeak"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#iterUntil","title":"PeakDetection.iterUntil","content":"PeakDetection.iterUntil \niterUntil \n\n TODO: Add FSharpAux reference\n Iterates the data array beginning from the startIdx. \n The step size and direction are implied by magnitude and sign of stepSize. The function returns\n the idx of the first value for which predicate returns true or the end/start of the collection\n is reached (returning None). \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#iterUntili","title":"PeakDetection.iterUntili","content":"PeakDetection.iterUntili \niterUntili \n\n TODO: Add FSharpAux reference\n Iterates the data array beginning from the startIdx. \n The step size and direction are implied by magnitude and sign of stepSize. The function returns\n the idx of the first value for which predicate returns true or the end/start of the collection\n is reached (returning None). The predicate function takes the idx of the current value as an additional\n parameter.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#createPeakFeature","title":"PeakDetection.createPeakFeature","content":"PeakDetection.createPeakFeature \ncreatePeakFeature \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#createIdentifiedPeak","title":"PeakDetection.createIdentifiedPeak","content":"PeakDetection.createIdentifiedPeak \ncreateIdentifiedPeak \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#localMaxima","title":"PeakDetection.localMaxima","content":"PeakDetection.localMaxima \nlocalMaxima \n\n Returns a collection local maxima. Attention: The algorithm is very sensitive to noise and behaves irregulary for negative Y-values.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#localMaximaIdx","title":"PeakDetection.localMaximaIdx","content":"PeakDetection.localMaximaIdx \nlocalMaximaIdx \n\n Returns a collection of indices corresponding to local maxima. Attention: The algorithm is very sensitive to noise and behaves irregulary for negative Y-values.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#localMinima","title":"PeakDetection.localMinima","content":"PeakDetection.localMinima \nlocalMinima \n\n Returns a collection of local minima. Attention: The algorithm is very sensitive to noise   \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#localMinimaIdx","title":"PeakDetection.localMinimaIdx","content":"PeakDetection.localMinimaIdx \nlocalMinimaIdx \n\n Returns a collection of indices corresponding to local minima. Attention: The algorithm is very sensitive to noise   \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#idxOfHighestPeakBy","title":"PeakDetection.idxOfHighestPeakBy","content":"PeakDetection.idxOfHighestPeakBy \nidxOfHighestPeakBy \n\n Returns Index of the highestPeak flanking a given x value (xt)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#idxOfClosestPeakBy","title":"PeakDetection.idxOfClosestPeakBy","content":"PeakDetection.idxOfClosestPeakBy \nidxOfClosestPeakBy \n\n Returns Index of the highestPeak flanking a given mzValue\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#labelPeaks","title":"PeakDetection.labelPeaks","content":"PeakDetection.labelPeaks \nlabelPeaks \n\n Returns a collection of local Maxima and Minima. Attention: The algorithm is very sensitive to noise   \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#idxOfHighestLabeledPeakBy","title":"PeakDetection.idxOfHighestLabeledPeakBy","content":"PeakDetection.idxOfHighestLabeledPeakBy \nidxOfHighestLabeledPeakBy \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection.html#idxOfClosestLabeledPeak","title":"PeakDetection.idxOfClosestLabeledPeak","content":"PeakDetection.idxOfClosestLabeledPeak \nidxOfClosestLabeledPeak \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html","title":"SecondDerivative","content":"SecondDerivative \n \nSecondDerivative.closestLiftOffIdx \nclosestLiftOffIdx \nSecondDerivative.closestLeftLiftOffIdx \nclosestLeftLiftOffIdx \nSecondDerivative.closestRightLiftOffIdx \nclosestRightLiftOffIdx \nSecondDerivative.tryFindPeakEnd \ntryFindPeakEnd \nSecondDerivative.findLeftBorderOf \nfindLeftBorderOf \nSecondDerivative.findRightBorderOf \nfindRightBorderOf \nSecondDerivative.characterizePeak \ncharacterizePeak \nSecondDerivative.filterpeaks \nfilterpeaks \nSecondDerivative.getPeaks \ngetPeaks"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html#closestLiftOffIdx","title":"SecondDerivative.closestLiftOffIdx","content":"SecondDerivative.closestLiftOffIdx \nclosestLiftOffIdx \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html#closestLeftLiftOffIdx","title":"SecondDerivative.closestLeftLiftOffIdx","content":"SecondDerivative.closestLeftLiftOffIdx \nclosestLeftLiftOffIdx \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html#closestRightLiftOffIdx","title":"SecondDerivative.closestRightLiftOffIdx","content":"SecondDerivative.closestRightLiftOffIdx \nclosestRightLiftOffIdx \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html#tryFindPeakEnd","title":"SecondDerivative.tryFindPeakEnd","content":"SecondDerivative.tryFindPeakEnd \ntryFindPeakEnd \n\n Given a noisy data set, the labled negative second derivative, the index of a putative peak and the index of the peak lift of position, the function iterates\n in the direction given by the step parameter and returns a tuple. The first value of the tuple indicates if the peak is isolated (true indicates yes) and the second value is the \n index index of the determined peak end. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html#findLeftBorderOf","title":"SecondDerivative.findLeftBorderOf","content":"SecondDerivative.findLeftBorderOf \nfindLeftBorderOf \n\n No Liftoffs detected\n Given a noisy data set, the labled negative second derivative, the index of a putative peak and the index of the peak lift of position, the function iterates\n in the positive direction returns a tuple. The first value of the tuple indicates if the peak is isolated (true indicates yes) and the second value is the \n index index of the determined peak end. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html#findRightBorderOf","title":"SecondDerivative.findRightBorderOf","content":"SecondDerivative.findRightBorderOf \nfindRightBorderOf \n\n Given a noisy data set, the labled negative second derivative, the index of a putative peak and the index of the peak lift of position, the function iterates\n in the positive direction returns a tuple. The first value of the tuple indicates if the peak is isolated (true indicates yes) and the second value is the \n index index of the determined peak end. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html#characterizePeak","title":"SecondDerivative.characterizePeak","content":"SecondDerivative.characterizePeak \ncharacterizePeak \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html#filterpeaks","title":"SecondDerivative.filterpeaks","content":"SecondDerivative.filterpeaks \nfilterpeaks \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-secondderivative.html#getPeaks","title":"SecondDerivative.getPeaks","content":"SecondDerivative.getPeaks \ngetPeaks \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-extrema.html","title":"Extrema","content":"Extrema \n \nExtrema.None \nNone \nExtrema.Positive \nPositive \nExtrema.Negative \nNegative"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-extrema.html#None","title":"Extrema.None","content":"Extrema.None \nNone \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-extrema.html#Positive","title":"Extrema.Positive","content":"Extrema.Positive \nPositive \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-extrema.html#Negative","title":"Extrema.Negative","content":"Extrema.Negative \nNegative \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html","title":"IdentifiedPeak","content":"IdentifiedPeak \n \nIdentifiedPeak.Apex \nApex \nIdentifiedPeak.LeftLiftOff \nLeftLiftOff \nIdentifiedPeak.LeftEnd \nLeftEnd \nIdentifiedPeak.RightLiftOff \nRightLiftOff \nIdentifiedPeak.RightEnd \nRightEnd \nIdentifiedPeak.LeftSidedConvolved \nLeftSidedConvolved \nIdentifiedPeak.RightSidedConvolved \nRightSidedConvolved \nIdentifiedPeak.XData \nXData \nIdentifiedPeak.YData \nYData"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html#Apex","title":"IdentifiedPeak.Apex","content":"IdentifiedPeak.Apex \nApex \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html#LeftLiftOff","title":"IdentifiedPeak.LeftLiftOff","content":"IdentifiedPeak.LeftLiftOff \nLeftLiftOff \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html#LeftEnd","title":"IdentifiedPeak.LeftEnd","content":"IdentifiedPeak.LeftEnd \nLeftEnd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html#RightLiftOff","title":"IdentifiedPeak.RightLiftOff","content":"IdentifiedPeak.RightLiftOff \nRightLiftOff \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html#RightEnd","title":"IdentifiedPeak.RightEnd","content":"IdentifiedPeak.RightEnd \nRightEnd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html#LeftSidedConvolved","title":"IdentifiedPeak.LeftSidedConvolved","content":"IdentifiedPeak.LeftSidedConvolved \nLeftSidedConvolved \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html#RightSidedConvolved","title":"IdentifiedPeak.RightSidedConvolved","content":"IdentifiedPeak.RightSidedConvolved \nRightSidedConvolved \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html#XData","title":"IdentifiedPeak.XData","content":"IdentifiedPeak.XData \nXData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-identifiedpeak.html#YData","title":"IdentifiedPeak.YData","content":"IdentifiedPeak.YData \nYData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-peakfeature.html","title":"PeakFeature","content":"PeakFeature \n \nPeakFeature.Index \nIndex \nPeakFeature.XVal \nXVal \nPeakFeature.YVal \nYVal"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-peakfeature.html#Index","title":"PeakFeature.Index","content":"PeakFeature.Index \nIndex \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-peakfeature.html#XVal","title":"PeakFeature.XVal","content":"PeakFeature.XVal \nXVal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-peakfeature.html#YVal","title":"PeakFeature.YVal","content":"PeakFeature.YVal \nYVal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-tag-2.html","title":"Tag\u003C\u0027t, \u0027v\u003E","content":"Tag\u003C\u0027t, \u0027v\u003E \n \nTag\u003C\u0027t, \u0027v\u003E.Meta \nMeta \nTag\u003C\u0027t, \u0027v\u003E.Data \nData"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-tag-2.html#Meta","title":"Tag\u003C\u0027t, \u0027v\u003E.Meta","content":"Tag\u003C\u0027t, \u0027v\u003E.Meta \nMeta \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-peakdetection-tag-2.html#Data","title":"Tag\u003C\u0027t, \u0027v\u003E.Data","content":"Tag\u003C\u0027t, \u0027v\u003E.Data \nData \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplotmodule.html","title":"QQPlot","content":"QQPlot \n \nQQPlot.QuantileMethod \nQuantileMethod \nQQPlot.fromTwoSamples \nfromTwoSamples"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplotmodule.html#fromTwoSamples","title":"QQPlot.fromTwoSamples","content":"QQPlot.fromTwoSamples \nfromTwoSamples \n\n computes the quantile quantile coordinates of two sample distributions. Uses default quantile (Quantile.mode)\n Computes the quantile quantile coordinates of two sample distributions.\n If samples are not the same size, the larger samples is interpolated to match the quantiles of the smaller.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplotmodule-quantilemethod.html","title":"QuantileMethod","content":"QuantileMethod \n \nQuantileMethod.Blom \nBlom \nQuantileMethod.Rankit \nRankit \nQuantileMethod.Tukey \nTukey \nQuantileMethod.VanDerWerden \nVanDerWerden"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplotmodule-quantilemethod.html#Blom","title":"QuantileMethod.Blom","content":"QuantileMethod.Blom \nBlom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplotmodule-quantilemethod.html#Rankit","title":"QuantileMethod.Rankit","content":"QuantileMethod.Rankit \nRankit \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplotmodule-quantilemethod.html#Tukey","title":"QuantileMethod.Tukey","content":"QuantileMethod.Tukey \nTukey \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplotmodule-quantilemethod.html#VanDerWerden","title":"QuantileMethod.VanDerWerden","content":"QuantileMethod.VanDerWerden \nVanDerWerden \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet.html","title":"Wavelet","content":"Wavelet \n \nWavelet.Marr \nMarr \nWavelet.Ricker \nRicker \nWavelet.createRicker \ncreateRicker \nWavelet.createMarr \ncreateMarr"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet.html#createRicker","title":"Wavelet.createRicker","content":"Wavelet.createRicker \ncreateRicker \n\ncreation function for Ricker\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet.html#createMarr","title":"Wavelet.createMarr","content":"Wavelet.createMarr \ncreateMarr \n\ncreation function for Marr\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-marr.html","title":"Marr","content":"Marr \n\n3D-wavelet\n \nMarr.Scale \nScale \nMarr.Radius \nRadius \nMarr.PaddingArea \nPaddingArea \nMarr.MarrValues \nMarrValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-marr.html#Scale","title":"Marr.Scale","content":"Marr.Scale \nScale \n\nscale of the wavelet\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-marr.html#Radius","title":"Marr.Radius","content":"Marr.Radius \nRadius \n\ndistance to where the wavelet functions cross the xy-axis-plane\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-marr.html#PaddingArea","title":"Marr.PaddingArea","content":"Marr.PaddingArea \nPaddingArea \n\nhalf of the width of the wavelet\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-marr.html#MarrValues","title":"Marr.MarrValues","content":"Marr.MarrValues \nMarrValues \n\nfunction that takes a x- and y-value and gives the corresponding z-value\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-ricker.html","title":"Ricker","content":"Ricker \n\nRicker, or Mexican hat wavelet\n \nRicker.Scale \nScale \nRicker.PaddingArea \nPaddingArea \nRicker.MinimumPosX \nMinimumPosX \nRicker.RickerFun \nRickerFun \nRicker.RickerValues \nRickerValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-ricker.html#Scale","title":"Ricker.Scale","content":"Ricker.Scale \nScale \n\nthe scale of the wavelet\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-ricker.html#PaddingArea","title":"Ricker.PaddingArea","content":"Ricker.PaddingArea \nPaddingArea \n\nhalf of the width of the wavelet\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-ricker.html#MinimumPosX","title":"Ricker.MinimumPosX","content":"Ricker.MinimumPosX \nMinimumPosX \n\nx value of minimum y value\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-ricker.html#RickerFun","title":"Ricker.RickerFun","content":"Ricker.RickerFun \nRickerFun \n\nfunction that takes a x value and gives the corresponding y value\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-wavelet-ricker.html#RickerValues","title":"Ricker.RickerValues","content":"Ricker.RickerValues \nRickerValues \n\nricker function values for discrete wavelet transform \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplot.html","title":"QQPlot","content":"QQPlot \n \nQQPlot.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nQQPlot.toGauss \ntoGauss \nQQPlot.toInvCDF \ntoInvCDF \nQQPlot.toUniform \ntoUniform"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplot.html#\u0060\u0060.ctor\u0060\u0060","title":"QQPlot.\u0060\u0060.ctor\u0060\u0060","content":"QQPlot.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplot.html#toGauss","title":"QQPlot.toGauss","content":"QQPlot.toGauss \ntoGauss \n\n Computes the quantile quantile coordinates of a sample distributions against a normal distribution. \n The sample can be z transformed. default = Rankit\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplot.html#toInvCDF","title":"QQPlot.toInvCDF","content":"QQPlot.toInvCDF \ntoInvCDF \n\n Computes the quantile quantile coordinates of a sample distributions against a specified inverseCDF function. You can derive an inverse CDF of any statistical distribution. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-signal-qqplot.html#toUniform","title":"QQPlot.toUniform","content":"QQPlot.toUniform \ntoUniform \n\n Computes the quantile quantile coordinates of a sample distributions against a normal distribution. \n The sample can be standardized to the range between 0 and 1. default = Rankit\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-beta.html","title":"Beta","content":"Beta \n\n The beta function B(p,q), or the beta integral (also called the Eulerian integral of the first kind) is defined by\n\n B(p, q) = (\u0393(p) * \u0393(q)) / \u0393(p\u002Bq)\n \nBeta._betaLn \n_betaLn \nBeta._beta \n_beta \nBeta.betaLn \nbetaLn \nBeta.beta \nbeta \nBeta.lowerIncompleteRegularized \nlowerIncompleteRegularized \nBeta.lowerIncomplete \nlowerIncomplete \nBeta.powerSeries \npowerSeries"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-beta.html#_betaLn","title":"Beta._betaLn","content":"Beta._betaLn \n_betaLn \n\n Computes an approximation of the real value of the log beta function using approximations for the gamma function using Lanczos Coefficients described in Numerical Recipes (Press et al) \n \n\n The caller is responsible to handle edge cases such as nan, infinity, and -infinity in the input\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-beta.html#_beta","title":"Beta._beta","content":"Beta._beta \n_beta \n\n Computes an approximation of the real value of the beta function using approximations for the gamma function using Lanczos Coefficients described in Numerical Recipes (Press et al) \n \n\n The caller is responsible to handle edge cases such as nan, infinity, and -infinity in the input\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-beta.html#betaLn","title":"Beta.betaLn","content":"Beta.betaLn \nbetaLn \n\n Computes an approximation of the real value of the log beta function using approximations for the gamma function using Lanczos Coefficients described in Numerical Recipes (Press et al) \n \n\n Edge cases in the input (nan, infinity, and -infinity) are catched and handled. \n This might be slower than the unchecked version \u0060_betaLn\u0060 but does not require input sanitation to get expected results for these cases.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-beta.html#beta","title":"Beta.beta","content":"Beta.beta \nbeta \n\n Computes an approximation of the real value of the beta function using approximations for the gamma function using Lanczos Coefficients described in Numerical Recipes (Press et al) \n \n\n Edge cases in the input (nan, infinity, and -infinity) are catched and handled. \n This might be slower than the unchecked version \u0060_beta\u0060 but does not require input sanitation to get expected results for these cases.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-beta.html#lowerIncompleteRegularized","title":"Beta.lowerIncompleteRegularized","content":"Beta.lowerIncompleteRegularized \nlowerIncompleteRegularized \n\n Returns the regularized lower incomplete beta function \n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-beta.html#lowerIncomplete","title":"Beta.lowerIncomplete","content":"Beta.lowerIncomplete \nlowerIncomplete \n\n Returns the lower incomplete (unregularized) beta function\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-beta.html#powerSeries","title":"Beta.powerSeries","content":"Beta.powerSeries \npowerSeries \n\n   Power series for incomplete beta integral. Use when b*x\n   is small and x not too close to 1.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-binomial.html","title":"Binomial","content":"Binomial \n\n Special mathematical functions\n \nBinomial._coeffcient \n_coeffcient \nBinomial.coeffcient \ncoeffcient \nBinomial._coeffcientLn \n_coeffcientLn \nBinomial.coeffcientLn \ncoeffcientLn"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-binomial.html#_coeffcient","title":"Binomial._coeffcient","content":"Binomial._coeffcient \n_coeffcient \n\n Returns the binomial coeffcient (n | k) via the factorial formula.\n\n for some combinations of n and k, this might result in overflows.\n\n The caller is responsible to handle edge cases such as nan, infinity, and -infinity in the input\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-binomial.html#coeffcient","title":"Binomial.coeffcient","content":"Binomial.coeffcient \ncoeffcient \n\n Returns the binomial coeffcient (n | k) via the factorial formula.\n\n for some combinations of n and k, this might result in overflows.\n\n Edge cases in the input (nan, infinity, and -infinity) are catched and handled. \n\n This might be slower than the unchecked version \u0060_coefficient\u0060 but does not require input sanitation to get expected results for these cases.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-binomial.html#_coeffcientLn","title":"Binomial._coeffcientLn","content":"Binomial._coeffcientLn \n_coeffcientLn \n\n Returns the natural logarithm of the binomial coeffcient (n | k) via the factorial formula.\n\n for some combinations of n and k, this might result in overflows.\n\n The caller is responsible to handle edge cases such as nan, infinity, and -infinity in the input\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-binomial.html#coeffcientLn","title":"Binomial.coeffcientLn","content":"Binomial.coeffcientLn \ncoeffcientLn \n\n Returns the natural logarithm of the binomial coeffcient (n | k) via the factorial formula.\n\n for some combinations of n and k, this might result in overflows.\n\n Edge cases in the input (nan, infinity, and -infinity) are catched and handled. \n\n This might be slower than the unchecked version \u0060_coefficient\u0060 but does not require input sanitation to get expected results for these cases.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-errorfunction.html","title":"Errorfunction","content":"Errorfunction \n\n Error function (erf) and related functions.\n\n the error function (also called the Gauss error function), often denoted by erf, is a complex function of a complex variable defined as:\n\n erf (z) = 2/\u221A\u03C0 * \\int e^(-t\u00B2) dt from 0 to z\n\n This integral is a special (non-elementary) sigmoid function that occurs often in probability, statistics, and partial differential equations. In many of these applications, the function argument is a real number. If the function argument is real, then the function value is also real.\n \n In statistics, for non-negative values of x, the error function has the following interpretation: for a random variable Y that is normally distributed with mean 0 and standard deviation \n 1/\u221A2 , erf x is the probability that Y falls in the range [\u2212x, x].\n \nErrorfunction.Erf \nErf \nErrorfunction.Erfc \nErfc \nErrorfunction._erfcx \n_erfcx \nErrorfunction.erfcx \nerfcx \nErrorfunction.inverf \ninverf \nErrorfunction.inverfc \ninverfc"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-errorfunction.html#Erf","title":"Errorfunction.Erf","content":"Errorfunction.Erf \nErf \n\n Computes the error function. Note that this implementation has only been verified to have a relative error of around 1e-5.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-errorfunction.html#Erfc","title":"Errorfunction.Erfc","content":"Errorfunction.Erfc \nErfc \n\n Computes the complement of the error function. Note that this implementation has only been verified to have a relative error of around 1e-4.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-errorfunction.html#_erfcx","title":"Errorfunction._erfcx","content":"Errorfunction._erfcx \n_erfcx \n\n Scaled complementary error function, exp(x**2) * erfc(x).\n\n The caller is responsible to handle edge cases such as nan, infinity, and -infinity in the input\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-errorfunction.html#erfcx","title":"Errorfunction.erfcx","content":"Errorfunction.erfcx \nerfcx \n\n Scaled complementary error function, exp(x**2) * erfc(x).\n\n Edge cases in the input (nan, infinity, and -infinity) are catched and handled. \n\n This might be slower than the unchecked version \u0060_erfcx\u0060 but does not require input sanitation to get expected results for these cases.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-errorfunction.html#inverf","title":"Errorfunction.inverf","content":"Errorfunction.inverf \ninverf \n\n inverse of error function. uses newton refinement; from https://libit.sourceforge.net/\n accuracy to the fifth digit\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-errorfunction.html#inverfc","title":"Errorfunction.inverfc","content":"Errorfunction.inverfc \ninverfc \n\n inverse of complementary error function\n accuracy to the fifth digit\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-factorial.html","title":"Factorial","content":"Factorial \n\n Functions for computing the factorial of a number.\n\n The factorial of a non-negative integer n, denoted by n!, is the product of all positive integers less than or equal to n:\n\n n! = n * (n-1) * (n-2) * ... * 2 * 1\n\n For example, 5! = 5 * 4 * 3 * 2 * 1 = 120\n\n The value of 0! is 1.\n \nFactorial.factorial \nfactorial \nFactorial._factorialLn \n_factorialLn \nFactorial.factorialLn \nfactorialLn"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-factorial.html#factorial","title":"Factorial.factorial","content":"Factorial.factorial \nfactorial \n\n Computes the factorial of integers less than 170.\n\n The factorial functions takes an int x and returns x!. This function will not overflow\n\n the floating point format as long as x is at most 170, and will return \u002Binfinity for all values greather than 170\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-factorial.html#_factorialLn","title":"Factorial._factorialLn","content":"Factorial._factorialLn \n_factorialLn \n\n Computes the natural logarithm of the factorial.\n\n Values will be approximated for x greather than 170, as the approximated _gammaLn function is used to obtain the results for large inputs.\n\n The caller is responsible to handle edge cases such as nan, infinity, and -infinity in the input\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-factorial.html#factorialLn","title":"Factorial.factorialLn","content":"Factorial.factorialLn \nfactorialLn \n\n Computes the natural logarithm of the factorial.\n\n Values will be approximated for x greather than 170, as the approximated _gammaLn function is used to obtain the results for large inputs.\n\n Edge cases in the input (nan, infinity, and -infinity) are catched and handled. \n\n This might be slower than the unchecked version \u0060_factorialLn\u0060 but does not require input sanitation to get expected results for these cases.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html","title":"Gamma","content":"Gamma \n\n Approximations for the gamma function and related functions.\n\n The gamma function (represented by \u0393, the capital letter gamma from the Greek alphabet) is one commonly used extension \n of the factorial function to complex numbers:\n\n \u0393(x) = (x-1)!\n\nThe gamma function is defined for all complex numbers except the non-positive integers.\n \nGamma.maximum \nmaximum \nGamma._gamma \n_gamma \nGamma._gammaLn \n_gammaLn \nGamma.gamma \ngamma \nGamma.gammaLn \ngammaLn \nGamma.lowerIncompleteRegularized \nlowerIncompleteRegularized \nGamma.upperIncompleteRegularized \nupperIncompleteRegularized \nGamma.lowerIncomplete \nlowerIncomplete \nGamma.upperIncomplete \nupperIncomplete \nGamma.digamma \ndigamma \nGamma.trigamma \ntrigamma"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#maximum","title":"Gamma.maximum","content":"Gamma.maximum \nmaximum \nMaximum gamma"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#_gamma","title":"Gamma._gamma","content":"Gamma._gamma \n_gamma \n\n Computes an approximation of the real value of the gamma function using the Lanczos Coefficients described in Numerical Recipes (Press et al) \n \n \n The caller is responsible to handle edge cases such as nan, infinity, and -infinity in the input\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#_gammaLn","title":"Gamma._gammaLn","content":"Gamma._gammaLn \n_gammaLn \n\n Computes an approximation of the real value of the log gamma function using the Lanczos Coefficients described in Numerical Recipes (Press et al)\n \n\n The caller is responsible to handle edge cases such as nan, infinity, and -infinity in the input\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#gamma","title":"Gamma.gamma","content":"Gamma.gamma \ngamma \n\n Computes an approximation of the real value of the gamma function using the Lanczos Coefficients described in Numerical Recipes (Press et al) \n \n\n Edge cases in the input (nan, infinity, and -infinity) are catched and handled. \n This might be slower than the unchecked version \u0060_gamma\u0060 but does not require input sanitation to get expected results for these cases.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#gammaLn","title":"Gamma.gammaLn","content":"Gamma.gammaLn \ngammaLn \n\n Computes an approximation of the real value of the log gamma function using the Lanczos Coefficients described in Numerical Recipes (Press et al)\n \n\n Edge cases in the input (nan, infinity, and -infinity) are catched and handled. \n This might be slower than the unchecked version \u0060_gamma\u0060 but does not require input sanitation to get expected results for these cases.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#lowerIncompleteRegularized","title":"Gamma.lowerIncompleteRegularized","content":"Gamma.lowerIncompleteRegularized \nlowerIncompleteRegularized \n\n Returns the incomplete gamma function P(a,X) (regularized gamma) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#upperIncompleteRegularized","title":"Gamma.upperIncompleteRegularized","content":"Gamma.upperIncompleteRegularized \nupperIncompleteRegularized \n\n Returns the incomplete gamma function Q(a,X) = 1 - P(a,X) (regularized gamma) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#lowerIncomplete","title":"Gamma.lowerIncomplete","content":"Gamma.lowerIncomplete \nlowerIncomplete \n\n Returns the lower incomplete gamma function\n gamma(a,x) = int(exp(-t)t^(a-1),t=0..x) for real a \u0026gt; 0, x \u0026gt; 0.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#upperIncomplete","title":"Gamma.upperIncomplete","content":"Gamma.upperIncomplete \nupperIncomplete \n\n Returns the upper incomplete gamma function\n Gamma(a,x) = int(exp(-t)t^(a-1),t=0..x) for real a \u0026gt; 0, x \u0026gt; 0.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#digamma","title":"Gamma.digamma","content":"Gamma.digamma \ndigamma \n\n   Digamma function.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-gamma.html#trigamma","title":"Gamma.trigamma","content":"Gamma.trigamma \ntrigamma \n\n   Trigamma function.\n  \n\n   This code has been adapted from the FORTRAN77 and subsequent\n   C code by B. E. Schneider and John Burkardt. The code had been\n   made public under the GNU LGPL license.\n "},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-logistic.html","title":"Logistic","content":"Logistic \n\n Logistic (Sigmoid) Functions\n \nLogistic.standard \nstandard \nLogistic.generic \ngeneric"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-logistic.html#standard","title":"Logistic.standard","content":"Logistic.standard \nstandard \n\n Computes the standard logistic function value for x\n where L=1, k=1, x0=0. It is sometimes simply called the sigmoid\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-specialfunctions-logistic.html#generic","title":"Logistic.generic","content":"Logistic.generic \ngeneric \n\n Computes the logistic function value for x where \n\n x0 is the x-Value of the sigmoid midpoint,\n\nL is the curves maximum value and\n\nk is the steepness of the curve\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova.html","title":"Anova","content":"Anova \n \nAnova.AnovaVariationSource \nAnovaVariationSource \nAnova.OneWayAnovaVariationSources \nOneWayAnovaVariationSources \nAnova.TwoWayAnovaModel \nTwoWayAnovaModel \nAnova.TwoWayAnovaVariationSources \nTwoWayAnovaVariationSources \nAnova.VariationSource \nVariationSource \nAnova.createAnovaVariationSource \ncreateAnovaVariationSource \nAnova.createOneWayAnovaVariationSources \ncreateOneWayAnovaVariationSources \nAnova.createTwoWayAnovaVariationSources \ncreateTwoWayAnovaVariationSources \nAnova.oneWayAnova \noneWayAnova \nAnova.twoWayANOVA \ntwoWayANOVA"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova.html#createAnovaVariationSource","title":"Anova.createAnovaVariationSource","content":"Anova.createAnovaVariationSource \ncreateAnovaVariationSource \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova.html#createOneWayAnovaVariationSources","title":"Anova.createOneWayAnovaVariationSources","content":"Anova.createOneWayAnovaVariationSources \ncreateOneWayAnovaVariationSources \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova.html#createTwoWayAnovaVariationSources","title":"Anova.createTwoWayAnovaVariationSources","content":"Anova.createTwoWayAnovaVariationSources \ncreateTwoWayAnovaVariationSources \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova.html#oneWayAnova","title":"Anova.oneWayAnova","content":"Anova.oneWayAnova \noneWayAnova \n\n Calculates one-way analysis of variance (one-way ANOVA) which is a technique used to compare means of two or more samples (using the F distribution)\n The ANOVA tests the null hypothesis that samples in two or more groups are drawn from populations with the same mean values.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova.html#twoWayANOVA","title":"Anova.twoWayANOVA","content":"Anova.twoWayANOVA \ntwoWayANOVA \n\n Calculates two-way ANOVA as an extension of the one-way ANOVA for two independent variables.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-anovavariationsource.html","title":"AnovaVariationSource","content":"AnovaVariationSource \n \nAnovaVariationSource.DegreesOfFreedom \nDegreesOfFreedom \nAnovaVariationSource.MeanSquares \nMeanSquares \nAnovaVariationSource.Significance \nSignificance \nAnovaVariationSource.Source \nSource \nAnovaVariationSource.Statistic \nStatistic \nAnovaVariationSource.SumOfSquares \nSumOfSquares"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-anovavariationsource.html#DegreesOfFreedom","title":"AnovaVariationSource.DegreesOfFreedom","content":"AnovaVariationSource.DegreesOfFreedom \nDegreesOfFreedom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-anovavariationsource.html#MeanSquares","title":"AnovaVariationSource.MeanSquares","content":"AnovaVariationSource.MeanSquares \nMeanSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-anovavariationsource.html#Significance","title":"AnovaVariationSource.Significance","content":"AnovaVariationSource.Significance \nSignificance \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-anovavariationsource.html#Source","title":"AnovaVariationSource.Source","content":"AnovaVariationSource.Source \nSource \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-anovavariationsource.html#Statistic","title":"AnovaVariationSource.Statistic","content":"AnovaVariationSource.Statistic \nStatistic \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-anovavariationsource.html#SumOfSquares","title":"AnovaVariationSource.SumOfSquares","content":"AnovaVariationSource.SumOfSquares \nSumOfSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-onewayanovavariationsources.html","title":"OneWayAnovaVariationSources","content":"OneWayAnovaVariationSources \n \nOneWayAnovaVariationSources.Factor \nFactor \nOneWayAnovaVariationSources.Error \nError \nOneWayAnovaVariationSources.Total \nTotal"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-onewayanovavariationsources.html#Factor","title":"OneWayAnovaVariationSources.Factor","content":"OneWayAnovaVariationSources.Factor \nFactor \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-onewayanovavariationsources.html#Error","title":"OneWayAnovaVariationSources.Error","content":"OneWayAnovaVariationSources.Error \nError \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-onewayanovavariationsources.html#Total","title":"OneWayAnovaVariationSources.Total","content":"OneWayAnovaVariationSources.Total \nTotal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovamodel.html","title":"TwoWayAnovaModel","content":"TwoWayAnovaModel \n \nTwoWayAnovaModel.Fixed \nFixed \nTwoWayAnovaModel.Mixed \nMixed \nTwoWayAnovaModel.Random \nRandom"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovamodel.html#Fixed","title":"TwoWayAnovaModel.Fixed","content":"TwoWayAnovaModel.Fixed \nFixed \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovamodel.html#Mixed","title":"TwoWayAnovaModel.Mixed","content":"TwoWayAnovaModel.Mixed \nMixed \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovamodel.html#Random","title":"TwoWayAnovaModel.Random","content":"TwoWayAnovaModel.Random \nRandom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovavariationsources.html","title":"TwoWayAnovaVariationSources","content":"TwoWayAnovaVariationSources \n \nTwoWayAnovaVariationSources.FactorFst \nFactorFst \nTwoWayAnovaVariationSources.FactorSnd \nFactorSnd \nTwoWayAnovaVariationSources.Interaction \nInteraction \nTwoWayAnovaVariationSources.Error \nError \nTwoWayAnovaVariationSources.Cells \nCells \nTwoWayAnovaVariationSources.Total \nTotal"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovavariationsources.html#FactorFst","title":"TwoWayAnovaVariationSources.FactorFst","content":"TwoWayAnovaVariationSources.FactorFst \nFactorFst \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovavariationsources.html#FactorSnd","title":"TwoWayAnovaVariationSources.FactorSnd","content":"TwoWayAnovaVariationSources.FactorSnd \nFactorSnd \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovavariationsources.html#Interaction","title":"TwoWayAnovaVariationSources.Interaction","content":"TwoWayAnovaVariationSources.Interaction \nInteraction \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovavariationsources.html#Error","title":"TwoWayAnovaVariationSources.Error","content":"TwoWayAnovaVariationSources.Error \nError \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovavariationsources.html#Cells","title":"TwoWayAnovaVariationSources.Cells","content":"TwoWayAnovaVariationSources.Cells \nCells \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-twowayanovavariationsources.html#Total","title":"TwoWayAnovaVariationSources.Total","content":"TwoWayAnovaVariationSources.Total \nTotal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-variationsource.html","title":"VariationSource","content":"VariationSource \n \nVariationSource.Total \nTotal \nVariationSource.BetweenGroups \nBetweenGroups \nVariationSource.WithinGroups \nWithinGroups \nVariationSource.Regression \nRegression \nVariationSource.Residual \nResidual"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-variationsource.html#Total","title":"VariationSource.Total","content":"VariationSource.Total \nTotal \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-variationsource.html#BetweenGroups","title":"VariationSource.BetweenGroups","content":"VariationSource.BetweenGroups \nBetweenGroups \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-variationsource.html#WithinGroups","title":"VariationSource.WithinGroups","content":"VariationSource.WithinGroups \nWithinGroups \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-variationsource.html#Regression","title":"VariationSource.Regression","content":"VariationSource.Regression \nRegression \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-anova-variationsource.html#Residual","title":"VariationSource.Residual","content":"VariationSource.Residual \nResidual \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-bartlett.html","title":"Bartlett","content":"Bartlett \n \nBartlett.compute \ncompute"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-bartlett.html#compute","title":"Bartlett.compute","content":"Bartlett.compute \ncompute \n\n Bartlett\u0027s test for equality of variances\n Tests the null hypothesis that all group variances are equal\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-chisquaretest.html","title":"ChiSquareTest","content":"ChiSquareTest \n\n   Two-Sample (Goodness-of-fit) Chi-Square Test (Upper Tail)\n  \n\u003Cp class=\u0027fsdocs-para\u0027\u003E\n   A chi-square test (also chi-squared or \u03C72  test) is any statistical\n   hypothesis test in which the sampling distribution of the test statistic\n   is a \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/chisquaredistribution\u0022\u003EChiSquareDistribution\u003C/a\u003E when\n   the null hypothesis is true, or any in which this is asymptotically true,\n   meaning that the sampling distribution (if the null hypothesis is true) \n   can be made to approximate a chi-square distribution as closely as desired\n   by making the sample size large enough.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003E\n   The chi-square test is used whenever one would like to test whether the\n   actual data differs from a random distribution. \u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003E\n   References:\n   \u003Cul\u003E\u003Cli\u003E\u003Cdescription\u003E\r\n  \u003Ca href=\u0022http://en.wikipedia.org/wiki/Chi-square_test\u0022\u003E\r\n        Wikipedia, The Free Encyclopedia. Chi-Square Test. Available on:\r\n        http://en.wikipedia.org/wiki/Chi-square_test \u003C/a\u003E\r\n\u003C/description\u003E\u003C/li\u003E\u003Cli\u003E\u003Cdescription\u003E\r\n  \u003Ca href=\u0022http://www2.lv.psu.edu/jxm57/irp/chisquar.html\u0022\u003E\r\n        J. S. McLaughlin. Chi-Square Test. Available on:\r\n        http://www2.lv.psu.edu/jxm57/irp/chisquar.html \u003C/a\u003E\r\n\u003C/description\u003E\u003C/li\u003E\u003C/ul\u003E\u003C/p\u003E \nChiSquareTest.compute \ncompute"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-chisquaretest.html#compute","title":"ChiSquareTest.compute","content":"ChiSquareTest.compute \ncompute \n\n Computes the Chi-Square test\n n data points -\u003E degrees of freedom = n - 1 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-correlation.html","title":"Correlation","content":"Correlation \n \nCorrelation.testPearson \ntestPearson \nCorrelation.testSpearmanByPermutation \ntestSpearmanByPermutation \nCorrelation.testKendallByPermutation \ntestKendallByPermutation \nCorrelation.testPearsonByPermutation \ntestPearsonByPermutation"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-correlation.html#testPearson","title":"Correlation.testPearson","content":"Correlation.testPearson \ntestPearson \n\n A correlation significance is obtained by usage of students t-distribution\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-correlation.html#testSpearmanByPermutation","title":"Correlation.testSpearmanByPermutation","content":"Correlation.testSpearmanByPermutation \ntestSpearmanByPermutation \n\n Calculates a two tailed permutation test p value for spearman correlation coefficient\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-correlation.html#testKendallByPermutation","title":"Correlation.testKendallByPermutation","content":"Correlation.testKendallByPermutation \ntestKendallByPermutation \n\n Calculates a two tailed permutation test p value for kendall correlation coefficient\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-correlation.html#testPearsonByPermutation","title":"Correlation.testPearsonByPermutation","content":"Correlation.testPearsonByPermutation \ntestPearsonByPermutation \n\n Calculates a two tailed permutation test p value for pearson correlation coefficient\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-ftest.html","title":"FTest","content":"FTest \n \nFTest.testVariances \ntestVariances \nFTest.testVariancesFromVarAndDof \ntestVariancesFromVarAndDof"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-ftest.html#testVariances","title":"FTest.testVariances","content":"FTest.testVariances \ntestVariances \n\n F-test to compare two variances from data.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-ftest.html#testVariancesFromVarAndDof","title":"FTest.testVariancesFromVarAndDof","content":"FTest.testVariancesFromVarAndDof \ntestVariancesFromVarAndDof \n\n F-test to compare two variances from given parameters.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-fisherhotelling.html","title":"FisherHotelling","content":"FisherHotelling \n\n Fisher-Z transformation for Pearson correlation coefficient after Hotelling (1953) for n\u003C 50\n \nFisherHotelling.HotellingStatistics \nHotellingStatistics \nFisherHotelling.createHotellingStatistics \ncreateHotellingStatistics \nFisherHotelling.empty \nempty \nFisherHotelling.test \ntest"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-fisherhotelling.html#createHotellingStatistics","title":"FisherHotelling.createHotellingStatistics","content":"FisherHotelling.createHotellingStatistics \ncreateHotellingStatistics \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-fisherhotelling.html#empty","title":"FisherHotelling.empty","content":"FisherHotelling.empty \nempty \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-fisherhotelling.html#test","title":"FisherHotelling.test","content":"FisherHotelling.test \ntest \n\n Pearson correlation (nan support by JackKnife leave one out)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-fisherhotelling-hotellingstatistics.html","title":"HotellingStatistics","content":"HotellingStatistics \n \nHotellingStatistics.Coefficient \nCoefficient \nHotellingStatistics.PValue \nPValue \nHotellingStatistics.ZValue \nZValue"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-fisherhotelling-hotellingstatistics.html#Coefficient","title":"HotellingStatistics.Coefficient","content":"HotellingStatistics.Coefficient \nCoefficient \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-fisherhotelling-hotellingstatistics.html#PValue","title":"HotellingStatistics.PValue","content":"HotellingStatistics.PValue \nPValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-fisherhotelling-hotellingstatistics.html#ZValue","title":"HotellingStatistics.ZValue","content":"HotellingStatistics.ZValue \nZValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-friedmantest.html","title":"FriedmanTest","content":"FriedmanTest \n \nFriedmanTest.createFriedmanTest \ncreateFriedmanTest"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-friedmantest.html#createFriedmanTest","title":"FriedmanTest.createFriedmanTest","content":"FriedmanTest.createFriedmanTest \ncreateFriedmanTest \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-htest.html","title":"HTest","content":"HTest \n \nHTest.createHTest \ncreateHTest"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-htest.html#createHTest","title":"HTest.createHTest","content":"HTest.createHTest \ncreateHTest \n\n H-test / one-way ANOVA of ranks \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting.html","title":"MultipleTesting","content":"MultipleTesting \n\n This module contains functions to adjust for multiple testing errors in statistical tests.\n \nMultipleTesting.Qvalues \nQvalues \nMultipleTesting.benjaminiHochbergFDRBy \nbenjaminiHochbergFDRBy \nMultipleTesting.benjaminiHochbergFDR \nbenjaminiHochbergFDR"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting.html#benjaminiHochbergFDRBy","title":"MultipleTesting.benjaminiHochbergFDRBy","content":"MultipleTesting.benjaminiHochbergFDRBy \nbenjaminiHochbergFDRBy \n\n Benjamini-Hochberg Correction (BH)\n \u0027projection\u0027 should return a tuple of any identifier and the pValues as float, when applied to \u0027rawP\u0027\n This function applies the Benjamini-Hochberg multiple testing correcture and returns all False Discovery Rates to which the given p-values are still \n significant.\n Note: corrected pValues are not sorted in original order!\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting.html#benjaminiHochbergFDR","title":"MultipleTesting.benjaminiHochbergFDR","content":"MultipleTesting.benjaminiHochbergFDR \nbenjaminiHochbergFDR \n\n Benjamini-Hochberg Correction (BH)\n This function applies the Benjamini-Hochberg multiple testing correcture and returns all False Discovery Rates to which the given p-values are still \n significant.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting-qvalues.html","title":"Qvalues","content":"Qvalues \n\n Estimate the q-values for a given set of p-values. The q-value of a test measures the proportion of false positives incurred (called the false discovery rate) when that particular test is called significant. \n \nQvalues.pi0BootstrapWithLambda \npi0BootstrapWithLambda \nQvalues.pi0Bootstrap \npi0Bootstrap \nQvalues.ofPValuesRobustBy \nofPValuesRobustBy \nQvalues.ofPValuesRobust \nofPValuesRobust \nQvalues.ofPValuesBy \nofPValuesBy \nQvalues.ofPValues \nofPValues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting-qvalues.html#pi0BootstrapWithLambda","title":"Qvalues.pi0BootstrapWithLambda","content":"Qvalues.pi0BootstrapWithLambda \npi0BootstrapWithLambda \n\n Estimates pi0 from given p-Values by Storeys bootstrap .\n pi0 is the value to which, one can find certain values of the distribution at random.\n If this returns 0. lambda needs to be smaller.\n Math Definition for lambda = [0,1) . Contains values from 0 to 1, but not 1.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting-qvalues.html#pi0Bootstrap","title":"Qvalues.pi0Bootstrap","content":"Qvalues.pi0Bootstrap \npi0Bootstrap \n\n Estimates pi0 from given p-Values by Storeys bootstrap method using default lambda\u0027s\n pi0 is the value to which, one can find certain values of the distribution at random.\n If this returns 0. default lambda needs to be smaller. One should use \u0027pi0BootstrapWithLambda\u0027 in this case.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting-qvalues.html#ofPValuesRobustBy","title":"Qvalues.ofPValuesRobustBy","content":"Qvalues.ofPValuesRobustBy \nofPValuesRobustBy \n\n Calculates q-values from given p-values and returns an array of qValues in the same order.\n \u0027pi0\u0027 can be calculated with \u0027pi0Bootstrap\u0027 or \u0027pi0BootstrapWithLambda\u0027.\n More robust for small p values when testcount is low, see Storey JD (2002) JRSS-B 64: 479-498.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting-qvalues.html#ofPValuesRobust","title":"Qvalues.ofPValuesRobust","content":"Qvalues.ofPValuesRobust \nofPValuesRobust \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting-qvalues.html#ofPValuesBy","title":"Qvalues.ofPValuesBy","content":"Qvalues.ofPValuesBy \nofPValuesBy \n\n Calculates q-values from given p-values and returns an array of qValues in the same order.\n \u0027pi0\u0027 can be calculated with \u0027pi0Bootstrap\u0027 or \u0027pi0BootstrapWithLambda\u0027.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multipletesting-qvalues.html#ofPValues","title":"Qvalues.ofPValues","content":"Qvalues.ofPValues \nofPValues \n\n Calculates q-values from given p-values and returns an array of qValues in the same order.\n \u0027pi0\u0027 can be calculated with \u0027pi0Bootstrap\u0027 or \u0027pi0BootstrapWithLambda\u0027.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-outliers.html","title":"Outliers","content":"Outliers \n \nOutliers.OutlierBorders \nOutlierBorders \nOutliers.createOutlierBorder \ncreateOutlierBorder \nOutliers.tukey \ntukey"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-outliers.html#createOutlierBorder","title":"Outliers.createOutlierBorder","content":"Outliers.createOutlierBorder \ncreateOutlierBorder \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-outliers.html#tukey","title":"Outliers.tukey","content":"Outliers.tukey \ntukey \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-outliers-outlierborders.html","title":"OutlierBorders","content":"OutlierBorders \n \nOutlierBorders.Upper \nUpper \nOutlierBorders.Lower \nLower"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-outliers-outlierborders.html#Upper","title":"OutlierBorders.Upper","content":"OutlierBorders.Upper \nUpper \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-outliers-outlierborders.html#Lower","title":"OutlierBorders.Lower","content":"OutlierBorders.Lower \nLower \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc.html","title":"PostHoc","content":"PostHoc \n \nPostHoc.Contrast \nContrast \nPostHoc.CriticalValueContrast \nCriticalValueContrast \nPostHoc.createContrast \ncreateContrast \nPostHoc.hays \nhays \nPostHoc.tukeyHSD \ntukeyHSD \nPostHoc.fishersLSD \nfishersLSD \nPostHoc.dunnetts \ndunnetts"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc.html#createContrast","title":"PostHoc.createContrast","content":"PostHoc.createContrast \ncreateContrast \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc.html#hays","title":"PostHoc.hays","content":"PostHoc.hays \nhays \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc.html#tukeyHSD","title":"PostHoc.tukeyHSD","content":"PostHoc.tukeyHSD \ntukeyHSD \n\n Tukey-Kramer approach\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc.html#fishersLSD","title":"PostHoc.fishersLSD","content":"PostHoc.fishersLSD \nfishersLSD \n\n Fisher\u0027s LSD. Sequential t tests with the variance estimated from all samples instead of the individual groups.\n FishersLSD requires ANOVA protection (apply ANOVA first). Not multiple testing corrected! Apply e.g. Benjamini-Hochberg method afterwards.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc.html#dunnetts","title":"PostHoc.dunnetts","content":"PostHoc.dunnetts \ndunnetts \n\n Dunnetts post hoc test compares groups to one control group (multiple-to-one comparison). \n Returns if the groups defined in the contrast differ significantly (already multi comparison corrected for FWER\u003Ca) \n Critical value tables can be found in Testing.Tables\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-contrast.html","title":"Contrast","content":"Contrast \n \nContrast.Index \nIndex \nContrast.L \nL \nContrast.DegreesOfFreedom \nDegreesOfFreedom \nContrast.MeanSquares \nMeanSquares \nContrast.Significance \nSignificance \nContrast.Statistic \nStatistic \nContrast.SumOfSquares \nSumOfSquares"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-contrast.html#Index","title":"Contrast.Index","content":"Contrast.Index \nIndex \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-contrast.html#L","title":"Contrast.L","content":"Contrast.L \nL \n\n group mean difference\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-contrast.html#DegreesOfFreedom","title":"Contrast.DegreesOfFreedom","content":"Contrast.DegreesOfFreedom \nDegreesOfFreedom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-contrast.html#MeanSquares","title":"Contrast.MeanSquares","content":"Contrast.MeanSquares \nMeanSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-contrast.html#Significance","title":"Contrast.Significance","content":"Contrast.Significance \nSignificance \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-contrast.html#Statistic","title":"Contrast.Statistic","content":"Contrast.Statistic \nStatistic \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-contrast.html#SumOfSquares","title":"Contrast.SumOfSquares","content":"Contrast.SumOfSquares \nSumOfSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html","title":"CriticalValueContrast","content":"CriticalValueContrast \n \nCriticalValueContrast.create \ncreate \nCriticalValueContrast.Index \nIndex \nCriticalValueContrast.L \nL \nCriticalValueContrast.DegreesOfFreedom \nDegreesOfFreedom \nCriticalValueContrast.MeanSquares \nMeanSquares \nCriticalValueContrast.Significance \nSignificance \nCriticalValueContrast.Statistic \nStatistic \nCriticalValueContrast.SumOfSquares \nSumOfSquares \nCriticalValueContrast.CriticalValue \nCriticalValue"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html#create","title":"CriticalValueContrast.create","content":"CriticalValueContrast.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html#Index","title":"CriticalValueContrast.Index","content":"CriticalValueContrast.Index \nIndex \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html#L","title":"CriticalValueContrast.L","content":"CriticalValueContrast.L \nL \n\n group mean difference\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html#DegreesOfFreedom","title":"CriticalValueContrast.DegreesOfFreedom","content":"CriticalValueContrast.DegreesOfFreedom \nDegreesOfFreedom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html#MeanSquares","title":"CriticalValueContrast.MeanSquares","content":"CriticalValueContrast.MeanSquares \nMeanSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html#Significance","title":"CriticalValueContrast.Significance","content":"CriticalValueContrast.Significance \nSignificance \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html#Statistic","title":"CriticalValueContrast.Statistic","content":"CriticalValueContrast.Statistic \nStatistic \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html#SumOfSquares","title":"CriticalValueContrast.SumOfSquares","content":"CriticalValueContrast.SumOfSquares \nSumOfSquares \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-posthoc-criticalvaluecontrast.html#CriticalValue","title":"CriticalValueContrast.CriticalValue","content":"CriticalValueContrast.CriticalValue \nCriticalValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-rmt.html","title":"RMT","content":"RMT \n \nRMT.computeChiSquared \ncomputeChiSquared \nRMT.computeWithInterval \ncomputeWithInterval \nRMT.compute \ncompute"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-rmt.html#computeChiSquared","title":"RMT.computeChiSquared","content":"RMT.computeChiSquared \ncomputeChiSquared \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-rmt.html#computeWithInterval","title":"RMT.computeWithInterval","content":"RMT.computeWithInterval \ncomputeWithInterval \n\n Computes the critical Threshold for which the NNSD of the matrix significantly abides from the Wigner-Surmise\n bwQuantile uses % data to calculate a more robust histogram //0.9 0.01 0.05\n to reduce the search space for the threshold you can restrict the range to [leftBorder,rightBorder]\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-rmt.html#compute","title":"RMT.compute","content":"RMT.compute \ncompute \n\nComputes the critical Threshold for which the NNSD of the matrix significantly abides from the Wigner-Surmise\n bwQuantile uses % data to calculate a more robust histogram //0.9 0.01 0.05\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam.html","title":"SAM","content":"SAM \n \nSAM.Permutations \nPermutations \nSAM.S0 \nS0 \nSAM.SAMHelper \nSAMHelper \nSAM.SAM \nSAM \nSAM.SAMResult \nSAMResult \nSAM.medianCentering \nmedianCentering \nSAM.getObservedStats \ngetObservedStats \nSAM.twoClassUnpaired \ntwoClassUnpaired"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam.html#medianCentering","title":"SAM.medianCentering","content":"SAM.medianCentering \nmedianCentering \n\n median centering of the data\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam.html#getObservedStats","title":"SAM.getObservedStats","content":"SAM.getObservedStats \ngetObservedStats \n\n t-test statistic for observed statistics, used as default. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam.html#twoClassUnpaired","title":"SAM.twoClassUnpaired","content":"SAM.twoClassUnpaired \ntwoClassUnpaired \n\n default version of SAM. Two class unpaired calculation. Rnd can be either System.Random() or System.Random(seed).\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-permutations.html","title":"Permutations","content":"Permutations \n \nPermutations.getPermutations \ngetPermutations \nPermutations.getExpectedStats \ngetExpectedStats"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-permutations.html#getPermutations","title":"Permutations.getPermutations","content":"Permutations.getPermutations \ngetPermutations \n\n default permutation method. \n create permutations using Fisher Yates Shuffling \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-permutations.html#getExpectedStats","title":"Permutations.getExpectedStats","content":"Permutations.getExpectedStats \ngetExpectedStats \n\n expected Stats are the scores/values obtained from the permutations via averaging\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-s0.html","title":"S0","content":"S0 \n \nS0.estS0 \nestS0 \nS0.s0ForMinCV \ns0ForMinCV"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-s0.html#estS0","title":"S0.estS0","content":"S0.estS0 \nestS0 \n\n S0 estimation \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-s0.html#s0ForMinCV","title":"S0.s0ForMinCV","content":"S0.s0ForMinCV \ns0ForMinCV \n\n search s0 where coefficient of variation is minimal.\n input is the result from estS0 function \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html","title":"SAMHelper","content":"SAMHelper \n \nSAMHelper.estimatePi0 \nestimatePi0 \nSAMHelper.monotonizeIncreasing \nmonotonizeIncreasing \nSAMHelper.monotonizeDecreasing \nmonotonizeDecreasing \nSAMHelper.getDeltaAndAsymmCuts \ngetDeltaAndAsymmCuts \nSAMHelper.getMedianFalsePositives \ngetMedianFalsePositives \nSAMHelper.getSignificantBioitem \ngetSignificantBioitem \nSAMHelper.getMedianFdr \ngetMedianFdr \nSAMHelper.smallestCutAndDeltaForFDR \nsmallestCutAndDeltaForFDR \nSAMHelper.fdrsPerCut \nfdrsPerCut \nSAMHelper.negCutToFDR \nnegCutToFDR \nSAMHelper.posCutToFDR \nposCutToFDR \nSAMHelper.getQvalues \ngetQvalues"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#estimatePi0","title":"SAMHelper.estimatePi0","content":"SAMHelper.estimatePi0 \nestimatePi0 \n\n estimate pi0 using the quantile method. Helps to not overestimate the False Discovery Rate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#monotonizeIncreasing","title":"SAMHelper.monotonizeIncreasing","content":"SAMHelper.monotonizeIncreasing \nmonotonizeIncreasing \n\n ensures continuous increase of data. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#monotonizeDecreasing","title":"SAMHelper.monotonizeDecreasing","content":"SAMHelper.monotonizeDecreasing \nmonotonizeDecreasing \n\n ensures continuous decrease of data. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#getDeltaAndAsymmCuts","title":"SAMHelper.getDeltaAndAsymmCuts","content":"SAMHelper.getDeltaAndAsymmCuts \ngetDeltaAndAsymmCuts \n\n default in R!. Calculates asymmetric cuts for each delta present. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#getMedianFalsePositives","title":"SAMHelper.getMedianFalsePositives","content":"SAMHelper.getMedianFalsePositives \ngetMedianFalsePositives \n\n median false positives are obtained by counting how many statistics (from permuted data) fall outside of the cuts by chance.\n Permuted data should show no effect/change, therefor the ones that do are false positive \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#getSignificantBioitem","title":"SAMHelper.getSignificantBioitem","content":"SAMHelper.getSignificantBioitem \ngetSignificantBioitem \n\n amount of Bioitems that are more extreme than the cuts and therefor are called significant \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#getMedianFdr","title":"SAMHelper.getMedianFdr","content":"SAMHelper.getMedianFdr \ngetMedianFdr \n\n calculate the median False Discovery Rate\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#smallestCutAndDeltaForFDR","title":"SAMHelper.smallestCutAndDeltaForFDR","content":"SAMHelper.smallestCutAndDeltaForFDR \nsmallestCutAndDeltaForFDR \n\n get the smallest cut and corresponding delta for chosen FDR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#fdrsPerCut","title":"SAMHelper.fdrsPerCut","content":"SAMHelper.fdrsPerCut \nfdrsPerCut \n\n Calculate the FDR for each cut \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#negCutToFDR","title":"SAMHelper.negCutToFDR","content":"SAMHelper.negCutToFDR \nnegCutToFDR \n\n obtain negative cut for chosen FDR\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#posCutToFDR","title":"SAMHelper.posCutToFDR","content":"SAMHelper.posCutToFDR \nposCutToFDR \n\n obtain positive cut for chosen FDR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samhelper.html#getQvalues","title":"SAMHelper.getQvalues","content":"SAMHelper.getQvalues \ngetQvalues \n\n returns the value for each sample where it is firstly called significantly different. \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-sam.html","title":"SAM","content":"SAM \n\n read Data via deedle and create 2 samples (control/factor)\n Type that contains all info regarding SAM for each sample\n \nSAM.Create \nCreate \nSAM.ID \nID \nSAM.Ri \nRi \nSAM.Si \nSi \nSAM.Statistics \nStatistics \nSAM.QValue \nQValue \nSAM.Foldchange \nFoldchange"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-sam.html#Create","title":"SAM.Create","content":"SAM.Create \nCreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-sam.html#ID","title":"SAM.ID","content":"SAM.ID \nID \n\n identification of bioitem\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-sam.html#Ri","title":"SAM.Ri","content":"SAM.Ri \nRi \n\n relative diffence of mean\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-sam.html#Si","title":"SAM.Si","content":"SAM.Si \nSi \n\n pooled standard error \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-sam.html#Statistics","title":"SAM.Statistics","content":"SAM.Statistics \nStatistics \n\n test statistics\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-sam.html#QValue","title":"SAM.QValue","content":"SAM.QValue \nQValue \n\n local FDR of bioitem\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-sam.html#Foldchange","title":"SAM.Foldchange","content":"SAM.Foldchange \nFoldchange \n\n foldchange from condition to control\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html","title":"SAMResult","content":"SAMResult \n\n SAM Result containing all information  \n \nSAMResult.Create \nCreate \nSAMResult.S0 \nS0 \nSAMResult.Pi0 \nPi0 \nSAMResult.Delta \nDelta \nSAMResult.UpperCut \nUpperCut \nSAMResult.LowerCut \nLowerCut \nSAMResult.PosSigBioitem \nPosSigBioitem \nSAMResult.NegSigBioitem \nNegSigBioitem \nSAMResult.NonSigBioitem \nNonSigBioitem \nSAMResult.AveragePermutations \nAveragePermutations \nSAMResult.FDR \nFDR \nSAMResult.SigCalledCount \nSigCalledCount \nSAMResult.MedianFalsePositivesCount \nMedianFalsePositivesCount"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#Create","title":"SAMResult.Create","content":"SAMResult.Create \nCreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#S0","title":"SAMResult.S0","content":"SAMResult.S0 \nS0 \n\n small positive constant for independent variance of statistic\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#Pi0","title":"SAMResult.Pi0","content":"SAMResult.Pi0 \nPi0 \n\n coefficient to avoid overestimation of FDR\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#Delta","title":"SAMResult.Delta","content":"SAMResult.Delta \nDelta \n\n treshold, absolute difference between observed and expected statistics\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#UpperCut","title":"SAMResult.UpperCut","content":"SAMResult.UpperCut \nUpperCut \n\n first Statistic where the difference of observed and expected is greater than delta\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#LowerCut","title":"SAMResult.LowerCut","content":"SAMResult.LowerCut \nLowerCut \n\n first Statistic where the difference of observed and expected is greater than delta\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#PosSigBioitem","title":"SAMResult.PosSigBioitem","content":"SAMResult.PosSigBioitem \nPosSigBioitem \n\n Array of all positively regulated bioitems at given FDR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#NegSigBioitem","title":"SAMResult.NegSigBioitem","content":"SAMResult.NegSigBioitem \nNegSigBioitem \n\n Array of all negatively regulated bioitems at given FDR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#NonSigBioitem","title":"SAMResult.NonSigBioitem","content":"SAMResult.NonSigBioitem \nNonSigBioitem \n\n Array of nonsignificant/unchanged bioitems at given FDR \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#AveragePermutations","title":"SAMResult.AveragePermutations","content":"SAMResult.AveragePermutations \nAveragePermutations \n\n Array of the expected values using the average of permutations\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#FDR","title":"SAMResult.FDR","content":"SAMResult.FDR \nFDR \n\n False Discovery Rate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#SigCalledCount","title":"SAMResult.SigCalledCount","content":"SAMResult.SigCalledCount \nSigCalledCount \n\n Amount of bioitems called significant (positive and negative) in the dataset at given FDR\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-sam-samresult.html#MedianFalsePositivesCount","title":"SAMResult.MedianFalsePositivesCount","content":"SAMResult.MedianFalsePositivesCount \nMedianFalsePositivesCount \n\n Amount of \u0022random\u0022 significant bioitems in the permutations (false positives) \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-ttest.html","title":"TTest","content":"TTest \n \nTTest.twoSampleFromMeanAndVar \ntwoSampleFromMeanAndVar \nTTest.twoSample \ntwoSample \nTTest.oneSample \noneSample \nTTest.oneSampleFromMeanAndStDev \noneSampleFromMeanAndStDev \nTTest.twoSamplePaired \ntwoSamplePaired"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-ttest.html#twoSampleFromMeanAndVar","title":"TTest.twoSampleFromMeanAndVar","content":"TTest.twoSampleFromMeanAndVar \ntwoSampleFromMeanAndVar \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-ttest.html#twoSample","title":"TTest.twoSample","content":"TTest.twoSample \ntwoSample \n\n Computes a t-test or a Welch test (unequal variances)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-ttest.html#oneSample","title":"TTest.oneSample","content":"TTest.oneSample \noneSample \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-ttest.html#oneSampleFromMeanAndStDev","title":"TTest.oneSampleFromMeanAndStDev","content":"TTest.oneSampleFromMeanAndStDev \noneSampleFromMeanAndStDev \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-ttest.html#twoSamplePaired","title":"TTest.twoSamplePaired","content":"TTest.twoSamplePaired \ntwoSamplePaired \n\n which observations in one sample can be paired with observations in the other sample.\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-tables.html","title":"Tables","content":"Tables \n\n Some statistical tests lack in distributions for exact p value calculation. In order to enable the usage of these tests\n \nTables.dunnettsTwoSided095 \ndunnettsTwoSided095"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-tables.html#dunnettsTwoSided095","title":"Tables.dunnettsTwoSided095","content":"Tables.dunnettsTwoSided095 \ndunnettsTwoSided095 \n\n Dunnetts table for two tailed, alpha = 0.05 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics.html","title":"TestStatistics","content":"TestStatistics \n \nTestStatistics.ChiSquareStatistics \nChiSquareStatistics \nTestStatistics.FTestStatistics \nFTestStatistics \nTestStatistics.TTestStatistics \nTTestStatistics \nTestStatistics.WilcoxonTestStatistics \nWilcoxonTestStatistics \nTestStatistics.createTTest \ncreateTTest \nTestStatistics.createFTest \ncreateFTest \nTestStatistics.createChiSquare \ncreateChiSquare \nTestStatistics.createWilcoxon \ncreateWilcoxon"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics.html#createTTest","title":"TestStatistics.createTTest","content":"TestStatistics.createTTest \ncreateTTest \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics.html#createFTest","title":"TestStatistics.createFTest","content":"TestStatistics.createFTest \ncreateFTest \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics.html#createChiSquare","title":"TestStatistics.createChiSquare","content":"TestStatistics.createChiSquare \ncreateChiSquare \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics.html#createWilcoxon","title":"TestStatistics.createWilcoxon","content":"TestStatistics.createWilcoxon \ncreateWilcoxon \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-chisquarestatistics.html","title":"ChiSquareStatistics","content":"ChiSquareStatistics \n\n   Computes the Chi-Square test statistics for a given statistic\n   with given degrees of freedom.\n  \nChiSquareStatistics.Statistic \nStatistic \nChiSquareStatistics.DegreesOfFreedom \nDegreesOfFreedom \nChiSquareStatistics.PValueLeft \nPValueLeft \nChiSquareStatistics.PValueRight \nPValueRight \nChiSquareStatistics.PValue \nPValue"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-chisquarestatistics.html#Statistic","title":"ChiSquareStatistics.Statistic","content":"ChiSquareStatistics.Statistic \nStatistic \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-chisquarestatistics.html#DegreesOfFreedom","title":"ChiSquareStatistics.DegreesOfFreedom","content":"ChiSquareStatistics.DegreesOfFreedom \nDegreesOfFreedom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-chisquarestatistics.html#PValueLeft","title":"ChiSquareStatistics.PValueLeft","content":"ChiSquareStatistics.PValueLeft \nPValueLeft \n\n one tailed/sided chiSquare pValue\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-chisquarestatistics.html#PValueRight","title":"ChiSquareStatistics.PValueRight","content":"ChiSquareStatistics.PValueRight \nPValueRight \n\n one tailed/sided chiSquare pValue (default)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-chisquarestatistics.html#PValue","title":"ChiSquareStatistics.PValue","content":"ChiSquareStatistics.PValue \nPValue \n\n two tailed/sided chiSquare pValue\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-fteststatistics.html","title":"FTestStatistics","content":"FTestStatistics \n\n   Creates a new F-Test for a given statistic\n   with given degrees of freedom.\n  \nFTestStatistics.Statistic \nStatistic \nFTestStatistics.DegreesOfFreedom1 \nDegreesOfFreedom1 \nFTestStatistics.DegreesOfFreedom2 \nDegreesOfFreedom2 \nFTestStatistics.PValue \nPValue \nFTestStatistics.PValueTwoTailed \nPValueTwoTailed"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-fteststatistics.html#Statistic","title":"FTestStatistics.Statistic","content":"FTestStatistics.Statistic \nStatistic \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-fteststatistics.html#DegreesOfFreedom1","title":"FTestStatistics.DegreesOfFreedom1","content":"FTestStatistics.DegreesOfFreedom1 \nDegreesOfFreedom1 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-fteststatistics.html#DegreesOfFreedom2","title":"FTestStatistics.DegreesOfFreedom2","content":"FTestStatistics.DegreesOfFreedom2 \nDegreesOfFreedom2 \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-fteststatistics.html#PValue","title":"FTestStatistics.PValue","content":"FTestStatistics.PValue \nPValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-fteststatistics.html#PValueTwoTailed","title":"FTestStatistics.PValueTwoTailed","content":"FTestStatistics.PValueTwoTailed \nPValueTwoTailed \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-tteststatistics.html","title":"TTestStatistics","content":"TTestStatistics \n\n   Creates a new T-Test for a given statistic\n   with given degrees of freedom.\n  \nTTestStatistics.Statistic \nStatistic \nTTestStatistics.DegreesOfFreedom \nDegreesOfFreedom \nTTestStatistics.PValueLeft \nPValueLeft \nTTestStatistics.PValueRight \nPValueRight \nTTestStatistics.PValue \nPValue"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-tteststatistics.html#Statistic","title":"TTestStatistics.Statistic","content":"TTestStatistics.Statistic \nStatistic \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-tteststatistics.html#DegreesOfFreedom","title":"TTestStatistics.DegreesOfFreedom","content":"TTestStatistics.DegreesOfFreedom \nDegreesOfFreedom \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-tteststatistics.html#PValueLeft","title":"TTestStatistics.PValueLeft","content":"TTestStatistics.PValueLeft \nPValueLeft \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-tteststatistics.html#PValueRight","title":"TTestStatistics.PValueRight","content":"TTestStatistics.PValueRight \nPValueRight \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-tteststatistics.html#PValue","title":"TTestStatistics.PValue","content":"TTestStatistics.PValue \nPValue \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-wilcoxonteststatistics.html","title":"WilcoxonTestStatistics","content":"WilcoxonTestStatistics \n\n   Computes the Wilcoxon test statistics for a given statistic.\n  \nWilcoxonTestStatistics.Statistic \nStatistic \nWilcoxonTestStatistics.PValueLeft \nPValueLeft \nWilcoxonTestStatistics.PValueRight \nPValueRight \nWilcoxonTestStatistics.PValueTwoTailed \nPValueTwoTailed"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-wilcoxonteststatistics.html#Statistic","title":"WilcoxonTestStatistics.Statistic","content":"WilcoxonTestStatistics.Statistic \nStatistic \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-wilcoxonteststatistics.html#PValueLeft","title":"WilcoxonTestStatistics.PValueLeft","content":"WilcoxonTestStatistics.PValueLeft \nPValueLeft \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-wilcoxonteststatistics.html#PValueRight","title":"WilcoxonTestStatistics.PValueRight","content":"WilcoxonTestStatistics.PValueRight \nPValueRight \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-teststatistics-wilcoxonteststatistics.html#PValueTwoTailed","title":"WilcoxonTestStatistics.PValueTwoTailed","content":"WilcoxonTestStatistics.PValueTwoTailed \nPValueTwoTailed \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-wilcoxontest.html","title":"WilcoxonTest","content":"WilcoxonTest \n \nWilcoxonTest.createWilcoxonTestFromDifferences \ncreateWilcoxonTestFromDifferences \nWilcoxonTest.createWilcoxonTest \ncreateWilcoxonTest"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-wilcoxontest.html#createWilcoxonTestFromDifferences","title":"WilcoxonTest.createWilcoxonTestFromDifferences","content":"WilcoxonTest.createWilcoxonTestFromDifferences \ncreateWilcoxonTestFromDifferences \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-wilcoxontest.html#createWilcoxonTest","title":"WilcoxonTest.createWilcoxonTest","content":"WilcoxonTest.createWilcoxonTest \ncreateWilcoxonTest \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html","title":"BinaryConfusionMatrix","content":"BinaryConfusionMatrix \n\n Confusion matrix for binary classification\n \nBinaryConfusionMatrix.create \ncreate \nBinaryConfusionMatrix.ofPredictions \nofPredictions \nBinaryConfusionMatrix.ofPredictions \nofPredictions \nBinaryConfusionMatrix.thresholdMap \nthresholdMap \nBinaryConfusionMatrix.thresholdMap \nthresholdMap \nBinaryConfusionMatrix.TP \nTP \nBinaryConfusionMatrix.TN \nTN \nBinaryConfusionMatrix.FP \nFP \nBinaryConfusionMatrix.FN \nFN"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html#create","title":"BinaryConfusionMatrix.create","content":"BinaryConfusionMatrix.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html#ofPredictions","title":"BinaryConfusionMatrix.ofPredictions","content":"BinaryConfusionMatrix.ofPredictions \nofPredictions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html#ofPredictions","title":"BinaryConfusionMatrix.ofPredictions","content":"BinaryConfusionMatrix.ofPredictions \nofPredictions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html#thresholdMap","title":"BinaryConfusionMatrix.thresholdMap","content":"BinaryConfusionMatrix.thresholdMap \nthresholdMap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html#thresholdMap","title":"BinaryConfusionMatrix.thresholdMap","content":"BinaryConfusionMatrix.thresholdMap \nthresholdMap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html#TP","title":"BinaryConfusionMatrix.TP","content":"BinaryConfusionMatrix.TP \nTP \n\n true positives: amount of labels correctly predicted as positive\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html#TN","title":"BinaryConfusionMatrix.TN","content":"BinaryConfusionMatrix.TN \nTN \n\n true negatives: amount of labels correctly predicted as negative\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html#FP","title":"BinaryConfusionMatrix.FP","content":"BinaryConfusionMatrix.FP \nFP \n\n false positives: amount of labels incorrectly predicted as positive\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-binaryconfusionmatrix.html#FN","title":"BinaryConfusionMatrix.FN","content":"BinaryConfusionMatrix.FN \nFN \n\n false negatives: amount of labels incorrectly predicted as negative\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html","title":"ComparisonMetrics","content":"ComparisonMetrics \n\n Comparison metrics that can be derived from a binary confusion matrix\n \nComparisonMetrics.binaryThresholdMap \nbinaryThresholdMap \nComparisonMetrics.binaryThresholdMap \nbinaryThresholdMap \nComparisonMetrics.binaryThresholdMap \nbinaryThresholdMap \nComparisonMetrics.calculateAccuracy \ncalculateAccuracy \nComparisonMetrics.calculateBalancedAccuracy \ncalculateBalancedAccuracy \nComparisonMetrics.calculateDiagnosticOddsRatio \ncalculateDiagnosticOddsRatio \nComparisonMetrics.calculateF1 \ncalculateF1 \nComparisonMetrics.calculateFallOut \ncalculateFallOut \nComparisonMetrics.calculateFalseDiscoveryRate \ncalculateFalseDiscoveryRate \nComparisonMetrics.calculateFalseOmissionRate \ncalculateFalseOmissionRate \nComparisonMetrics.calculateFowlkesMallowsIndex \ncalculateFowlkesMallowsIndex \nComparisonMetrics.calculateInformedness \ncalculateInformedness \nComparisonMetrics.calculateMarkedness \ncalculateMarkedness \nComparisonMetrics.calculateMissrate \ncalculateMissrate \nComparisonMetrics.calculateMultiLabelROC \ncalculateMultiLabelROC \nComparisonMetrics.calculateNegativeLikelihoodRatio \ncalculateNegativeLikelihoodRatio \nComparisonMetrics.calculateNegativePredictiveValue \ncalculateNegativePredictiveValue \nComparisonMetrics.calculatePhiCoefficient \ncalculatePhiCoefficient \nComparisonMetrics.calculatePositiveLikelihoodRatio \ncalculatePositiveLikelihoodRatio \nComparisonMetrics.calculatePrecision \ncalculatePrecision \nComparisonMetrics.calculatePrevalence \ncalculatePrevalence \nComparisonMetrics.calculatePrevalenceThreshold \ncalculatePrevalenceThreshold \nComparisonMetrics.calculateROC \ncalculateROC \nComparisonMetrics.calculateROC \ncalculateROC \nComparisonMetrics.calculateSensitivity \ncalculateSensitivity \nComparisonMetrics.calculateSpecificity \ncalculateSpecificity \nComparisonMetrics.calculateThreatScore \ncalculateThreatScore \nComparisonMetrics.create \ncreate \nComparisonMetrics.create \ncreate \nComparisonMetrics.create \ncreate \nComparisonMetrics.macroAverage \nmacroAverage \nComparisonMetrics.macroAverage \nmacroAverage \nComparisonMetrics.macroAverage \nmacroAverage \nComparisonMetrics.macroAverageOfMultiLabelPredictions \nmacroAverageOfMultiLabelPredictions \nComparisonMetrics.microAverage \nmicroAverage \nComparisonMetrics.microAverage \nmicroAverage \nComparisonMetrics.microAverageOfMultiLabelPredictions \nmicroAverageOfMultiLabelPredictions \nComparisonMetrics.multiLabelThresholdMap \nmultiLabelThresholdMap \nComparisonMetrics.ofBinaryPredictions \nofBinaryPredictions \nComparisonMetrics.ofBinaryPredictions \nofBinaryPredictions \nComparisonMetrics.P \nP \nComparisonMetrics.N \nN \nComparisonMetrics.SampleSize \nSampleSize \nComparisonMetrics.TP \nTP \nComparisonMetrics.TN \nTN \nComparisonMetrics.FP \nFP \nComparisonMetrics.FN \nFN \nComparisonMetrics.Sensitivity \nSensitivity \nComparisonMetrics.Specificity \nSpecificity \nComparisonMetrics.Precision \nPrecision \nComparisonMetrics.NegativePredictiveValue \nNegativePredictiveValue \nComparisonMetrics.Missrate \nMissrate \nComparisonMetrics.FallOut \nFallOut \nComparisonMetrics.FalseDiscoveryRate \nFalseDiscoveryRate \nComparisonMetrics.FalseOmissionRate \nFalseOmissionRate \nComparisonMetrics.PositiveLikelihoodRatio \nPositiveLikelihoodRatio \nComparisonMetrics.NegativeLikelihoodRatio \nNegativeLikelihoodRatio \nComparisonMetrics.PrevalenceThreshold \nPrevalenceThreshold \nComparisonMetrics.ThreatScore \nThreatScore \nComparisonMetrics.Prevalence \nPrevalence \nComparisonMetrics.Accuracy \nAccuracy \nComparisonMetrics.BalancedAccuracy \nBalancedAccuracy \nComparisonMetrics.F1 \nF1 \nComparisonMetrics.PhiCoefficient \nPhiCoefficient \nComparisonMetrics.FowlkesMallowsIndex \nFowlkesMallowsIndex \nComparisonMetrics.Informedness \nInformedness \nComparisonMetrics.Markedness \nMarkedness \nComparisonMetrics.DiagnosticOddsRatio \nDiagnosticOddsRatio"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#binaryThresholdMap","title":"ComparisonMetrics.binaryThresholdMap","content":"ComparisonMetrics.binaryThresholdMap \nbinaryThresholdMap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#binaryThresholdMap","title":"ComparisonMetrics.binaryThresholdMap","content":"ComparisonMetrics.binaryThresholdMap \nbinaryThresholdMap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#binaryThresholdMap","title":"ComparisonMetrics.binaryThresholdMap","content":"ComparisonMetrics.binaryThresholdMap \nbinaryThresholdMap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateAccuracy","title":"ComparisonMetrics.calculateAccuracy","content":"ComparisonMetrics.calculateAccuracy \ncalculateAccuracy \n\n calculates the accuracy (ACC)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateBalancedAccuracy","title":"ComparisonMetrics.calculateBalancedAccuracy","content":"ComparisonMetrics.calculateBalancedAccuracy \ncalculateBalancedAccuracy \n\n calculates the balanced accuracy (BA)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateDiagnosticOddsRatio","title":"ComparisonMetrics.calculateDiagnosticOddsRatio","content":"ComparisonMetrics.calculateDiagnosticOddsRatio \ncalculateDiagnosticOddsRatio \n\n calculates the Diagnostic odds ratio (DOR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateF1","title":"ComparisonMetrics.calculateF1","content":"ComparisonMetrics.calculateF1 \ncalculateF1 \n\n calculates the F1 score (harmonic mean of precision and sensitivity)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateFallOut","title":"ComparisonMetrics.calculateFallOut","content":"ComparisonMetrics.calculateFallOut \ncalculateFallOut \n\n calculates the fall-out or false positive rate (FPR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateFalseDiscoveryRate","title":"ComparisonMetrics.calculateFalseDiscoveryRate","content":"ComparisonMetrics.calculateFalseDiscoveryRate \ncalculateFalseDiscoveryRate \n\n calculates the false discovery rate (FDR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateFalseOmissionRate","title":"ComparisonMetrics.calculateFalseOmissionRate","content":"ComparisonMetrics.calculateFalseOmissionRate \ncalculateFalseOmissionRate \n\n calculates the false omission rate (FOR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateFowlkesMallowsIndex","title":"ComparisonMetrics.calculateFowlkesMallowsIndex","content":"ComparisonMetrics.calculateFowlkesMallowsIndex \ncalculateFowlkesMallowsIndex \n\n calculates the Fowlkes\u2013Mallows index (FM)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateInformedness","title":"ComparisonMetrics.calculateInformedness","content":"ComparisonMetrics.calculateInformedness \ncalculateInformedness \n\n calculates the informedness or bookmaker informedness (BM)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateMarkedness","title":"ComparisonMetrics.calculateMarkedness","content":"ComparisonMetrics.calculateMarkedness \ncalculateMarkedness \n\n calculates the markedness (MK) or deltaP (\u0394p)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateMissrate","title":"ComparisonMetrics.calculateMissrate","content":"ComparisonMetrics.calculateMissrate \ncalculateMissrate \n\n calculates the miss rate or false negative rate (FNR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateMultiLabelROC","title":"ComparisonMetrics.calculateMultiLabelROC","content":"ComparisonMetrics.calculateMultiLabelROC \ncalculateMultiLabelROC \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateNegativeLikelihoodRatio","title":"ComparisonMetrics.calculateNegativeLikelihoodRatio","content":"ComparisonMetrics.calculateNegativeLikelihoodRatio \ncalculateNegativeLikelihoodRatio \n\n calculates the Negative likelihood ratio (LR-)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateNegativePredictiveValue","title":"ComparisonMetrics.calculateNegativePredictiveValue","content":"ComparisonMetrics.calculateNegativePredictiveValue \ncalculateNegativePredictiveValue \n\n calculates the negative predictive value (NPV)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePhiCoefficient","title":"ComparisonMetrics.calculatePhiCoefficient","content":"ComparisonMetrics.calculatePhiCoefficient \ncalculatePhiCoefficient \n\n calculates the phi coefficient (\u03C6 or r\u03C6) or Matthews correlation coefficient (MCC)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePositiveLikelihoodRatio","title":"ComparisonMetrics.calculatePositiveLikelihoodRatio","content":"ComparisonMetrics.calculatePositiveLikelihoodRatio \ncalculatePositiveLikelihoodRatio \n\n calculates the Positive likelihood ratio (LR\u002B)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePrecision","title":"ComparisonMetrics.calculatePrecision","content":"ComparisonMetrics.calculatePrecision \ncalculatePrecision \n\n calculates the precision or positive predictive value (PPV)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePrevalence","title":"ComparisonMetrics.calculatePrevalence","content":"ComparisonMetrics.calculatePrevalence \ncalculatePrevalence \n\n calculates the Prevalence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePrevalenceThreshold","title":"ComparisonMetrics.calculatePrevalenceThreshold","content":"ComparisonMetrics.calculatePrevalenceThreshold \ncalculatePrevalenceThreshold \n\n calculates the prevalence threshold (PT)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateROC","title":"ComparisonMetrics.calculateROC","content":"ComparisonMetrics.calculateROC \ncalculateROC \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateROC","title":"ComparisonMetrics.calculateROC","content":"ComparisonMetrics.calculateROC \ncalculateROC \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateSensitivity","title":"ComparisonMetrics.calculateSensitivity","content":"ComparisonMetrics.calculateSensitivity \ncalculateSensitivity \n\n calculates the sensitivity, recall, hit rate, or true positive rate (TPR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateSpecificity","title":"ComparisonMetrics.calculateSpecificity","content":"ComparisonMetrics.calculateSpecificity \ncalculateSpecificity \n\n calculates the specificity, selectivity or true negative rate (TNR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#calculateThreatScore","title":"ComparisonMetrics.calculateThreatScore","content":"ComparisonMetrics.calculateThreatScore \ncalculateThreatScore \n\n calculates the threat score (TS) or critical success index (CSI)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#create","title":"ComparisonMetrics.create","content":"ComparisonMetrics.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#create","title":"ComparisonMetrics.create","content":"ComparisonMetrics.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#create","title":"ComparisonMetrics.create","content":"ComparisonMetrics.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#macroAverage","title":"ComparisonMetrics.macroAverage","content":"ComparisonMetrics.macroAverage \nmacroAverage \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#macroAverage","title":"ComparisonMetrics.macroAverage","content":"ComparisonMetrics.macroAverage \nmacroAverage \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#macroAverage","title":"ComparisonMetrics.macroAverage","content":"ComparisonMetrics.macroAverage \nmacroAverage \n\n calculates comparison metrics as macro average of the given sequence of comparison metrics (all metrics are calculated as the average of the respective metrics)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#macroAverageOfMultiLabelPredictions","title":"ComparisonMetrics.macroAverageOfMultiLabelPredictions","content":"ComparisonMetrics.macroAverageOfMultiLabelPredictions \nmacroAverageOfMultiLabelPredictions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#microAverage","title":"ComparisonMetrics.microAverage","content":"ComparisonMetrics.microAverage \nmicroAverage \n\n calculates comparison metrics from the given MultiLabelConfusionMatrix as micro-averages (one-vs-rest binary confusion matrices (TP/TN/FP/FN) are calculated for each label and then aggregated before calculating metrics)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#microAverage","title":"ComparisonMetrics.microAverage","content":"ComparisonMetrics.microAverage \nmicroAverage \n\n calculates comparison metrics from multiple binary confusion matrices as micro-averages (all TP/TN/FP/FN are aggregated before calculating metrics)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#microAverageOfMultiLabelPredictions","title":"ComparisonMetrics.microAverageOfMultiLabelPredictions","content":"ComparisonMetrics.microAverageOfMultiLabelPredictions \nmicroAverageOfMultiLabelPredictions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#multiLabelThresholdMap","title":"ComparisonMetrics.multiLabelThresholdMap","content":"ComparisonMetrics.multiLabelThresholdMap \nmultiLabelThresholdMap \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#ofBinaryPredictions","title":"ComparisonMetrics.ofBinaryPredictions","content":"ComparisonMetrics.ofBinaryPredictions \nofBinaryPredictions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#ofBinaryPredictions","title":"ComparisonMetrics.ofBinaryPredictions","content":"ComparisonMetrics.ofBinaryPredictions \nofBinaryPredictions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#P","title":"ComparisonMetrics.P","content":"ComparisonMetrics.P \nP \n\n Condition-positives: all positive labels in the sample\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#N","title":"ComparisonMetrics.N","content":"ComparisonMetrics.N \nN \n\n Condition-negatives: all negative labels in the sample\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#SampleSize","title":"ComparisonMetrics.SampleSize","content":"ComparisonMetrics.SampleSize \nSampleSize \n\n all observations in the sample\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#TP","title":"ComparisonMetrics.TP","content":"ComparisonMetrics.TP \nTP \n\n true positives: correctly predicted condition-positive labels\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#TN","title":"ComparisonMetrics.TN","content":"ComparisonMetrics.TN \nTN \n\n true negatives: correctly predicted condition-negative labels\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#FP","title":"ComparisonMetrics.FP","content":"ComparisonMetrics.FP \nFP \n\n false positives: condition-negative labels incorrectly predicted as positives\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#FN","title":"ComparisonMetrics.FN","content":"ComparisonMetrics.FN \nFN \n\n false negatives: condition-positive labels incorrectly predicted as negatives\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#Sensitivity","title":"ComparisonMetrics.Sensitivity","content":"ComparisonMetrics.Sensitivity \nSensitivity \n\n sensitivity, recall, hit rate, or true positive rate (TPR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#Specificity","title":"ComparisonMetrics.Specificity","content":"ComparisonMetrics.Specificity \nSpecificity \n\n specificity, selectivity or true negative rate (TNR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#Precision","title":"ComparisonMetrics.Precision","content":"ComparisonMetrics.Precision \nPrecision \n\n precision or positive predictive value (PPV)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#NegativePredictiveValue","title":"ComparisonMetrics.NegativePredictiveValue","content":"ComparisonMetrics.NegativePredictiveValue \nNegativePredictiveValue \n\n negative predictive value (NPV)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#Missrate","title":"ComparisonMetrics.Missrate","content":"ComparisonMetrics.Missrate \nMissrate \n\n miss rate or false negative rate (FNR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#FallOut","title":"ComparisonMetrics.FallOut","content":"ComparisonMetrics.FallOut \nFallOut \n\n fall-out or false positive rate (FPR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#FalseDiscoveryRate","title":"ComparisonMetrics.FalseDiscoveryRate","content":"ComparisonMetrics.FalseDiscoveryRate \nFalseDiscoveryRate \n\n false discovery rate (FDR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#FalseOmissionRate","title":"ComparisonMetrics.FalseOmissionRate","content":"ComparisonMetrics.FalseOmissionRate \nFalseOmissionRate \n\n false omission rate (FOR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#PositiveLikelihoodRatio","title":"ComparisonMetrics.PositiveLikelihoodRatio","content":"ComparisonMetrics.PositiveLikelihoodRatio \nPositiveLikelihoodRatio \n\n Positive likelihood ratio (LR\u002B)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#NegativeLikelihoodRatio","title":"ComparisonMetrics.NegativeLikelihoodRatio","content":"ComparisonMetrics.NegativeLikelihoodRatio \nNegativeLikelihoodRatio \n\n Negative likelihood ratio (LR-)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#PrevalenceThreshold","title":"ComparisonMetrics.PrevalenceThreshold","content":"ComparisonMetrics.PrevalenceThreshold \nPrevalenceThreshold \n\n prevalence threshold (PT)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#ThreatScore","title":"ComparisonMetrics.ThreatScore","content":"ComparisonMetrics.ThreatScore \nThreatScore \n\n threat score (TS) or critical success index (CSI)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#Prevalence","title":"ComparisonMetrics.Prevalence","content":"ComparisonMetrics.Prevalence \nPrevalence \n\n Prevalence\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#Accuracy","title":"ComparisonMetrics.Accuracy","content":"ComparisonMetrics.Accuracy \nAccuracy \n\n accuracy (ACC)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#BalancedAccuracy","title":"ComparisonMetrics.BalancedAccuracy","content":"ComparisonMetrics.BalancedAccuracy \nBalancedAccuracy \n\n balanced accuracy (BA)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#F1","title":"ComparisonMetrics.F1","content":"ComparisonMetrics.F1 \nF1 \n\n F1 score (harmonic mean of precision and sensitivity)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#PhiCoefficient","title":"ComparisonMetrics.PhiCoefficient","content":"ComparisonMetrics.PhiCoefficient \nPhiCoefficient \n\n phi coefficient (\u03C6 or r\u03C6) or Matthews correlation coefficient (MCC)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#FowlkesMallowsIndex","title":"ComparisonMetrics.FowlkesMallowsIndex","content":"ComparisonMetrics.FowlkesMallowsIndex \nFowlkesMallowsIndex \n\n Fowlkes\u2013Mallows index (FM)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#Informedness","title":"ComparisonMetrics.Informedness","content":"ComparisonMetrics.Informedness \nInformedness \n\n informedness or bookmaker informedness (BM)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#Markedness","title":"ComparisonMetrics.Markedness","content":"ComparisonMetrics.Markedness \nMarkedness \n\n markedness (MK) or deltaP (\u0394p)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-comparisonmetrics.html#DiagnosticOddsRatio","title":"ComparisonMetrics.DiagnosticOddsRatio","content":"ComparisonMetrics.DiagnosticOddsRatio \nDiagnosticOddsRatio \n\n Diagnostic odds ratio (DOR)\n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multilabelconfusionmatrix.html","title":"MultiLabelConfusionMatrix","content":"MultiLabelConfusionMatrix \n \nMultiLabelConfusionMatrix.allVsAll \nallVsAll \nMultiLabelConfusionMatrix.create \ncreate \nMultiLabelConfusionMatrix.ofPredictions \nofPredictions \nMultiLabelConfusionMatrix.oneVsRest \noneVsRest \nMultiLabelConfusionMatrix.Labels \nLabels \nMultiLabelConfusionMatrix.Confusion \nConfusion"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multilabelconfusionmatrix.html#allVsAll","title":"MultiLabelConfusionMatrix.allVsAll","content":"MultiLabelConfusionMatrix.allVsAll \nallVsAll \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multilabelconfusionmatrix.html#create","title":"MultiLabelConfusionMatrix.create","content":"MultiLabelConfusionMatrix.create \ncreate \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multilabelconfusionmatrix.html#ofPredictions","title":"MultiLabelConfusionMatrix.ofPredictions","content":"MultiLabelConfusionMatrix.ofPredictions \nofPredictions \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multilabelconfusionmatrix.html#oneVsRest","title":"MultiLabelConfusionMatrix.oneVsRest","content":"MultiLabelConfusionMatrix.oneVsRest \noneVsRest \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multilabelconfusionmatrix.html#Labels","title":"MultiLabelConfusionMatrix.Labels","content":"MultiLabelConfusionMatrix.Labels \nLabels \n"},{"uri":"https://fslab.org/FSharp.Stats/reference/fsharp-stats-testing-multilabelconfusionmatrix.html#Confusion","title":"MultiLabelConfusionMatrix.Confusion","content":"MultiLabelConfusionMatrix.Confusion \nConfusion \n"},{"uri":"https://fslab.org/FSharp.Stats/BasicStats.html","title":"Basic statistics","content":"(**\n---\ntitle: Basic statistics\nindex: 0\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Newtonsoft.JSON\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(**\n# Basics\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=BasicStats.ipynb)\n\n_Summary:_ this tutorial gives an overview over how to do some of the basic statistical measurements with FSharp.Stats.\n\n### Table of contents\n\n - [Central tendency](#Central-tendency)\n    - [Mean](#Mean)\n    - [Truncated mean](#Truncated-mean)\n    - [Median](#Median)\n    - [Harmonic mean](#Harmonic-mean)\n    - [Geometric mean](#Geometric-mean)\n - [Dispersion](#Dispersion)\n    - [Range](#Range)\n    - [Variance and Standard Deviation](#Variance-and-standard-deviation)\n    - [Coefficient of variation](#Coefficient-of-variation)\n\n## Central tendency\n\nA [central tendency](https://en.wikipedia.org/wiki/Central_tendency) (or measure of central tendency) is a central or typical value for a probability distribution.\nIt may also be called a center or location of the distribution. Colloquially, measures of central tendency are often called averages.\n\n### Mean\n\nFor a data set, the arithmetic [mean](https://en.wikipedia.org/wiki/Mean), also called the expected value or average, \nis the central value of a discrete set of numbers: specifically, \nthe sum of the values divided by the number of values:\n\n$\\bar{x} = \\frac{1}{n}\\left (\\sum_{i=1}^n{x_i}\\right ) = \\frac{x_1\u002Bx_2\u002B\\cdots \u002Bx_n}{n}$\n\n\u0060mean\u0060 is available as a Sequence (and other collections) extension, as well as \u0060meanBy\u0060, \nwhich takes an additional converter function:\n*)\nopen FSharp.Stats\n\nlet mean1 = \n    [10; 2; 19; 24; 6; 23; 47; 24; 54; 77;]\n    |\u003E Seq.meanBy float\n\n(***include-value:mean1***)\n\nlet mean2 = \n    [10.; 2.; 19.; 24.; 6.; 23.; 47.; 24.; 54.; 77.;]\n    |\u003E Seq.mean\n\n(***include-value:mean2***)\n\n(**\n### Truncated mean\n\nComputes the truncated (trimmed) mean where a given percentage of the highest and lowest values are discarded. \nIn total 2 times the given percentage are discarded:\n\n\u0060meanTruncated\u0060 is available as a Sequence (and other collections) extension, as well as \u0060meanTruncatedBy\u0060, \nwhich takes an additional converter function:\n*)\n\nlet truncMean1 = \n    [10.; 2.; 19.; 24.; 6.; 23.; 47.; 24.; 54.; 77.;]\n    |\u003E Seq.meanTruncated 0.2\n\n(***include-value:truncMean1***)\n\nlet truncMean2 = \n    [10; 2; 19; 24; 6; 23; 47; 24; 54; 77;]\n    |\u003E Seq.meanTruncatedBy float 0.2\n\n(***include-value:truncMean2***)\n\n(**\n### Median\n\nThe [median](https://en.wikipedia.org/wiki/Median) is a value separating the higher half from the lower half of a data sample, a population, or a probability distribution. \nFor a data set, it may be thought of as \u0022the middle\u0022 value: if you sort the values of a collection by size, the median is the value in central position. \nTherefore, there are as many bigger values as smaller values than the median in the collection.\nIf there is an even number of observations, then there is no single middle value; the median is then usually defined to be the mean of the two middle values.\n\n\u0060median\u0060 is available as a equence (and other collections) extension:\n*)\n\nlet median1 = \n    [10; 2; 19; 24; 6; 23; 47; 24; 54; 77;]\n    |\u003E Seq.median\n\n(***include-value:median1***)\n\n(**\n### Harmonic mean\n\nThe [harmonic mean](https://en.wikipedia.org/wiki/Harmonic_mean) can be expressed as the reciprocal of the arithmetic mean of the reciprocals of the given set of observations.\nIt is typically appropriate for situations when the average of rates is desired.\n\n$H = \\frac{n}{\\frac1{x_1} \u002B \\frac1{x_2} \u002B \\cdots \u002B \\frac1{x_n}} = \\frac{n}{\\sum\\limits_{i=1}^n \\frac1{x_i}} = \\left(\\frac{\\sum\\limits_{i=1}^n x_i^{-1}}{n}\\right)^{-1}.$\n\n\u0060meanHarmonic\u0060 is available as a sequence (and other collections) extension, as well as \u0060meanHarmonicBy\u0060, \nwhich takes an additional converter function:\n*)\n\nlet harmonicMean1 = \n    [10.; 2.; 19.; 24.; 6.; 23.; 47.; 24.; 54.; 77.;]\n    |\u003E Seq.meanHarmonic\n\n(***include-value:harmonicMean1***)\n\nlet harmonicMean2 = \n    [10; 2; 19; 24; 6; 23; 47; 24; 54; 77;]\n    |\u003E Seq.meanHarmonicBy float\n\n(***include-value:harmonicMean2***)\n\n(**\n\n### Geometric mean\n\nThe [geometric mean](https://en.wikipedia.org/wiki/Geometric_mean) indicates the central tendency or typical value of \na set of numbers by using the product of their values (as opposed to the arithmetic mean which uses their sum). \nThe geometric mean is defined as the nth root of the product of n numbers:\n\n$\\left(\\prod_{i=1}^n x_i\\right)^\\frac{1}{n} = \\sqrt[n]{x_1 x_2 \\cdots x_n}$\n\n\u0060meanGeometric\u0060 is available as a sequence (and other collections) extension, as well as \u0060meanGeometricBy\u0060, \nwhich takes an additional converter function:\n\n*)\n\nlet geometricMean1 = \n    [10.; 2.; 19.; 24.; 6.; 23.; 47.; 24.; 54.; 77.;]\n    |\u003E Seq.meanGeometric\n\n(***include-value:geometricMean1***)\n\nlet geometricMean2 = \n    [10; 2; 19; 24; 6; 23; 47; 24; 54; 77;]\n    |\u003E Seq.meanGeometricBy float \n \n(***include-value:geometricMean2***)\n\n(**\n## Dispersion\n\n[Dispersion](https://en.wikipedia.org/wiki/Statistical_dispersion) (also called variability, scatter, or spread) is the extent to which a distribution \nis stretched or squeezed.\n\n### Range\n\nThe [range](https://en.wikipedia.org/wiki/Range_(statistics)) of a set of data is the difference between the largest and smallest values.\n\n\u0060range\u0060 is available as a sequence (and other collections) extension, as well as \u0060rangeBy\u0060, \nwhich takes an additional converter function:\n\n_Note:_ instead of returning the absolute difference between max and min value, these functions return an interval with these values as boundaries.\n***)\n\nlet range1 = \n    [10.; 2.; 19.; 24.; 6.; 23.; 47.; 24.; 54.; 77.;]\n    |\u003E Seq.rangeBy float\n\n(***include-value:range1***)\n\nlet range2 = \n    [10; 2; 19; 24; 6; 23; 47; 24; 54; 77;]\n    |\u003E Seq.rangeBy float\n\n(***include-value:range1***)\n\n(**\n### Variance and Standard Deviation\n\nThe [variance](https://en.wikipedia.org/wiki/Variance)\n\n$s_N^2 = \\frac{1}{N} \\sum_{i=1}^N \\left(x_i - \\bar{x}\\right)^2$\n\nand the [standard deviation](https://en.wikipedia.org/wiki/Standard_deviation)\n\n$s_N = \\sqrt{\\frac{1}{N} \\sum_{i=1}^N \\left(x_i - \\bar{x}\\right)^2}$\n\nare measures of dispersion the values of a collection have. While the standard deviation has the same unit as the values of the collection the variance has the squared unit. \n\n\u0060varPopulation\u0060 and \u0060stDevPopulation\u0060 are available as sequence (and other collections) extensions, as well as \u0060varPopulationBy\u0060 and \u0060stDevPopulationBy\u0060, \nwhich take an additional converter function:\n\n*)\n\nlet data = [|1.;3.;5.;4.;2.;8.|]\n\nlet varPopulation = Seq.varPopulation data\n\n(***include-value:varPopulation***)\n\nlet stdPopulation = Seq.stDevPopulation data\n\n(***include-value:stdPopulation***)\n\n\n(**\nIf the full population is **not** given, the calculation lacks in one degree of freedom, so the Bessel corrected version of the calculation has to be used (results in higher values):\n\n$s^2 = \\frac{1}{N - 1} \\sum_{i=1}^N \\left(x_i - \\bar{x}\\right)^2$ for the unbiased variance estimation, and\n\n$s = \\sqrt{\\frac{1}{N-1} \\sum_{i=1}^N \\left(x_i - \\bar{x}\\right)^2}$ for the corrected standard deviation.\n\n\u0060var\u0060 and \u0060stDev\u0060 are available as sequence (and other collections) extensions, as well as \u0060varBy\u0060 and \u0060stDevBy\u0060, \nwhich take an additional converter function:\n*)\n\nlet varSample = Seq.var data\n\n(***include-value:varSample***)\n\nlet stdSample = Seq.stDev data\n\n(***include-value:stdSample***)\n\n(**\n### Coefficient of variation\n\nThe coefficient of variation is the mean-normalized standard deviation:\n\n$\\widehat{c_{\\rm v}} = \\frac{s}{\\bar{x}}$\n\nIt describes the ratio of the standard deviation to the mean. It assists in comparing measurement variability\nwith varying amplitudes. Use only if data is measured with a ratio scale (meaningful zero values and meaningful intervals).\n\n\u0060cv\u0060 is available as a sequence (and other collections) extension, as well as \u0060cvBy\u0060, \nwhich takes an additional converter function:\n\n*)\nlet sample1 =   [1.;4.;2.;6.;5.;3.;2.;]\nlet sample2 =   [13.;41.;29.;8.;52.;34.;25.;]\n\nlet cvSample1 = Seq.cv sample1\n\n(***include-value:cvSample1***)\n\nlet cvSample2 = Seq.cv sample2\n\n(***include-value:cvSample2***)"},{"uri":"https://fslab.org/FSharp.Stats/Clustering.html","title":"Clustering","content":"(**\n---\ntitle: Clustering\nindex: 13\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Newtonsoft.JSON\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharpAux, 1.0.0\u0022\n#r \u0022nuget: Cyjs.NET\u0022\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharpAux, 1.0.0\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#r \u0022nuget: Cyjs.NET\u0022\n#endif // IPYNB\n\n(**\n# Clustering\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Clustering.ipynb)\n\n_Summary:_ this tutorial demonstrates several clustering methods in FSharp.Stats and how to visualize the results with Plotly.NET.\n\n### Table of contents\n\n - [Iterative Clustering](#Iterative-Clustering)\n    - [k-means clustering](k-means-clustering)\n - [Density based clustering](#Density-based-clustering)\n    - [DBSCAN](#DBSCAN)\n - [Hierarchical clustering](#Hierarchical-clustering)\n - [Determining the optimal number of clusters](#Determining-the-optimal-number-of-clusters)\n    - [Rule of thumb](#Rule-of-thumb)\n    - [Elbow criterion](#Elbow-criterion)\n    - [AIC](#AIC)\n    - [Silhouette coefficient](#Silhouette-coefficient)\n    - [GapStatistics](#GapStatistics)\n\nClustering methods can be used to group elements of a huge data set based on their similarity. Elements sharing similar properties cluster together and can be reported as coherent group.\n\n**Column wise standardization**\n\nPlease note that in many cases a column-wise (also called feature-wise) standardization is required. If the average amplitude and variance of the features differ, perform a z-transform or scaling between 0 and 1.\n\n**Row wise standardization**\n\nAdditionally, for e.g. gene expression or protein accumulation data where change rather than amplitude is of interest, a row wise standardization is often applied:\n\n\n1. Adaptive quality-based clustering of gene expression profiles, Smet et al., 2001\n\u003E It is common practice to normalize gene expression vectors before cluster analysis. In this paper, we normalize the expression profiles so that their mean is zero and their variance is one before proceeding with the actual cluster algorithm.\n\n2. CLICK: A Clustering Algorithm with Applications to Gene Expression Analysis, Sharan et al., 200\n\u003E Common procedures for normalizing fingerprint data include transforming each fingerprint to have mean zero and variance one\n\n3. Systematic determination of genetic network architecture, Tavazoie et al., 1999\n\u003E The data matrix was then transformed such that the variance of each gene was normalized across the 15 conditions. This was done by subtracting its mean across the time points from the expression level of each gene, and dividing by the standard deviation across the time points.\n\nFor demonstration of several clustering methods, the classic iris data set is used, which consists of 150 records, \neach of which contains four measurements and a species identifier. Since the species identifier occur several times \n(Iris-virginica, Iris-versicolor, and Iris-setosa), the first step is to generate unique labels:\n\n  - The data is shuffled and an index is appended to the data label, such that each label is unique. \n\n*)\n\nopen FSharp.Stats\n\nlet fromFileWithSep (separator:char) (filePath) =     \n    // The function is implemented using a sequence expression\n    seq {   let sr = System.IO.File.OpenText(filePath)\n            while not sr.EndOfStream do \n                let line = sr.ReadLine() \n                let words = line.Split separator//[|\u0027,\u0027;\u0027 \u0027;\u0027\\t\u0027|] \n                yield words }\n\n                \nlet lables,data =\n    fromFileWithSep \u0027,\u0027 (__SOURCE_DIRECTORY__ \u002B \u0022/data/irisData.csv\u0022)\n    |\u003E Seq.skip 1\n    |\u003E Seq.map (fun arr -\u003E arr.[4], [| float arr.[0]; float arr.[1]; float arr.[2]; float arr.[3]; |])\n    |\u003E Seq.toArray\n    |\u003E Array.shuffleFisherYates\n    |\u003E Array.mapi (fun i (lable,data) -\u003E sprintf \u0022%s_%i\u0022 lable i, data)\n    |\u003E Array.unzip\n   \n(**\nlet\u0027s first take a look at the dataset with Plotly.NET:\n*)\n\nopen Plotly.NET\n\nlet colnames = [\u0022Sepal length\u0022;\u0022Sepal width\u0022;\u0022Petal length\u0022;\u0022Petal width\u0022]\n\nlet colorscaleValue = \n    StyleParam.Colorscale.Electric //Custom [(0.0,\u0022#3D9970\u0022);(1.0,\u0022#001f3f\u0022)]\n    \nlet dataChart = \n    Chart.Heatmap(data,colNames=colnames,rowNames=(lables |\u003E Seq.mapi (fun i s -\u003E sprintf \u0022%s%i\u0022 s i )),ColorScale=colorscaleValue,ShowScale=true)\n    |\u003E Chart.withMarginSize(Left=250.)\n    |\u003E Chart.withTitle \u0022raw iris data\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\ndataChart\n#endif // IPYNB\n\n(***hide***)\ndataChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Iterative Clustering\n\n### k-means clustering\n\nIn k-means clustering a cluster number has to be specified prior to clustering the data. K centroids are randomly chosen. After \nall data points are assigned to their nearest centroid, the algorithm iteratively approaches a centroid position configuration, \nthat minimizes the dispersion of every of the k clusters. For cluster number determination see below (Determining the optimal \nnumber of clusters).\n\nFurther information can be found [here](https://fslab.org/content/tutorials/002_clustering_kMeans.html).\n*)\n\nopen FSharp.Stats.ML.Unsupervised\nopen FSharp.Stats.ML.Unsupervised.HierarchicalClustering\n\n// Kmeans clustering\n\n// For random cluster inititalization use randomInitFactory:\nlet rnd = new System.Random()\nlet randomInitFactory : IterativeClustering.CentroidsFactory\u003Cfloat []\u003E = \n    IterativeClustering.randomCentroids\u003Cfloat []\u003E rnd\n\n//let cvmaxFactory : IterativeClustering.CentroidsFactory\u003Cfloat []\u003E = \n//    IterativeClustering.initCVMAX\n  \nlet kmeansResult = \n    IterativeClustering.kmeans \u003C| DistanceMetrics.euclidean \u003C| randomInitFactory \n    \u003C| data \u003C| 4\n\nlet clusteredIrisData =\n    Array.zip lables data\n    |\u003E Array.sortBy (fun (l,dataPoint) -\u003E fst (kmeansResult.Classifier dataPoint)) \n    |\u003E Array.unzip\n    |\u003E fun (labels,d) -\u003E \n        Chart.Heatmap(d,colNames=colnames,rowNames=labels,ColorScale=colorscaleValue,ShowScale=true)\n        |\u003E Chart.withMarginSize(Left=250.)\n        |\u003E Chart.withTitle \u0022clustered iris data (k-means clustering)\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nclusteredIrisData\n#endif // IPYNB\n\n(***hide***)\nclusteredIrisData |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n// To get the best kMeans clustering result in terms of the average squared distance of each point\n// to its centroid, perform the clustering b times and minimize the dispersion.\nlet getBestkMeansClustering data k bootstraps =\n    [1..bootstraps]\n    |\u003E List.mapi (fun i x -\u003E \n        IterativeClustering.kmeans \u003C| DistanceMetrics.euclidean \u003C| randomInitFactory \u003C| data \u003C| k\n        )\n    |\u003E List.minBy (fun clusteringResult -\u003E IterativeClustering.DispersionOfClusterResult clusteringResult)\n\n(**\n## Density based clustering\n\n### DBSCAN\n\nFurther information can be found [here](https://fslab.org/content/tutorials/004_clustering_DBSCAN.html).\n\n*)\n//four dimensional clustering with sepal length, petal length, sepal width and petal width\nlet t = DbScan.compute DistanceMetrics.Array.euclideanNaN 5 1.0 data\n\n//extract petal length and petal width\nlet petLpetW      = data |\u003E Array.map (fun x -\u003E [|x.[2];x.[3]|])\n\n//extract petal width, petal length and sepal length  \nlet petWpetLsepL = data |\u003E Array.map (fun x -\u003E [|x.[3];x.[2];x.[0]|])\n\n//to create a chart with two dimensional data use the following function\nlet dbscanPlot =  \n\n    if (petLpetW |\u003E Seq.head |\u003E Seq.length) \u003C\u003E 2 then failwithf \u0022create2dChart only can handle 2 coordinates\u0022\n    \n    let result = DbScan.compute DistanceMetrics.Array.euclidean 20 0.5 petLpetW\n    \n    let chartCluster = \n        if result.Clusterlist |\u003E Seq.length \u003E 0 then      \n            result.Clusterlist\n            |\u003E Array.ofSeq\n            |\u003E Array.mapi (fun i l -\u003E\n                l\n                |\u003E Array.ofSeq\n                |\u003E Array.map (fun x -\u003E \n                    x.[0],x.[1])\n                |\u003E Array.distinct //more efficient visualization; no difference in plot but in point numbers\n                |\u003E Chart.Point \n                |\u003E Chart.withTraceName (sprintf \u0022Cluster %i\u0022 i)\n                )\n            |\u003E Chart.combine\n        else Chart.Point []\n\n    let chartNoise = \n        if result.Noisepoints |\u003E Seq.length \u003E 0 then \n            result.Noisepoints\n            |\u003E Seq.map (fun x -\u003E x.[0],x.[1])  \n            |\u003E Seq.distinct //more efficient visualization; no difference in plot but in point numbers\n            |\u003E Chart.Point\n            |\u003E Chart.withTraceName \u0022Noise\u0022\n        else Chart.Point []\n\n    let chartname = \n        let noiseCount    = result.Noisepoints |\u003E Seq.length\n        let clusterCount  = result.Clusterlist |\u003E Seq.length\n        let clPtsCount    = result.Clusterlist |\u003E Seq.sumBy Seq.length\n        sprintf \u0022eps:%.1f minPts:%i pts:%i cluster:%i noisePts:%i\u0022 \n            0.5 20 (noiseCount \u002B clPtsCount) clusterCount noiseCount \n\n    [chartNoise;chartCluster]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle chartname\n    |\u003E Chart.withAxisTitles \u0022Petal width\u0022 \u0022Petal length\u0022\n    \n\n(*** condition: ipynb ***)\n#if IPYNB\ndbscanPlot\n#endif // IPYNB\n\n(***hide***)\ndbscanPlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n//to create a chart with three dimensional data use the following function\nlet create3dChart (dfu:array\u003C\u0027a\u003E -\u003E array\u003C\u0027a\u003E -\u003E float) (minPts:int) (eps:float) (input:seq\u003C#seq\u003C\u0027a\u003E\u003E) =   \n\n    if (input |\u003E Seq.head |\u003E Seq.length) \u003C\u003E 3 then failwithf \u0022create3dChart only can handle 3 coordinates\u0022\n    \n    let result = DbScan.compute dfu minPts eps input\n    \n    let chartCluster = \n        if result.Clusterlist |\u003E Seq.length \u003E 0 then \n            result.Clusterlist\n            |\u003E Seq.mapi (fun i l -\u003E\n                l\n                |\u003E Seq.map (fun x -\u003E x.[0],x.[1],x.[2])\n                |\u003E Seq.distinct //faster visualization; no difference in plot but in point number\n                |\u003E fun x -\u003E Chart.Scatter3D (x,StyleParam.Mode.Markers)\n                |\u003E Chart.withTraceName (sprintf \u0022Cluster_%i\u0022 i))\n            |\u003E Chart.combine\n        else  Chart.Scatter3D ([],StyleParam.Mode.Markers)\n\n    let chartNoise =\n        if result.Noisepoints |\u003E Seq.length \u003E 0 then \n            result.Noisepoints\n            |\u003E Seq.map (fun x -\u003E x.[0],x.[1],x.[2])  \n            |\u003E Seq.distinct //faster visualization; no difference in plot but in point number\n            |\u003E fun x -\u003E Chart.Scatter3D (x,StyleParam.Mode.Markers)\n            |\u003E Chart.withTraceName \u0022Noise\u0022\n        else Chart.Scatter3D ([],StyleParam.Mode.Markers)\n\n    let chartname = \n        let noiseCount    = result.Noisepoints |\u003E Seq.length\n        let clusterCount  = result.Clusterlist |\u003E Seq.length\n        let clPtsCount    = result.Clusterlist |\u003E Seq.sumBy Seq.length\n        sprintf \u0022eps:%.1f minPts:%i n:%i Cluster:%i NoisePts:%i\u0022 \n            eps minPts (noiseCount \u002B clPtsCount) clusterCount noiseCount \n\n    [chartNoise;chartCluster]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle chartname\n    |\u003E Chart.withAxisTitles \u0022Petal width\u0022 \u0022Petal length\u0022\n    |\u003E Chart.withZAxis (Chart.myAxis \u0022Sepal length\u0022)\n        \n//for faster computation you can use the squaredEuclidean distance and set your eps to its square\nlet clusteredChart3D = create3dChart DistanceMetrics.Array.euclideanNaNSquared 20 (0.7**2.) petWpetLsepL \n\n(***hide***)\nclusteredChart3D |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n## Hierarchical clustering\n\n\nHierarchical clustering results in a tree structure, that has a single cluster (node) on its root and recursively \nsplits up into clusters of elements that are more similar to each other than to elements of other clusters. \nFor generating multiple cluster results with different number of clusters, the clustering has to performed only once. \nSubsequently a threshold can be determined which will result in the desired number of clusters.\n\nFurther information can be found [here](https://fslab.org/content/tutorials/003_clustering_hierarchical.html). For network visualization follow \nthis [tutorial](https://fslab.org/content/tutorials/007_replicate-quality-control.html#Data-visualization).\n\n#### Distance measures\nThere are several distance metrics, that can be used as distance function. The commonly used one probably is Euclidean distance.\n\n#### Linker\nWhen the distance between two clusters is calculated, there are several linkage types to choose from:\n\n  - **complete linkage**: maximal pairwise distance between the clusters (prone to break large clusters)\n\n  - **single linkage**: minimal pairwise distance between the clusters (sensitive to outliers)\n\n  - **centroid linkage**: distance between the two cluster centroids\n\n  - **average linkage**: average pairwise distance between the clusters (sensitive to cluster shape and size)\n\n  - **median linkage**: median pairwise distance between the clusters\n\n\n*)\n\nopen FSharp.Stats.ML.Unsupervised.HierarchicalClustering\n\n// calculates the clustering and reports a single root cluster (node), \n// that may recursively contains further nodes\nlet clusterResultH = \n    HierarchicalClustering.generate DistanceMetrics.euclideanNaNSquared Linker.wardLwLinker data\n\n// If a desired cluster number is specified, the following function cuts the cluster according\n// to the depth, that results in the respective number of clusters (here 3). Only leaves are reported.\nlet threeClustersH = HierarchicalClustering.cutHClust 3 clusterResultH\n    \n(**\n    \nEvery cluster leaf contains its raw values and an index that \nindicates the position of the respective data point in the raw data.\nThe index can be retrieved from leaves by HierarchicalClustering.getClusterId.\n*)\n    \nlet inspectThreeClusters =\n    threeClustersH\n    |\u003E List.map (fun cluster -\u003E \n        cluster\n        |\u003E List.map (fun leaf -\u003E \n            lables.[HierarchicalClustering.getClusterId leaf]\n            )\n        )\n    |\u003E fun clusteredLabels -\u003E \n        sprintf \u0022Detailed information for %i clusters is given:\u0022 clusteredLabels.Length,clusteredLabels\n    \n(*** include-value:inspectThreeClusters ***)\n    \n    \n// To recursevely flatten the cluster tree into leaves only, use flattenHClust.\n// A leaf list is reported, that does not contain any cluster membership, \n// but is sorted by the clustering result.\nlet hLeaves = \n    clusterResultH\n    |\u003E HierarchicalClustering.flattenHClust\n    \n// takes the sorted cluster result and reports a tuple of lable and data value.\nlet dataSortedByClustering =    \n    hLeaves\n    |\u003E Seq.choose (fun c -\u003E \n        let lable  = lables.[HierarchicalClustering.getClusterId c]\n        let values = HierarchicalClustering.tryGetLeafValue c\n        match values with\n        | None -\u003E None\n        | Some x -\u003E Some (lable,x)\n        )\n\nlet hierClusteredDataHeatmap = \n    let (hlable,hdata) =\n        dataSortedByClustering\n        |\u003E Seq.unzip\n    Chart.Heatmap(hdata,colNames=colnames,rowNames=hlable,ColorScale=colorscaleValue,ShowScale=true)\n    |\u003E Chart.withMarginSize(Left=250.)\n    |\u003E Chart.withTitle \u0022Clustered iris data (hierarchical clustering)\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nhierClusteredDataHeatmap\n#endif // IPYNB\n\n(***hide***)\nhierClusteredDataHeatmap |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n# Determining the optimal number of clusters\n\n## Rule of thumb\n\nThe rule of thumb is a very crude cluster number estimation only based on the number of data points.\n\nReference: \u0027Review on Determining of Cluster in K-means Clustering\u0027; Kodinariya et al; January 2013\n\n*)\n\n//optimal k for iris data set by using rule-of-thumb\nlet ruleOfThumb = ClusterNumber.kRuleOfThumb data\n\n(*** include-value:ruleOfThumb ***)\n\n(**\n\n\n## Elbow criterion\n\nThe elbow criterion is a visual method to determine the optimal cluster number. The cluster dispersion is measured as the sum of all average (squared) euclidean distance of each point to its associated centroid.\nThe point at which the dispersion drops drastically and further increase in k does not lead to a strong decrease in dispersion is the optimal k.\n\nReference: \u0027Review on Determining of Cluster in K-means Clustering\u0027; Kodinariya et al; January 2013\n\n*)\nopen IterativeClustering\nopen DistanceMetrics\n\nlet kElbow = 10\n\nlet iterations = 10 \n\nlet dispersionOfK = \n    [|1..kElbow|]\n    |\u003E Array.map (fun k -\u003E \n        let (dispersion,std) = \n            [|1..iterations|]\n            |\u003E Array.map (fun i -\u003E \n                kmeans euclideanNaNSquared (randomCentroids rnd) data k\n                |\u003E DispersionOfClusterResult)\n            |\u003E fun dispersions -\u003E \n                Seq.mean dispersions, Seq.stDev dispersions\n        k,dispersion,std\n        )\n\nlet elbowChart = \n\n    Chart.Line (dispersionOfK |\u003E Array.map (fun (k,dispersion,std) -\u003E k,dispersion))\n    |\u003E Chart.withYErrorStyle (dispersionOfK |\u003E Array.map (fun (k,dispersion,std) -\u003E std))\n    |\u003E Chart.withAxisTitles \u0022k\u0022 \u0022dispersion\u0022\n    |\u003E Chart.withTitle \u0022Iris data set dispersion\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nhierClusteredDataHeatmap\n#endif // IPYNB\n\n(***hide***)\nelbowChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n# AIC\n\n[Reference](https://nlp.stanford.edu/IR-book/html/htmledition/cluster-cardinality-in-k-means-1.html)\n\nThe Akaike information criterion (AIC) balances the information gain (with raising k) against parameter necessity (number of k).\nThe k that minimizes the AIC is assumed to be the optimal one. \n\n*)\n\nlet aicBootstraps = 10\n\n//optimal k for iris data set by using aic\nlet (aicK,aicMeans,aicStd) =\n    //perform 10 iterations and take the mean and standard deviation of the aic\n    let aic = \n        [|1..aicBootstraps|]\n        |\u003E Array.map (fun b -\u003E ClusterNumber.calcAIC 10 (kmeans euclideanNaNSquared (randomCentroids rnd) data) 15)\n    aic\n    |\u003E Array.map (fun iteration -\u003E Array.map snd iteration)\n    |\u003E JaggedArray.transpose\n    |\u003E Array.mapi (fun i aics -\u003E \n        i\u002B1,Seq.mean aics,Seq.stDev aics)\n    |\u003E Array.unzip3\n\nlet aicChart = \n    Chart.Line (aicK,aicMeans)\n    |\u003E Chart.withAxisTitles \u0022k\u0022 \u0022AIC\u0022\n    |\u003E Chart.withYErrorStyle aicStd\n\n(*** condition: ipynb ***)\n#if IPYNB\naicChart\n#endif // IPYNB\n\n(***hide***)\naicChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n## Silhouette coefficient\n\nThe silhouette index ranges from -1 to 1, where -1 indicates a misclassified point, and 1 indicates a perfect fit.\nIt can be calculated for every point by comparing the mean intra cluster distance with the nearest mean inter cluster distance.\nThe mean of all indices can be visualized, where a maximal value indicates the optimal k.\n\nReference: \u0027Review on Determining of Cluster in K-means Clustering\u0027; Kodinariya et al; January 2013\n\n*)\n\n// The following example expects the raw data to be clustered by k means clustering.\n// If you already have clustered data use the \u0027silhouetteIndex\u0027 function instead.\n\nlet silhouetteData = \n    System.IO.File.ReadAllLines(__SOURCE_DIRECTORY__ \u002B \u0022/data/silhouetteIndexData.txt\u0022)\n    |\u003E Array.map (fun x -\u003E \n        let tmp = x.Split \u0027\\t\u0027\n        [|float tmp.[0]; float tmp.[1]|])\n\nlet sI = \n    ML.Unsupervised.ClusterNumber.silhouetteIndexKMeans \n        50              // number of bootstraps \n        (kmeans euclideanNaNSquared (randomCentroids rnd) silhouetteData) \n        silhouetteData  // input data\n        15              // maximal number of allowed k\n\nlet rawDataChart =\n    silhouetteData \n    |\u003E Array.map (fun x -\u003E x.[0],x.[1])\n    |\u003E Chart.Point\n\nlet silhouetteIndicesChart =\n    Chart.Line (sI |\u003E Array.map (fun x -\u003E x.ClusterNumber,x.SilhouetteIndex))\n    |\u003E Chart.withYErrorStyle (sI |\u003E Array.map (fun x -\u003E x.SilhouetteIndexStDev))\n\nlet combinedSilhouette =\n\n    [\n    rawDataChart |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022 |\u003E Chart.withTraceName \u0022raw data\u0022\n    silhouetteIndicesChart |\u003E Chart.withAxisTitles \u0022k\u0022 \u0022silhouette index\u0022 |\u003E Chart.withTraceName \u0022silhouette\u0022\n    ]\n    |\u003E Chart.Grid(1,2)\n\n(*** condition: ipynb ***)\n#if IPYNB\ncombinedSilhouette\n#endif // IPYNB\n\n(***hide***)\ncombinedSilhouette |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## GapStatistics\n\nReference: \u0027Estimating the number of clusters in a data set via the gap statistic\u0027; J. R. Statist. Soc. B (2001); Tibshirani, Walther, and Hastie\n\nGap statistics allows to determine the optimal cluster number by comparing the cluster dispersion (intra-cluster variation) of a reference dataset to the original data cluster dispersion.\nFor each k both dispersions are calculated, while for the reference dataset multiple iterations are performed for each k. The difference of the log(dispersionOriginal) and the log(dispersionReference) is called \u0027gap\u0027.\nThe maximal gap points to the optimal cluster number. \n\nTwo ways to generate a reference data set are implemented.\n\n - a uniform coverage within the range of the original data set\n  \n - a PCA based point coverage, that considers the density/shape of the original data\n\n*)\n\n\nlet gapStatisticsData = \n    System.IO.File.ReadAllLines(__SOURCE_DIRECTORY__ \u002B \u0022/data/gapStatisticsData.txt\u0022)\n    |\u003E Array.map (fun x -\u003E\n        let tmp = x.Split \u0027\\t\u0027\n        tmp |\u003E Array.map float)\n\nlet gapDataChart = \n\n    [\n    gapStatisticsData|\u003E Array.map (fun x -\u003E x.[0],x.[1]) |\u003E Chart.Point |\u003E Chart.withTraceName \u0022original\u0022 |\u003E Chart.withXAxis (Chart.myAxisRange \u0022\u0022 (-4.,10.)) |\u003E Chart.withYAxis (Chart.myAxisRange \u0022\u0022 (-2.5,9.))\n    (GapStatistics.PointGenerators.generateUniformPoints rnd gapStatisticsData) |\u003E Array.map (fun x -\u003E x.[0],x.[1]) |\u003E Chart.Point |\u003E Chart.withTraceName \u0022uniform\u0022 |\u003E Chart.withXAxis (Chart.myAxisRange \u0022\u0022 (-4.,10.)) |\u003E Chart.withYAxis (Chart.myAxisRange \u0022\u0022 (-2.5,9.))\n    (GapStatistics.PointGenerators.generateUniformPointsPCA rnd gapStatisticsData) |\u003E Array.map (fun x -\u003E x.[0],x.[1]) |\u003E Chart.Point |\u003E Chart.withTraceName \u0022uniform PCA\u0022 |\u003E Chart.withXAxis (Chart.myAxisRange \u0022\u0022 (-4.,10.)) |\u003E Chart.withYAxis (Chart.myAxisRange \u0022\u0022 (-2.5,9.))\n    ]\n    |\u003E Chart.Grid(1,3)\n    |\u003E Chart.withSize(800.,400.)\n    \n(*** condition: ipynb ***)\n#if IPYNB\ngapDataChart\n#endif // IPYNB\n\n(***hide***)\ngapDataChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\nThe log(dispersionReference) should decrease with rising k, but - if clusters are present in the data - should be greater than the log(dispersionOriginal). \n\n*)\nopen GapStatistics\n\n//create gap statistics\nlet gaps =\n    GapStatistics.calculate\n        (PointGenerators.generateUniformPointsPCA rnd)      //uniform point distribution\n        100// no gain above 500                                //number of bootstraps samples \n        ClusterDispersionMetric.logDispersionKMeansInitRandom //dispersion metric of clustering algorithm\n        10                                                     //maximal number of allowed clusters\n        gapStatisticsData                                      //float [] [] data of coordinates\n\n//number of clusters        \nlet k        = gaps |\u003E Array.map (fun x -\u003E x.ClusterIndex)\n//log(dispersion) of the original data (with rising k)\nlet disp     = gaps |\u003E Array.map (fun x -\u003E x.Dispersion)\n//log(dispersion) of the reference data (with rising k)\nlet dispRef = gaps |\u003E Array.map (fun x -\u003E x.ReferenceDispersion)\n//log(dispersionRef) - log(dispersionOriginal)\nlet gap      = gaps |\u003E Array.map (fun x -\u003E x.Gaps)\n//standard deviation of reference data set dispersion\nlet std      = gaps |\u003E Array.map (fun x -\u003E x.RefDispersionStDev)\n\nlet gapStatisticsChart =\n\n    let dispersions =\n        [\n        Chart.Line (k,disp)    |\u003E Chart.withTraceName \u0022disp\u0022\n        Chart.Line (k,dispRef)|\u003E Chart.withTraceName \u0022dispRef\u0022 |\u003E Chart.withYErrorStyle(std)\n        ]\n        |\u003E Chart.combine \n        |\u003E Chart.withAxisTitles \u0022\u0022 \u0022log(disp)\u0022\n    let gaps = \n        Chart.Line (k,gap)|\u003E Chart.withTraceName \u0022gaps\u0022\n        |\u003E Chart.withAxisTitles \u0022k\u0022 \u0022gaps\u0022\n    [dispersions; gaps]\n    |\u003E Chart.Grid(2,1)\n\n(*** condition: ipynb ***)\n#if IPYNB\ngapStatisticsChart\n#endif // IPYNB\n\n(***hide***)\ngapStatisticsChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\nThe maximal gap points to the optimal cluster number with the following condition:\n\n - kopt = smallest k such that Gap(k)\u003E= Gap(k\u002B1)-sk\u002B1\n\n - where sk = std * sqrt(1\u002B1/bootstraps)\n\n*)\n\n//calculate s(k) out of std(k) and the number of performed iterations for the refernce data set\nlet sK   = std |\u003E Array.map (fun sd -\u003E sd * sqrt(1. \u002B 1./500.)) //bootstraps = 500 \n\nlet gapChart =\n\n    Chart.Line (k,gap)\n    |\u003E Chart.withYErrorStyle(sK)\n    |\u003E Chart.withAxisTitles \u0022k\u0022 \u0022gaps\u0022\n    \n(***hide***)\ngapChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n//choose kOpt = smallest k such that Gap(k)\u003E= Gap(k\u002B1)-sk\u002B1, where sk = sdk * sqrt(1\u002B1/bootstraps)\nlet kOpt = \n    Array.init (gap.Length - 2) (fun i -\u003E gap.[i] \u003E= gap.[i\u002B1] - sK.[i\u002B1])\n    |\u003E Array.findIndex id\n    |\u003E fun x -\u003E sprintf \u0022The optimal cluster number is: %i\u0022 (x \u002B 1)\n    \n(*** include-value:kOpt ***)"},{"uri":"https://fslab.org/FSharp.Stats/ComparisonMetrics.html","title":"Comparison metrics","content":"(**\n---\ntitle: Comparison metrics\nindex: 14\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(***hide***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(**\n# Evaluating predictions and tests\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Integration.ipynb)\n\n#### Table of contents\n- [Confusion matrices](#Confusion-matrices)\n    - [Binary confusion matrix](#Binary-confusion-matrix)\n    - [Multi-label confusion matrix](#Multi-label-confusion-matrix)\n- [Comparison-Metric](#Comparison-Metrics)\n    - [ComparisonMetrics for binary comparisons](#ComparisonMetrics-for-binary-comparisons)\n    - [ComparisonMetrics for multi-label comparisons](#ComparisonMetrics-for-multi-label-comparisons)\n        - [Macro-averaging metrics](#Macro-averaging-metrics)\n        - [Micro-averaging metrics](#Micro-averaging-metrics)\n    - [Creating threshold-dependent metric maps](#Creating-threshold-dependent-metric-maps)\n        - [For binary predictions](#For-binary-predictions)\n        - [For multi-label predictions](#For-multi-label-predictions)\n        - [ROC curve example](#ROC-curve-example)\n\nFSharp.Stats contains a collection for assessing both binary and multi-label comparisons, for example the results of a binary/multi-label classification or the results of a statistical test.\n\nUsually, using the functions provided by the \u0060ComparisonMetrics\u0060 module should be enough, but for clarity this documentation also introduces the \u0060BinaryConfusionMatrix\u0060 and \u0060MultiLabelConfusionMatrix\u0060 types that are used to derive the \u0060ComparisonMetrics.\u0060\n\n## Confusion matrices\n\nSee also: https://en.wikipedia.org/wiki/Confusion_matrix\n\nConfusion matrices can be used to count and visualize the outcomes of a prediction against the actual \u0027true\u0027 values and therefore assess the prediction quality.\n\nEach row of the matrix represents the instances in an actual class while each column represents the instances in a predicted class, or vice versa. The name stems from the fact that it makes it easy to see whether the system is confusing two classes (i.e. commonly mislabeling one as another).\n\n### Binary confusion matrix\n\nA binary confusion matrix is a special kind of contingency table, with two dimensions (\u0022actual\u0022 and \u0022predicted\u0022), and identical sets of \u0022classes\u0022 in both dimensions (each combination of dimension and class is a variable in the contingency table).\n\nlet for example the actual labels be the set \n\n$$actual = (1,1,1,1,0,0,0)$$ \n\nand the predictions \n\n$$predicted = (1,1,1,0,1,0,0)$$\n\na binary confusion matrix can be filled by comparing actual and predicted values at their respective indices:\n\n|       |      | predicted | |\n| ---   |  --- | ---  |  ---  |\n|       |      | True | False |\n|actual | True |   3  |   1   |\n|       | False|   1  |   2   |\n\nA whole array of prediction/test evaluation metrics can be derived from binary confusion matrices, which are all based on the 4 values of the confusion matrix: \n\n- TP (True Positives, the actual true labels predicted correctly as true)\n- TN (True Negatives, the actual false labels predicted correctly as false)\n- FP (False Positives, the actual false labels incorrectly predicted as true)\n- TP (False Negatives, the actual true labels incorrectly predicted as false)\n\n|       |      | Predicted | |\n| ---   |  --- | ---  |  ---  |\n|       |      | True | False |\n|Actual | True |  TP  |   FN  |\n|       | False|  FP  |   TN  |\n\nThese 4 base metrics are in principle what comprises the record type \u0060BinaryConfusionMatrix\u0060. \n\nA BinaryConfusionMatrix can be created in various ways :\n\n- from predictions and actual labels of any type using \u0060BinaryConfusionMatrix.fromPredictions\u0060, additionally passing which label is the \u0022positive\u0022 label\n*)\nlet actual = [1;1;1;1;0;0;0]\nlet predicted = [1;1;1;0;1;0;0]\n\nopen FSharp.Stats.Testing\n\nBinaryConfusionMatrix.ofPredictions(1,actual,predicted)\n(***include-it***)\n\n(**\n- from boolean predictions and actual labels using \u0060BinaryConfusionMatrix.fromPredictions\u0060\n*)\nlet actualBool = [true;true;true;true;false;false;false]\nlet predictedBool = [true;true;true;false;true;false;false]\n\nBinaryConfusionMatrix.ofPredictions(actualBool,predictedBool)\n(***include-it***)\n\n(**\n- directly from obtained TP/TN/FP/FN values using \u0060BinaryConfusionMatrix.create\u0060\n*)\n\nBinaryConfusionMatrix.create(tp=3,tn=2,fp=1,fn=1)\n(***include-it***)\n\n(**\nThere are more things you can do with \u0060BinaryConfusionMatrix\u0060, but most use cases are covered and abstracted by \u0060ComparisonMetrics\u0060 (see [below](#Comparison-metrics)).\n\n### Multi label confusion matrix\n\nConfusion matrix is not limited to binary classification and can be used in multi-class classifiers as well, increasing both dimensions by the amount of additional labels.\n\nlet for example the actual labels be the set \n\n$$actual = (A,A,A,A,A,B,B,B,C,C,C,C,C,C)$$ \n\nand the predictions \n\n$$predicted = (A,A,A,B,C,B,B,A,C,C,C,C,A,A)$$\n\na multi-label confusion matrix can be filled by comparing actual and predicted values at their respective indices:\n\n|        |         | Predicted |         |         |\n| ---    | ---     | ---       | ---     | ---     |\n|        |         |  Label A  | Label B | Label C |\n| Actual | Label A |     3     |    1    |    1    |\n|        | Label B |     1     |    2    |    0    |\n|        | Label C |     2     |    0    |    4    |\n\nA \u0060MultiLabelConfusionMatrix\u0060 can be created either\n\n- from the labels and a confusion matrix (\u0060Matrix\u003Cint\u003E\u0060, note that the index in the label array will be assigned for the column/row indices of the matrix, and that the matrix must be square and of the same dimensions as the label array)\n*)\nopen FSharp.Stats\n\nlet mlcm =\n    MultiLabelConfusionMatrix.create(\n        labels = [|\u0022A\u0022; \u0022B\u0022; \u0022C\u0022|],\n        confusion =(\n            [\n                [3; 1; 1]\n                [1; 2; 0]\n                [2; 0; 4]\n            ]\n            |\u003E array2D\n            |\u003E Matrix.Generic.ofArray2D\n        )\n    )\n(**\n- from predictions and actual labels of any type using \u0060MultiLabelConfusionMatrix.ofPredictions\u0060, additionally passing the labels\n*)\nMultiLabelConfusionMatrix.ofPredictions(\n    labels = [|\u0022A\u0022; \u0022B\u0022; \u0022C\u0022|],\n    actual = [|\u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022B\u0022; \u0022B\u0022; \u0022B\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022|],\n    predictions = [|\u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022B\u0022; \u0022C\u0022; \u0022B\u0022; \u0022B\u0022; \u0022A\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022A\u0022; \u0022A\u0022|]\n)\n(***include-it***)\n\n(**\n\nIt is however not as easy to extract comparable metrics directly from this matrix. \n\nTherefore, multi-label classification are most often compared using \u0060one/all-vs-rest\u0060 and \u0060micro/macro averaging\u0060 of metrics.\n\nIt is possible to derive binary \u0060one-vs-rest\u0060 confusion matrices to evaluate prediction metrics of individual labels from a multi-label confusion matrix.\n\nThis is done by taking all occurences of the label in the actual labels as positive values, and all other label occurences as negatives. The same is done for the prediction vector.\n\nAs an example, the derived binary confusion matrix for \u0060Label A\u0060 in above example would be:\n\n|       |           | Predicted | |\n| ---   |---        | ---  | ---      |\n|       |           | is A | is not A |\n|Actual | is A      |  3   |    2     |\n|       | is not A  |  3   |    6     |\n\nProgrammatically, this can be done via \u0060MultiLabelConfusionMatrix.oneVsRest\u0060\n*)\nmlcm\n|\u003E MultiLabelConfusionMatrix.oneVsRest \u0022A\u0022\n(***include-it***)\n\n(**\nBinary confusion matrices for all labels can be obtained by \u0060MultiLabelConfusionMatrix.allVsAll\u0060\n\n*)\nmlcm\n|\u003E MultiLabelConfusionMatrix.allVsAll\n|\u003E Array.iter (fun (label, cm) -\u003E printf $\u0022{label}:\\n{cm}\\n\u0022)\n(***include-output***)\n\n(**\n## Comparison Metrics\n\n\u0060Comparison Metrics\u0060 is a record type that contains (besides other things) the 21 metric shown in the table below.\n\nIt also provides static methods to perform calculation of individual metrics derived from a BinaryConfusionMatrix via the \u0060ComparisonMetrics.calculate\u003CMetric\u003E\u0060 functions:\n\n| Metric                        | Formula                                                           | API reference                                          |\n| ---                           |---                                                                | ---                                                    |\n|Sensitivity (TPR)              | $TPR = \\frac{TP}{TP\u002BTN}$                                          | [ComparisonMetrics.calculateSensitivity            ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateSensitivity            ) |\n|Specificity (TNR)              | $TNR = \\frac{TN}{TN\u002BTP}$                                          | [ComparisonMetrics.calculateSpecificity            ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateSpecificity            ) |\n|Precision (PPV)                | $PPV = \\frac{TP}{TP\u002BFP}$                                          | [ComparisonMetrics.calculatePrecision              ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePrecision              ) |\n|NegativePredictiveValue (NPV)  | $NPV = \\frac{TN}{TN\u002BFN}$                                          | [ComparisonMetrics.calculateNegativePredictiveValue](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateNegativePredictiveValue) |\n|Missrate (FNR)                 | $FNR = \\frac{FN}{FN\u002BTP}$                                          | [ComparisonMetrics.calculateMissrate               ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateMissrate               ) |\n|FallOut (FPR)                  | $FPR = \\frac{FP}{FP\u002BTN}$                                          | [ComparisonMetrics.calculateFallOut                ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateFallOut                ) |\n|FalseDiscoveryRate (FDR)       | $FDR = \\frac{FP}{FP\u002BTP}$                                          | [ComparisonMetrics.calculateFalseDiscoveryRate     ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateFalseDiscoveryRate     ) |\n|FalseOmissionRate (FOR)        | $FOR = \\frac{FN}{FN\u002BTN}$                                          | [ComparisonMetrics.calculateFalseOmissionRate      ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateFalseOmissionRate      ) |\n|PositiveLikelihoodRatio (LR\u002B)  | $LR\u002B = \\frac{TPR}{FPR}$                                           | [ComparisonMetrics.calculatePositiveLikelihoodRatio](/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePositiveLikelihoodRatio) |\n|NegativeLikelihoodRatio (LR-)  | $LR- = \\frac{FNR}{TNR}$                                           | [ComparisonMetrics.calculateNegativeLikelihoodRatio](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateNegativeLikelihoodRatio) |\n|PrevalenceThreshold (PT)       | $PT = \\frac{\\sqrt{FPR}}{\\sqrt{TPR}\u002B\\sqrt{FPR}}$                   | [ComparisonMetrics.calculatePrevalenceThreshold    ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePrevalenceThreshold    ) |\n|ThreatScore (TS)               | $TS = \\frac{TP}{TP\u002BFN\u002BFP}$                                        | [ComparisonMetrics.calculateThreatScore            ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateThreatScore            ) |\n|Prevalence                     | $Prevalence = \\frac{P}{P\u002BN}$                                      | [ComparisonMetrics.calculatePrevalence             ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePrevalence             ) |\n|Accuracy (ACC)                 | $ACC = \\frac{TP\u002BTN}{TP\u002BTN\u002BFP\u002BFN}$                                 | [ComparisonMetrics.calculateAccuracy               ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateAccuracy               ) |\n|BalancedAccuracy (BA)          | $BA = \\frac{TPR\u002BTNR}{2}$                                          | [ComparisonMetrics.calculateBalancedAccuracy       ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateBalancedAccuracy       ) |\n|F1 Score                       | $F1 = \\frac{2TP}{2TP\u002BFP\u002BFN}$                                      | [ComparisonMetrics.calculateF1                     ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateF1                     ) |\n|PhiCoefficient (MCC)           | $MCC = \\frac{TP*TN-FP*FN}{\\sqrt{(TP\u002BFP)(TP\u002BFN)(TN\u002BFP)(TN\u002BFN)}}$   | [ComparisonMetrics.calculatePhiCoefficient         ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculatePhiCoefficient         ) |\n|FowlkesMallowsIndex (FM)       | $FM = \\frac{}{}$   | [ComparisonMetrics.calculateFowlkesMallowsIndex    ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateFowlkesMallowsIndex    ) |\n|Informedness (BM)              | $BM = \\frac{}{}$   | [ComparisonMetrics.calculateInformedness           ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateInformedness           ) |\n|Markedness (MK)                | $MK = \\frac{}{}$   | [ComparisonMetrics.calculateMarkedness             ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateMarkedness             ) |\n|DiagnosticOddsRatio (DOR)      | $DOR = \\frac{}{}$   | [ComparisonMetrics.calculateDiagnosticOddsRatio    ](/reference/fsharp-stats-testing-comparisonmetrics.html#calculateDiagnosticOddsRatio    ) |\n\n### ComparisonMetrics for binary comparisons\n\nYou can create the \u0060ComparisonMetrics\u0060 record in various ways:\n\n- directly from obtained TP/TN/FP/FN values using \u0060ComparisonMetrics.create\u0060\n*)\nComparisonMetrics.create(3,2,1,1)\n(**\n- From a \u0060BinaryConfusionMatrix\u0060 using \u0060ComparisonMetrics.create\u0060\n*)\nlet bcm = BinaryConfusionMatrix.ofPredictions(1,actual,predicted)\nComparisonMetrics.create(bcm)\n(**\n- from predictions and actual labels of any type using \u0060ComparisonMetrics.ofBinaryPredictions\u0060, additionally passing which label is the \u0022positive\u0022 label\n*)\nComparisonMetrics.ofBinaryPredictions(1,actual,predicted)\n(**\n- from boolean predictions and actual labels using \u0060BinaryConfusionMatrix.ofBinaryPredictions\u0060\n*)\nComparisonMetrics.ofBinaryPredictions(actualBool, predictedBool)\n(***include-it***)\n\n(**\n### ComparisonMetrics for multi-label comparisons\n\nsee also: https://cran.r-project.org/web/packages/yardstick/vignettes/multiclass.html\n\nTo evaluate individual label prediction metrics, you can create comparison metrics for each individual label confusion matrix obtained by \u0060MultiLabelConfusionMatrix.allVsAll\u0060:\n*)\n\nmlcm\n|\u003E MultiLabelConfusionMatrix.allVsAll\n|\u003E Array.map (fun (label,cm) -\u003E label, ComparisonMetrics.create(cm))\n|\u003E Array.iter(fun (label,metrics) -\u003E printf $\u0022Label {label}:\\n\\tSpecificity:%.3f{metrics.Specificity}\\n\\tAccuracy:%.3f{metrics.Accuracy}\\n\u0022)\n(***include-output***)\n\n(**\n#### Macro-averaging metrics\n\nMacro averaging averages the metrics obtained by calculating the metric of interest for each \u0060one-vs-rest\u0060 binary confusion matrix created from the multi-label confusion matrix..\n\nSo if you for example want to calculate the macro-average Sensitivity(TPR) $TPR_{macro}$ of a multi-label prediction, this is obtained by averaging the $TPR_i$ of each individual \u0060one-vs-rest\u0060 label prediction for all $i = 1 .. k$ labels:\n\n$$\nTPR_{macro} = \\frac1k\\sum_{i=1}^{k}TPR_i\n$$\n\nmacro average metrics can be obtained either from multiple metrics, a multi-label confusion matrix, or a sequence of binary confusion matrices\n\n*)\nComparisonMetrics.macroAverage([ComparisonMetrics.create(3,6,3,2); ComparisonMetrics.create(2,10,1,1); ComparisonMetrics.create(4,7,1,2)] )\nComparisonMetrics.macroAverage(mlcm)\nComparisonMetrics.macroAverage(mlcm |\u003E MultiLabelConfusionMatrix.allVsAll |\u003E Array.map snd)\n\n(**\nor directly from predictions and actual labels of any type using \u0060ComparisonMetrics.macroAverageOfMultiLabelPredictions\u0060, additionally passing the labels\n*)\nComparisonMetrics.macroAverageOfMultiLabelPredictions(\n    labels = [|\u0022A\u0022; \u0022B\u0022; \u0022C\u0022|],\n    actual = [|\u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022B\u0022; \u0022B\u0022; \u0022B\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022|],\n    predictions = [|\u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022B\u0022; \u0022C\u0022; \u0022B\u0022; \u0022B\u0022; \u0022A\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022A\u0022; \u0022A\u0022|]\n)\n(***include-it***)\n\n(**\n\n#### Micro-averaging metrics\n\n\nMicro aggregates the \u0060one-vs-rest\u0060 binary confusion matrices created from the multi-label confusion matrix, and then calculates the metric from the aggregated (TP/TN/FP/FN) values.\n\nSo if you for example want to calculate the micro-average Sensitivity(TPR) $TPR_{micro}$ of a multi-label prediction, this is obtained by summing each individual \u0060one-vs-rest\u0060 label prediction\u0027s $TP$ and $TN$ and obtaining $TPR_{micro}$ by\n\n$$\nTPR_{micro} = \\frac{TP_1 \u002B TP_2 .. \u002B TP_k}{(TP_1 \u002B TP_2 .. \u002B TP_k)\u002B(TN_1 \u002B TN_2 .. \u002B TN_k)}\n$$\n\nmicro average metrics can be obtained either from multiple binary confusion matrices or a multi-label confusion matrix\n\n*)\nComparisonMetrics.microAverage([BinaryConfusionMatrix.create(3,6,3,2); BinaryConfusionMatrix.create(2,10,1,1); BinaryConfusionMatrix.create(4,7,1,2)] )\nComparisonMetrics.microAverage(mlcm)\n\n(**\nor directly from predictions and actual labels of any type using \u0060ComparisonMetrics.macroAverageOfMultiLabelPredictions\u0060, additionally passing the labels\n*)\nComparisonMetrics.microAverageOfMultiLabelPredictions(\n    labels = [|\u0022A\u0022; \u0022B\u0022; \u0022C\u0022|],\n    actual = [|\u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022B\u0022; \u0022B\u0022; \u0022B\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022|],\n    predictions = [|\u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022B\u0022; \u0022C\u0022; \u0022B\u0022; \u0022B\u0022; \u0022A\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022A\u0022; \u0022A\u0022|]\n)\n(***include-it***)\n\n(**\n### Creating threshold-dependent metric maps\n\nPredictions usually have a confidence or score attached, which indicates how \u0022sure\u0022 the predictor is to report a label for a certain input. \n\nPredictors can be compared by comparing the relative frequency distributions of metrics of interest for each possible (or obtained) confidence value.\n\nTwo prominent examples are the **Receiver Operating Characteristic (ROC)** or the **Precision-Recall metric**\n\n#### For binary predictions\n\n*)\nComparisonMetrics.binaryThresholdMap(\n    [true;true;true;true;false;false;false],\n    [0.9 ;0.6 ;0.7 ; 0.2 ; 0.7; 0.3 ; 0.1]\n)\n|\u003E Array.iter (fun (threshold,cm) -\u003E printf $\u0022Threshold {threshold}:\\n\\tSensitivity: %.2f{cm.Sensitivity}\\n\\tPrecision : %.2f{cm.Precision}\\n\\tFallout : %.2f{cm.FallOut}\\n\\tetc...\\n\u0022)\n(***include-output***)\n\n\n(**\n#### For multi-label predictions\n*)\n\nComparisonMetrics.multiLabelThresholdMap(\n    actual = \n             [|\u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022B\u0022; \u0022B\u0022; \u0022B\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022|],\n    predictions = [|\n        \u0022A\u0022, [|0.8; 0.7; 0.9; 0.4; 0.3; 0.1; 0.3; 0.5; 0.1; 0.1; 0.1; 0.3; 0.5; 0.4|]\n        \u0022B\u0022, [|0.0; 0.2; 0.0; 0.5; 0.1; 0.8; 0.7; 0.4; 0.0; 0.1; 0.1; 0.0; 0.1; 0.3|]\n        \u0022C\u0022, [|0.2; 0.3; 0.1; 0.1; 0.6; 0.1; 0.1; 0.1; 0.9; 0.8; 0.8; 0.7; 0.4; 0.3|]\n    |]\n)\n\n(**\n#### ROC curve example\n\nA receiver operating characteristic curve, or ROC curve, is a graphical plot that illustrates the diagnostic ability of a binary classifier system as its discrimination threshold is varied.\n\nThe ROC curve is created by plotting the true positive rate (TPR, sensitivity) against the false positive rate (FPR, fallout) at various threshold settings\n\nWhen using normalized units, the area under the curve (often referred to as simply the AUC) is equal to the probability that a classifier will rank a randomly chosen positive instance higher than a randomly chosen negative one (assuming \u0027positive\u0027 ranks higher than \u0027negative\u0027). \nIn other words, when given one randomly selected positive instance and one randomly selected negative instance, AUC is the probability that the classifier will be able to tell which one is which.\n\n##### Binary\n*)\nopen Plotly.NET\nopen Plotly.NET.LayoutObjects\nopen FSharp.Stats.Integration\n\nlet binaryROC = \n    ComparisonMetrics.calculateROC(\n        [true;true;true;true;false;false;false],\n        [0.9 ;0.6 ;0.7 ; 0.2 ; 0.7; 0.3 ; 0.1]\n    )\n\nlet auc = binaryROC |\u003E NumericalIntegration.definiteIntegral Trapezoidal\n\nlet binaryROCChart =\n    [\n        Chart.Line(binaryROC, Name= $\u00222 label ROC, AUC = %.2f{auc}\u0022)\n        |\u003E Chart.withLineStyle(Shape = StyleParam.Shape.Vh)\n        Chart.Line([0.,0.; 1.,1.0], Name = \u0022no skill\u0022, LineDash = StyleParam.DrawingStyle.Dash, LineColor = Color.fromKeyword Grey)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n    |\u003E Chart.withLegend(Legend.init(XAnchor=StyleParam.XAnchorPosition.Right, YAnchor=StyleParam.YAnchorPosition.Bottom, X = 0.5, Y = 0.1))\n    |\u003E Chart.withXAxisStyle(\u0022TPR\u0022, MinMax=(0.,1.))\n    |\u003E Chart.withYAxisStyle(\u0022FPR\u0022, MinMax=(0.,1.))\n    |\u003E Chart.withTitle \u0022Binary receiver operating characteristic example\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nbinaryROCChart\n#endif // IPYNB\n\n(***hide***)\nbinaryROCChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n##### Multi-label\n\n*)\n\nlet multiLabelROC = \n    ComparisonMetrics.calculateMultiLabelROC(\n        actual = [|\u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022A\u0022; \u0022B\u0022; \u0022B\u0022; \u0022B\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022; \u0022C\u0022|],\n        predictions = [|\n            \u0022A\u0022, [|0.8; 0.7; 0.9; 0.4; 0.3; 0.1; 0.2; 0.5; 0.1; 0.1; 0.1; 0.3; 0.5; 0.4|]\n            \u0022B\u0022, [|0.0; 0.1; 0.0; 0.5; 0.1; 0.8; 0.7; 0.4; 0.0; 0.1; 0.1; 0.0; 0.1; 0.3|]\n            \u0022C\u0022, [|0.2; 0.2; 0.1; 0.1; 0.6; 0.1; 0.1; 0.1; 0.9; 0.8; 0.8; 0.7; 0.4; 0.3|]\n        |]\n    )\n\nlet aucMap = \n    multiLabelROC \n    |\u003E Map.map (fun label roc -\u003E roc |\u003E NumericalIntegration.definiteIntegral Trapezoidal)\n\nlet multiLabelROCChart =\n    [\n        yield!  \n            multiLabelROC\n            |\u003E Map.toArray\n            |\u003E Array.map (fun (label,roc) -\u003E \n                Chart.Line(roc, Name= $\u0022{label} ROC, AUC = %.2f{aucMap[label]}\u0022)\n                |\u003E Chart.withLineStyle(Shape = StyleParam.Shape.Vh)\n            )\n        Chart.Line([0.,0.; 1.,1.0], Name = \u0022no skill\u0022, LineDash = StyleParam.DrawingStyle.Dash, LineColor = Color.fromKeyword Grey)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n    |\u003E Chart.withLegend(Legend.init(XAnchor=StyleParam.XAnchorPosition.Right, YAnchor=StyleParam.YAnchorPosition.Bottom, X = 0.5, Y = 0.1))\n    |\u003E Chart.withXAxisStyle(\u0022TPR\u0022, MinMax=(0.,1.))\n    |\u003E Chart.withYAxisStyle(\u0022FPR\u0022, MinMax=(0.,1.))\n    |\u003E Chart.withTitle \u0022Binary receiver operating characteristic example\u0022\n\n\n(*** condition: ipynb ***)\n#if IPYNB\nmultiLabelROCChart\n#endif // IPYNB\n\n(***hide***)\nmultiLabelROCChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/FSharp.Stats/Correlation.html","title":"Correlation","content":"(**\n---\ntitle: Correlation\nindex: 5\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(** \n\n# Correlation\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Correlation.ipynb)\n\n_Summary_: This tutorial demonstrates how to autocorrelate a signal in FSharp.Stats\n\n### Table of contents\n\n - [Sequence correlations](#Sequence correlations)\n - [Matrix correlations](#Matrix correlations)\n - [Autocorrelation](#Autocorrelation)\n\n## Sequence correlations\n\n*)\nopen FSharp.Stats\nopen FSharp.Stats.Correlation\n\nlet sampleA = [|3.4;2.5;6.5;0.2;-0.1|]\nlet sampleB = [|3.1;1.5;4.2;1.2;2.0|]\n\nlet pearson =   Seq.pearson sampleA sampleB\nlet pearsonW =  Seq.pearsonWeighted  sampleA sampleB [1.;1.;1.;2.;1.;]\nlet spearman =  Seq.spearman sampleA sampleB\nlet kendall =   Seq.kendall sampleA sampleB\nlet bicor =     Seq.bicor sampleA sampleB\n\nlet table = \n    let header = [\u0022\u003Cb\u003ECorrelation measure\u003C/b\u003E\u0022;\u0022value\u0022]\n    let rows = \n        [\n        [\u0022Pearson\u0022;                 sprintf \u0022%3f\u0022 pearson ]       \n        [\u0022Pearson weighted\u0022;        sprintf \u0022%3f\u0022 pearsonW]\n        [\u0022Spearman\u0022;                sprintf \u0022%3f\u0022 spearman]\n        [\u0022Kendall\u0022;                 sprintf \u0022%3f\u0022 kendall ]\n        [\u0022Biweight midcorrelation\u0022; sprintf \u0022%3f\u0022 bicor   ]     \n        ]\n    Chart.Table(header, rows, HeaderFillColor = Color.fromHex \u0022#deebf7\u0022, CellsFillColor= Color.fromString \u0022lightgrey\u0022) \n\n(*** condition: ipynb ***)\n#if IPYNB\ntable\n#endif // IPYNB\n\n(***hide***)\ntable |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Matrix correlations\n\n*)\nlet m = \n    [\n        [0.4;1.2;4.5]\n        [1.2;0.5;-0.1]\n        [5.0;19.8;2.4]\n        [-6.0;-2.;0.0]\n    ]\n    |\u003E matrix\n\nlet pearsonCorrelationMatrix = \n    Correlation.Matrix.rowWiseCorrelationMatrix Correlation.Seq.pearson m\n\n\nlet table2 = \n    //Assign a color to every cell seperately. Matrix must be transposed for correct orientation.\n    let cellcolors = \n        //map color from value to hex representation\n        let mapColor min max value = \n            let proportion =  int (255. * (value - min) / (max - min))\n            Color.fromARGB 1 (255 - proportion) 255  proportion\n        pearsonCorrelationMatrix\n        |\u003E Matrix.toJaggedArray\n        |\u003E JaggedArray.map (mapColor -1. 1.)\n        |\u003E JaggedArray.transpose\n        |\u003E Array.map Color.fromColors\n        |\u003E Color.fromColors\n\n    let values = \n        pearsonCorrelationMatrix \n        |\u003E Matrix.toJaggedArray\n        |\u003E JaggedArray.map (sprintf \u0022%.3f\u0022)\n\n    Chart.Table([\u0022colindex 0\u0022;\u0022colindex 1\u0022;\u0022colindex 2\u0022;\u0022colindex 3\u0022],values,CellsFillColor=cellcolors)\n\n(*** condition: ipynb ***)\n#if IPYNB\ntable2\n#endif // IPYNB\n\n(***hide***)\ntable2 |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\n## Autocorrelation\n\n[Autocorrelation](https://en.wikipedia.org/wiki/Autocorrelation), also known as serial correlation, is the correlation of a signal with a delayed copy of itself as a function of delay. \nInformally, it is the similarity between observations as a function of the time lag between them. \nThe analysis of autocorrelation is a mathematical tool for finding repeating patterns, such as the presence of a periodic signal obscured by noise, or identifying the missing fundamental frequency in a signal implied by its harmonic frequencies.\n\n*)\n\n\nopen FSharp.Stats.Distributions.Continuous\nopen FSharp.Stats.Correlation\n\nlet lags = [0..100]\nlet x = [0. .. 100.]\n\n//// Autocorrelation of a gaussian signal\nlet gaussPDF = Normal.PDF 10. 2.\nlet yGauss = x |\u003E List.map gaussPDF |\u003E vector\n\nlet autoCorrGauss = lags |\u003E List.map (fun lag -\u003E autoCorrelation lag yGauss)\n\nopen Plotly.NET\n\nlet gaussAC =\n    Chart.Point(lags,autoCorrGauss)\n    |\u003E Chart.withTraceName \u0022Autocorrelation\u0022\n    |\u003E Chart.withTitle \u0022Autocorrelation of a gaussian sine wave\u0022\n    |\u003E fun c -\u003E \n        [\n            Chart.Point(x,yGauss,Name=\u0022gaussian\u0022) |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n            c |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n        ]  \n        |\u003E Chart.Grid(2,1)\n\n(*** condition: ipynb ***)\n#if IPYNB\ngaussAC\n#endif // IPYNB\n\n(***hide***)\ngaussAC |\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/FSharp.Stats/Covariance.html","title":"Covariance","content":"(**\n---\ntitle: Covariance\nindex: 6\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(** \n\n#Covariance\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Covariance\n.ipynb)\n\n_Summary:_ This tutorial explains how to investigate the covariance of two samples with FSharp.Stats\n\nLets first define some sample data:\n*)\n\n\nopen FSharp.Stats\n\nlet rnd = System.Random()\nlet error() = rnd.Next(11)\n\nlet sampleA = Vector.init 50 (fun x -\u003E float x)\nlet sampleB = Vector.init 50 (fun x -\u003E float (x \u002B error()))\nlet sampleBHigh = sampleB |\u003E Vector.map (fun x -\u003E 200. \u002B x)\nlet sampleC = Vector.init 50 (fun x -\u003E 100. - float (x \u002B 3 * error()))\nlet sampleD = Vector.init 50 (fun x -\u003E 100. \u002B float (10 * error()))\n\n\nlet sampleChart =\n    [\n        Chart.Point(sampleA,sampleB,\u0022AB\u0022)\n        Chart.Point(sampleA,sampleC,\u0022AC\u0022)\n        Chart.Point(sampleA,sampleD,\u0022AD\u0022)  \n        Chart.Point(sampleA,sampleBHigh,\u0022AB\u002B\u0022)   \n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022x\u0022 \u0022y\u0022\n    |\u003E Chart.withTitle \u0022test cases for covariance calculation\u0022\n\n(**\n\nThe [covariance](https://en.wikipedia.org/wiki/Covariance) of two samples describes the relationship of both variables. If one variable \ntends to be high if its pair is high also, the covariance is positive. If on variable is low while its pair is high\nthe covariance is negative. If there is no (monotone) relationship between both variables, the covariance is zero. \n\nA positive covariance indicates a positive slope of a regression line, while a negative covariance indicates a negative slope.\nIf the total population is given the covPopulation without Bessel\u0027s correction can be calculated.\n\n$\\operatorname{cov}(X, Y) = \\operatorname{E}{\\big[(X - \\operatorname{E}[X])(Y - \\operatorname{E}[Y])\\big]}$\n\n_Note: The amplitude of covariance does not correlate with the slope, neither it correlates with the spread of the data points from the regression line._\n\nA standardized measure for how well the data lie on the regression line is given by correlation analysis. The pearson correlation coefficient\nis defined as \n\n$\\rho_{X,Y}= \\frac{\\operatorname{cov}(X,Y)}{\\sigma_X \\sigma_Y}$\n\n**References:**\n\n- Fahrmeir L et al., Statistik - Der Weg zur Datenanalyse, 8. Auflage, doi 10.1007/978-3-662-50372-0\n\n\u0060cov\u0060 and \u0060covPopulation\u0060 are available as sequence (and other collections) extensions:\n\n*)\n\nlet covAB     = Vector.cov sampleA sampleB\nlet covAC     = Vector.cov sampleA sampleC\nlet covAD     = Vector.cov sampleA sampleD\nlet covABHigh = Vector.cov sampleA sampleBHigh\n\nlet covPopAB     = Vector.covPopulation sampleA sampleB\nlet covPopAC     = Vector.covPopulation sampleA sampleC\nlet covPopAD     = Vector.covPopulation sampleA sampleD\nlet covPopABHigh = Vector.covPopulation sampleA sampleBHigh\n\nopen Correlation\nlet pearsonAB     = Seq.pearson sampleA sampleB\nlet pearsonAC     = Seq.pearson sampleA sampleC\nlet pearsonAD     = Seq.pearson sampleA sampleD\nlet pearsonABHigh = Seq.pearson sampleA sampleBHigh\n\n(*** condition: ipynb ***)\n#if IPYNB\nsampleChart\n#endif // IPYNB\n\n(***hide***)\nsampleChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(***hide***)\nlet covs = \n    sprintf \u0022\u0022\u0022Covariance of the presented four test cases\nAB (blue)   cov: %.2f    covPopulation: %.2f   pearson: %.3f\nAC (orange) cov: %.1f    covPopulation: %.1f   pearson: %.2f\nAD (green)  cov: %.2f    covPopulation: %.2f   pearson: %.3f\nAB\u002B(red)    cov: %.2f    covPopulation: %.2f   pearson: %.3f\u0022\u0022\u0022 \n        covAB      covPopAB     pearsonAB    \n        covAC      covPopAC     pearsonAC    \n        covAD      covPopAD     pearsonAD    \n        covABHigh  covPopABHigh pearsonABHigh\n\n(*** include-value:covs ***)"},{"uri":"https://fslab.org/FSharp.Stats/CrossValidation.html","title":"Cross validation","content":"(**\n---\ntitle: Cross validation\nindex: 10\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(**\n# Cross validation\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=CrossValidation.ipynb)\n\n_Summary:_ this tutorial demonstrates how to perform several types of cross validation with FSharp.Stats.\n\n### Table of contents\n\n - [Leave-one-out cross validation (LOOCV)](#Leave-one-out-cross-validation-LOOCV)\n    - [Procedure](#Procedure)\n    - [Polynomial loocv](#Polynomial-loocv)\n    - [Smoothing spline loocv](#Smoothing-spline-loocv)\n - [k fold cross validation](#k-fold-cross-validation)\n - [Shuffle and split cross validation](#Shuffle-and-split-cross-validation)\n\n## Leave-one-out cross validation (LOOCV)\n\nWhen fitting a data set it often comes down to the selection of the optimal fitting parameter(s).\nA method to determine these is given by the leave-one-out cross validation (LOOCV). Thereby, the data set is fitted with a\ngiven parameter range (smoothing strength, polynomial order etc.) in order to select the best. \n\n### Procedure\nIn each iteration, one data point is excluded from the fitting procedure. The coefficients are determined \nbased on the remaining (n-1) data points. The difference of the excluded point with its corresponding fitted point is measured. \nIn a two-dimensional problem it is the y-intercept of f(xi) and the y_orig at xi.\n\nAfter every data point was excluded once, the average (squared) distance is calculated and assigned to the corresponding fitting parameter (polynomial order or smoothing strength).\nThe parameter of the model that shows the minimal average error is the best under the given assumptions. It shows the best compromise between over- and underfitting respectively.\n\n### Polynomial loocv\n\nlet\u0027s first create some polynomial fits to cross validate:\n*)\nopen FSharp.Stats\nopen FSharp.Stats.Fitting\nopen LinearRegression.OrdinaryLeastSquares\n\nlet xV = vector [1. .. 10.]                            \nlet yV = vector [1.;20.;51.;40.;37.;6.;-10.;-5.;0.;10.]\n\n// the fitting function fits a polynomial of order \u0027order\u0027 to the training data set (xTrain and yTrain) and applies it to xTest\nlet getFitFuncPolynomial xTrain yTrain (xTest:RowVector\u003Cfloat\u003E) order = \n    let xDat = xTrain |\u003E Matrix.toVector\n    let coeffs  = Polynomial.coefficient order xDat yTrain\n    let fit     = Polynomial.fit order coeffs (xTest.[0])\n    fit\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\nlet rawchart() = \n    Chart.Point (xV,yV) \n    |\u003E Chart.withTraceName \u0022raw data\u0022\n\nlet chartOrderOpt = \n    [1 .. 2 .. 10]\n    |\u003E List.map (fun order -\u003E \n        let coeffs = Polynomial.coefficient order xV yV\n        let fit = Polynomial.fit order coeffs\n        [1. .. 0.2 .. 10.]\n        |\u003E List.map (fun x -\u003E x,fit x)\n        |\u003E Chart.Line\n        |\u003E Chart.withTraceName (sprintf \u0022order=%i\u0022 order)\n        )\n    |\u003E fun x -\u003E Chart.combine (rawchart()::x)\n    |\u003E Chart.withTitle \u0022polynomial fits\u0022\n    |\u003E Chart.withAxisTitles \u0022x\u0022 \u0022y\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nchartOrderOpt\n#endif // IPYNB\n\n(***hide***)\nchartOrderOpt |\u003E GenericChart.toChartHTML \n(***include-it-raw***)\n\n(**\nAnd then crossvalidate across the polynomial orders:\n*)\n\n// the error is calculated as the squared difference of fitted and original y value\nlet error (f1:float) f2 = pown (f1 - f2) 2\n\n/// Leave-one-out cross validation. Returns the mean squared error of each leave-out at the \n/// specific polynomial order. Minimize for model selection.\nlet loocvPolynomial (xData:Vector\u003Cfloat\u003E) (yData:Vector\u003Cfloat\u003E) order =\n    let xDataMat = Matrix.ofVector xData\n    let getFitFuncPol xTrain yTrain (xTest:RowVector\u003Cfloat\u003E) = \n        getFitFuncPolynomial xTrain yTrain xTest order\n    let meanSquaredError = CrossValidation.loocv xDataMat yData getFitFuncPol error\n    \n    meanSquaredError\n\n// polynomial orders that should be checked\nlet ordersToCheck = [|1 .. 10|]\n\nlet errorPol = \n    ordersToCheck \n    |\u003E Array.map (fun order -\u003E \n        let error = loocvPolynomial xV yV order\n        order,error)\n\nlet chartPol = \n    errorPol \n    |\u003E Chart.Line \n    |\u003E Chart.withAxisTitles \u0022polynomial order\u0022 \u0022mean error\u0022 \n    |\u003E Chart.withTitle \u0022leave one out cross validation (polynomial)\u0022\n    \nlet result = sprintf \u0022The minimal error is obtained by order=%i\u0022 (errorPol |\u003E Seq.minBy snd |\u003E fst)\n\n(*** condition: ipynb ***)\n#if IPYNB\nchartPol\n#endif // IPYNB\n\n(***hide***)\nchartPol |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(*** include-value:result ***)\n\n(**\n### Smoothing spline loocv\nA smoothing spline is a non-parametric fitting procedure, fitting cubic polynomials in each interval given by the basis points.\n\nlet\u0027s first create some smoothing splines to cross validate:\n\n*)\n\n// the fitting function fits a smoothing spline with smoothing factor lambda to the training data set (xTrain and yTrain) and applies it to xTest\nlet getFitFuncSpline xDat yDat (xDatTrain: RowVector\u003Cfloat\u003E) lambda =\n    let xDatVec = xDat |\u003E Matrix.toVector\n    let zippedData = Seq.zip xDatVec yDat |\u003E Array.ofSeq\n    let xValTest = xDatTrain.[0]\n    Spline.smoothingSpline zippedData (xDat |\u003E Array.ofSeq) lambda xValTest\n\n    /// in loocv the border points are chosen so that the support range of the training data set does not cover the test point.\n    /// if splines are used, that are not defined outside the border points use the following:\n    //let xDatSupport = Intervals.create (xDatVec |\u003E Seq.min) (xDatVec |\u003E Seq.max)\n    //if Intervals.liesInInterval xValTest xDatSupport then \n    //Spline.smoothingSpline zippedData (xDat |\u003E Array.ofSeq) lambda xValTest\n    //else nan\n\nlet chartSpline = \n    [0.0002;0.002;0.0216;0.2;2.;20.]\n    |\u003E List.map (fun lambda -\u003E \n        let fit = Spline.smoothingSpline (Seq.zip xV yV |\u003E Array.ofSeq) (Array.ofSeq xV) lambda\n        [1. .. 0.2 .. 10.]\n        |\u003E List.map (fun x -\u003E x,fit x)\n        |\u003E Chart.Line\n        |\u003E Chart.withTraceName (sprintf \u0022l=%.4f\u0022 lambda)\n        )\n    |\u003E fun x -\u003E \n        Chart.combine (rawchart()::x)\n    |\u003E Chart.withAxisTitles \u0022x\u0022 \u0022y\u0022\n    |\u003E Chart.withTitle \u0022smoothing splines\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nchartSpline\n#endif // IPYNB\n\n(***hide***)\nchartSpline |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\nAnd then crossvalidate across different lambda values:\n*)\n\n// the error is calculated as the squared difference of fitted and original y value\nlet errorSpl (f1:float) f2 = \n    // if xValue is outside of support area of the fitted model (some smoothing spline algorithms), the error should report 0.\n    //if nan.Equals f1 then 0.\n    //else pown (f1 - f2) 2\n    pown (f1 - f2) 2\n\n/// Leave-one-out cross validation. Returns the mean squared error of each leave-out at the \n/// specific regularization parameter (lambda). Minimize the (MSE) for model selection.\nlet loocvSmoothingSpline (xData:Vector\u003Cfloat\u003E) (yData:Vector\u003Cfloat\u003E) lambda =\n    let xDataMat = Matrix.ofVector xData\n    let getFitFuncSpl xDat yDat (xDatTrain: RowVector\u003Cfloat\u003E) =\n        getFitFuncSpline xDat yDat xDatTrain lambda\n    \n    CrossValidation.loocv xDataMat yData getFitFuncSpl errorSpl\n\n// smoothing parameter = lambda = regularization parameter\nlet lambdasToCheck = [|1. .. 15.|] |\u003E Array.map (fun i -\u003E 0.0001 * i**3.)\n\nlet errorSpline = \n    lambdasToCheck \n    |\u003E Array.map (fun lambda -\u003E \n        //basisPoints define, where the knots of the spline are located\n        let error = loocvSmoothingSpline xV yV lambda\n        lambda,error)\n\nlet chartSplineError = \n    errorSpline \n    |\u003E Chart.Line \n    |\u003E Chart.withAxisTitles \u0022lambda\u0022 \u0022mean error\u0022\n    |\u003E Chart.withTitle \u0022leave one out cross validation (smoothing spline)\u0022\n    \nlet resultSpline = sprintf \u0022The minimal error is obtained by lambda=%f\u0022 (errorSpline |\u003E Seq.minBy snd |\u003E fst)\n\n(*** condition: ipynb ***)\n#if IPYNB\nchartSplineError\n#endif // IPYNB\n\n(***hide***)\nchartSplineError |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(*** include-value:resultSpline ***)\n\n(**\n## k fold cross validation\n\nThe k fold cross validation (kfcv) is a generalized form of the loocv. Rather than excluding every data point separately, kfcv\nallows the exclusion of data chunks with a defined fraction of the data points. When using k=10, the data is split up into 10 chunks of sub data sets each \ncontaining 10% of the data set. \n\nIn each loop one chunk is excluded (test data), while the other 9 chunks serve as training data. After 10 (k) loops every single point was evaluated as test data set once\nand k-1 times as training data. The selection of the subset chunks is random and can be repeated in several iterations.\nThe output contains the average error together with the standardDeviation computed by the given function.\n*)\n\n//repeated k fold cross validation for polynomials\nlet repeatedKFoldPolynomial k (xData: Vector\u003Cfloat\u003E) (yData: Vector\u003Cfloat\u003E) order =\n    let xDataMat = xData |\u003E Matrix.Generic.ofVector\n    \n    let getFitFuncPol xTrain yTrain (xTest:RowVector\u003Cfloat\u003E) = \n        getFitFuncPolynomial xTrain yTrain xTest order\n        \n    CrossValidation.repeatedKFold k 10 xDataMat yData getFitFuncPol error Seq.stDev\n\n//creates an output for 10 iterations where defined 20 % of the data set are taken as testing data set\nlet kfPolynomial order = repeatedKFoldPolynomial 5 xV yV order\n\n//repeated k fold cross validation for smoothing splines\nlet repeatedKFoldSpline k (xData: Vector\u003Cfloat\u003E) (yData: Vector\u003Cfloat\u003E) lambda =\n    let xDataMat = xData |\u003E Matrix.ofVector\n    \n    let getFitFuncSpl xDat yDat (xDatTrain: RowVector\u003Cfloat\u003E) =\n        getFitFuncSpline xDat yDat xDatTrain lambda\n\n    CrossValidation.repeatedKFold k 10 xDataMat yData getFitFuncSpl errorSpl Seq.stDev\n\n//creates an output for 10 iterations where defined 20 % of the data set are taken as testing data set\nlet kfSpline lambda = repeatedKFoldSpline 5 xV yV lambda\n\n(**\nThe given data set is small and therefore the mean errors show a high variability\n*)\n\nlet kfp = \n    let errorSplinekf = \n        ordersToCheck \n        |\u003E Array.map (fun order -\u003E \n            //basisPoints define, where the knots of the spline are located\n            let error = kfPolynomial order\n            (order,error.Error),error.ErrorStDev)\n        |\u003E Array.unzip\n\n    fst errorSplinekf \n    |\u003E Chart.Line \n    |\u003E Chart.withAxisTitles \u0022order\u0022 \u0022mean error\u0022\n    |\u003E Chart.withYAxis(LinearAxis.init(AxisType=AxisType.Log))\n    |\u003E Chart.withYErrorStyle (snd errorSplinekf)\n    |\u003E Chart.withTitle \u0022kfoldPolynomial error\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nkfp\n#endif // IPYNB\n\n(***hide***)\nkfp |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\nlet kfs = \n    let errorSplinekf = \n        lambdasToCheck \n        |\u003E Array.map (fun lambda -\u003E \n            //basisPoints define, where the knots of the spline are located\n            let error = kfSpline lambda\n            (lambda,error.Error),error.ErrorStDev)\n        |\u003E Array.unzip\n\n    fst errorSplinekf \n    |\u003E Chart.Line \n    |\u003E Chart.withAxisTitles \u0022lambda\u0022 \u0022mean error\u0022\n    |\u003E Chart.withYErrorStyle (snd errorSplinekf)\n    |\u003E Chart.withTitle \u0022kfoldSpline error\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nkfs\n#endif // IPYNB\n\n(***hide***)\nkfs |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n## Shuffle and split cross validation\n\nThe shuffle and split cross validation (sap) is a modified kfcv version. As in kfcv, sap\nallows the exclusion of data chunks with a defined fraction of the data points. When using p=0.3, 30% of the data are taken as testing data set \nwhile 70% serve as training data set. In sap by default only one testing set is evaluated (unlike to kfcv \nwhere every data point is once part of a training data set and k-1 times part of testing data set).\n\nSap can be performed multiple times. Each time the training data fraction is taken randomly from the original data set. Unlike in kfcv overlaps may occur.\nThe output contains the average error together with the standardDeviation computed by the given function.\n*)\n\nlet shuffleAndSplitPolynomial p iterations (xData: Vector\u003Cfloat\u003E) (yData: Vector\u003Cfloat\u003E) order =\n   let xDataMat = xData |\u003E Matrix.ofVector\n   \n   let getFitFuncPol xTrain yTrain (xTest:RowVector\u003Cfloat\u003E) = \n       getFitFuncPolynomial xTrain yTrain xTest order\n   \n   CrossValidation.shuffelAndSplit p iterations xDataMat yData getFitFuncPol error Seq.stDev\n\n//creates an output for 5 iterations where random 20 % of the data set are taken as testing data set\nlet sasPolynomial order = shuffleAndSplitPolynomial 0.2 5 xV yV order\n\nlet shuffleAndSplitSpline p iterations (xData: Vector\u003Cfloat\u003E) (yData: Vector\u003Cfloat\u003E) lambda =\n    let xDataMat = xData |\u003E Matrix.ofVector\n   \n    let getFitFuncSpl xDat yDat (xDatTrain: RowVector\u003Cfloat\u003E) =\n        getFitFuncSpline xDat yDat xDatTrain lambda\n   \n    CrossValidation.shuffelAndSplit p iterations xDataMat yData getFitFuncSpl errorSpl Seq.stDev\n\n//creates an output for 5 iterations where random 20 % of the data set are taken as testing data set\nlet sasSpline lambda = shuffleAndSplitSpline 0.2 5 xV yV lambda\n\n\n(**\nThe given data set is small and therefore the mean errors show a high variability.\n*)\n\nlet sasp = \n    let errorSplinekf = \n        ordersToCheck \n        |\u003E Array.map (fun order -\u003E \n            //basisPoints define, where the knots of the spline are located\n            let error = sasPolynomial order\n            (order,error.Error),error.ErrorStDev)\n        |\u003E Array.unzip\n\n    fst errorSplinekf \n    |\u003E Chart.Line \n    |\u003E Chart.withAxisTitles \u0022order\u0022 \u0022mean error\u0022\n    |\u003E Chart.withYAxis(LinearAxis.init(AxisType=AxisType.Log))\n    |\u003E Chart.withYErrorStyle (snd errorSplinekf)\n    |\u003E Chart.withTitle \u0022shuffle_and_split polynomial error\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nsasp\n#endif // IPYNB\n\n(***hide***)\nsasp |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\nlet sass = \n    let errorSplinekf = \n        lambdasToCheck \n        |\u003E Array.map (fun lambda -\u003E \n            //basisPoints define, where the knots of the spline are located\n            let error = sasSpline lambda\n            (lambda,error.Error),error.ErrorStDev)\n        |\u003E Array.unzip\n\n    fst errorSplinekf \n    |\u003E Chart.Line \n    |\u003E Chart.withAxisTitles \u0022lambda\u0022 \u0022mean error\u0022\n    |\u003E Chart.withYErrorStyle (snd errorSplinekf)\n    |\u003E Chart.withTitle \u0022shuffle_and_split spline error\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nsass\n#endif // IPYNB\n\n(***hide***)\nsass |\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/FSharp.Stats/Differentiation.html","title":"Differentiation","content":"(**\n---\ntitle: Differentiation\nindex: 15\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n# Numerical Differentiation\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Integration.ipynb)\n\nNumerical differentiation is used to estimate the derivative of a mathematical function using values of the function and perhaps other knowledge about the function.\n\n### Three-Point Differentiation\nFSharp.Stats implements a three point differentiation method. This method takes a set of values and their function values. For a given value xT of the set, one defines three other points which should be considered to calculate the differential at xT.\nHere follows a small snippet.\n\nFirst, we create our data. In this case our function is f(x) = x ^ 3.\n*)\nopen FSharp.Stats\n\n// x data\nlet xs = Array.init 100 (fun x -\u003E float x / 8.)\n// y data\nlet ys = Array.map (fun x -\u003E x ** 3.) xs\n\n(**\nNow we apply the threePointDifferentiation to every point starting with the second and ending with the second last. We can\u0027t do it for every point because for every point we need to have three other points in close proximity.\n*)\n\nlet y\u0027s = \n    [|\n    for i = 1 to xs.Length - 2 do\n        yield xs.[i],Integration.Differentiation.differentiateThreePoint xs ys i (i-1) (i) (i\u002B1)\n    |]\n\n(**\nWe compare the resulting values with the values of the known differential f\u0027(x) = 3x^2, here called g(x)\n*)\n\nopen Plotly.NET\n\nlet comparisonChart = \n    [\n    Chart.Point(xs,ys,Name = \u0022f(x)\u0022)\n    Chart.Point(y\u0027s,Name = \u0022f\u0027(x)\u0022)\n    Chart.Point(Array.map (fun x -\u003E x,(x ** 2.) * 3.) xs,Name = \u0022g(x)\u0022)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\ncomparisonChart\n#endif // IPYNB\n\n(***hide***)\ncomparisonChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n### Two-Point Differentiation\n\nTo calculate the approximation for the derivative, a Two-Point Differentiation calculates the difference of f(x) at x and f(x) at x\u002Bh and correlates it to h. \nThis will give better approximations the smaller h is. \nThe function uses two different mathematical approaches to decrease the error, one for h \u003E 1. and one for h \u003C 1.\n\n\u003C/br\u003E\n\n![Data model](img/Derivative.svg.png)\n\n\u003C/br\u003E\n*)\n\nopen FSharp.Stats.Integration.Differentiation.TwoPointDifferentiation\nopen FSharp.Stats.Integration.Differentiation\n\nlet testFunction x = x**2. \n\nlet test1 = differentiate 0.5 testFunction 2.\n//Result for test1 is: 4.00\n\nlet test2 = differentiate 3. testFunction 2.\n//Result for test2 is: 7.00\n\nlet test3 = differentiate 0.1 testFunction 2.\n//Result for test3 is: 4.00\n\n(**\n- The correct result for test1 (f(x) = x**2.) is assumed to be 4.\n- With a higher h (for test2 h = 3., compared to the 0.5 used in test1) the approximation error increases.\n*)\n\n(**\nYou can try and find an optimal h - value with the \u0022differentiateOptimalHBy\u0022 - function. \nThis function uses the first h-value it assumes to give good results for the numerical differentiation calculation.\nDue to this, possible error due to float precision is avoided.\nIn the following example this is not really necessary, as values are quite big.\n*)\nlet hArray = [|0.1 .. 0.1 .. 2.|]\n\nlet test4 = differentiateOptimalHBy hArray testFunction 2.\n//Result for test4 is: 4.00\n\n(**\nIf you want to use a presuggested hArray then you can use the \u0022differentiateOptimalH\u0022 function.\nThis function uses an array from 0.01 to 5e^-100 in [|0.01; 0.005; 0.001; 0.0005; 0.0001 ..|]-increments as hArray.\n*)\n\nlet test5 = differentiateOptimalH testFunction 2. \n//Result for test5 is: 4.00"},{"uri":"https://fslab.org/FSharp.Stats/Distributions.html","title":"Probability distributions","content":"(**\n---\ntitle: Probability distributions\nindex: 1\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(**\n# Probability Distributions\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Distributions.ipynb)\n\n_Summary:_ this tutorial shows how to use the various types of probability distributions in FSharp.Stats.\n\n### Table of contents\n\n- [Continuous](#Continuous)\n    - [Normal distribution](#Normal-distribution)\n    - [Multivariate normal distribution](#Multivariate-normal-distribution)\n    - [F distribution](#F-distribution)\n- [Discrete](#Discrete)\n    - [Bernoulli distribution](#Bernoulli-distribution)\n    - [Binomial distribution](#Binomial-distribution)\n    - [Hypergerometric distribution](#Hypergerometric-distribution)\n    - [Poisson distribution](#Poisson-distribution)\n    - [Gamma distribution](#Gamma-distribution)\n- [Empirical](#Empirical)\n- [Density estimation](#Density-estimation)\n- [Distance](#Distance)\n\nFSharp.Stats provides a wide range of probability distributions. Given the\ndistribution parameters they can be used to investigate their statistical properties\nor to sample non-uniform random numbers.\n\nFor every distribution the probability density function (PDF) and cumulative probability function (CDF) can be accessed.\nBy using the PDF you can access the probability for exactly X=k success states. The CDF is used when the cumulative probabilities of X\u003C=k is required.\n\n## Continuous\n\n### Normal distribution\n\nThe normal or Gaussian distribution is a very common continuous probability distribution.\nDue to the central limit theorem, randomly sampled means of a random and independent distribution tend to approximate a normal distribution\nIt describes the probability, that under a given mean and \na given dispersion (standard deviation) an event occurs exactly k times. \n\nIt is defined by two parameters N(mu,tau):\n\n  - mu = mean\n\n  - tau = standard deviation\n\nExample: The distribution of bread weights of a local manufacturer follows a normal distribution with mean 500 g and a standard\ndeviation of 20 g.\n\nNormA: What is the probability of bread weights to be lower than 470 g?\n\nNormB: What is the probability of bread weights to be higher than 505 g?\n\nNormC: Sample independently 10 values from the normal distribution and calculate their mean.\n\n*)\n\nopen FSharp.Stats\nopen FSharp.Stats.Distributions\n\n// Creates a normal distribution with \u00B5 = 500 and tau = 20 \nlet normal = ContinuousDistribution.normal 500. 20.\n\n// NormA: What is the probability of bread weights to be equal or lower than 470 g?\nlet normA = normal.CDF 470.\n// Output: 0.06681 = 6.68 %\n\n// NormB: What is the probability of bread weights to be higher than 505 g?\nlet normB = 1. - (normal.CDF 505.)\n// Output: 0.401294 = 40.13 %\n\n// NormC: Sample independently 10 values from the normal distribution and calculate their mean.\nlet normC = \n    Seq.init 10 (fun _ -\u003E normal.Sample())\n    |\u003E Seq.mean\n\n(*** include-value:normC ***)\n\n// Set a seed so that sampling is reproducible\nlet seed = 1\n\nRandom.SetSampleGenerator(Random.RandThreadSafe(seed))   \nList.init 3 (fun _ -\u003E normal.Sample())\n(*** include-it ***)\nRandom.SetSampleGenerator(Random.RandThreadSafe(seed))   \nList.init 3 (fun _ -\u003E normal.Sample())\n(*** include-it ***)\n\n// Get back to unseeded sampling\nRandom.SetSampleGenerator(Random.RandThreadSafe())   \nList.init 3 (fun _ -\u003E normal.Sample())\n(*** include-it ***)\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\nlet plotNormal =\n    [400. .. 600.]\n    |\u003E List.map (fun x -\u003E x,normal.PDF x)\n    |\u003E Chart.Area\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022N(500,20) PDF\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nplotNormal\n#endif // IPYNB\n\n(***hide***)\nplotNormal |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\nlet plotNormalCDF =\n\n    [400. .. 600.]\n    |\u003E List.map (fun x -\u003E x,normal.CDF x)\n    |\u003E Chart.Area\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022N(500,20) CDF\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nplotNormalCDF\n#endif // IPYNB\n\n(***hide***)\nplotNormalCDF |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n### Multivariate normal distribution\n\nMultivariate normal distributions are initialized with a mean vector and a covariance matrix.\n*)\n\nlet mvn = ContinuousDistribution.multivariateNormal (vector [-1.;5.]) (matrix [[0.5;1.];[0.25;1.2]])\nlet axisXRange = [-5. .. 0.2 .. 5.]\nlet axisYRange = [ 0. .. 0.2 .. 10.]\n\n// probability density function \nlet mvnPdfs =\n    axisYRange |\u003E List.map (fun y -\u003E \n        axisXRange\n        |\u003E List.map (fun x -\u003E \n            mvn.PDF (vector [x;y])\n            )\n        )\n\nlet mvnSamples = \n    Array.init 1000 (fun _ -\u003E mvn.Sample())\n\nlet surface = Chart.Surface(mvnPdfs,axisXRange,axisYRange)\n\nlet samples = \n    mvnSamples\n    |\u003E Array.map (fun t -\u003E t.[0],t.[1])\n    |\u003E Array.unzip\n    |\u003E fun (x,y) -\u003E Chart.Scatter3D(x,y,Array.init x.Length (fun _ -\u003E Random.rndgen.NextFloat() / 3.),StyleParam.Mode.Markers)\n\nlet mvnChart = \n    [surface;samples]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Bivariate normal distribution with sampling\u0022\n\n\n(*** condition: ipynb ***)\n#if IPYNB\nmvnChart\n#endif // IPYNB\n\n(***hide***)\nmvnChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(**\n\n###Students t distribution\n\n*)\n\nlet studentTParams = [(0.,1.,1.);(0.,1.,2.);(0.,1.,5.);]\nlet xStudentT = [-10. ..0.1.. 10.]\n\nlet pdfStudentT mu tau dof = \n    xStudentT \n    |\u003E List.map (Continuous.StudentT.PDF mu tau dof)\n    |\u003E List.zip xStudentT\n\n\nlet cdfStudentT mu tau dof = \n    xStudentT \n    |\u003E List.map (Continuous.StudentT.CDF  mu tau dof)\n    |\u003E List.zip xStudentT\n\n\nlet v =\n    studentTParams\n    |\u003E List.map (fun (mu,tau,dof) -\u003E Chart.Spline(pdfStudentT mu tau dof,Name=sprintf \u0022mu=%.1f tau=%.1f dof=%.1f\u0022 mu tau dof,ShowMarkers=false))\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nv\n#endif // IPYNB\n\n(***hide***)\nv |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n### F distribution\n\nThe F distribution or Fisher distribution, also known as Fisher-Snedecor distribution, is a continuous probability distribution. \nAn F-distributed random variable results from the quotient of two Chi-square-distributed random variables each divided by the associated number of degrees of freedom. \nThe F-distribution has two independent degrees of freedom(dof) as parameters, and thus forms a two-parameter distribution family.\n\nGenerally speaking, the F-tests and the resulting F-Distribution is utilized for comparing multiple levels of independent variables with multiple groups.\nIn practice, it is most commonly used to compare the variances within a group to the variance between different groups, as seen in the Analysis of varaince.\n\n*)\nlet fParams = [(2.,1.);(5.,2.);(10.,1.);(100.,100.)]\nlet xF = [0. .. 1. .. 5.]\n\nlet pdfF a b = \n    xF \n    |\u003E List.map (Continuous.F.PDF a b)\n    |\u003E List.zip xF\n\nlet fPDFs =\n    fParams\n    |\u003E List.map (fun (a,b) -\u003E Chart.Line(pdfF a b,Name=sprintf \u0022dof1=%.1f dof2=%.1f\u0022 a b,LineWidth=3.) )\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022Different F-Distributions PDFs, x=[0,5]\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nfPDFs\n#endif // IPYNB\n\n(***hide***)\nfPDFs |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n*)\n\nlet cdfF a b = \n    xF \n    |\u003E List.map (Continuous.F.CDF a b)\n    |\u003E List.zip xF\n\nlet fCDFs =\n    fParams\n    |\u003E List.map (fun (a,b) -\u003E Chart.Line(cdfF a b,Name=sprintf \u0022dof1=%.1f dof2=%.1f\u0022 a b,LineWidth=3.) )\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022Different F-Distributions CDFs, x=[0,5]\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nfCDFs\n#endif // IPYNB\n\n(***hide***)\nfCDFs |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Discrete\n\n### Bernoulli distribution\n\n\u003E A Bernoulli distribution is a (..) random experiment that has only two outcomes \n(usually called a \u0022Success\u0022 or a \u0022Failure\u0022). For example, the probability of getting a heads (a \u0022success\u0022) while flipping a coin is 0.5. \nThe probability of \u0022failure\u0022 is 1 \u2013 P (1 minus the probability of success, which also equals 0.5 for a coin toss). It is a special case of the \nbinomial distribution for n = 1. In other words, it is a [binomial distribution](#Binomial-distribution) with a single trial (e.g. a single coin toss).\n\u003Cbr\u003E_~ by [statisticshowto](https://www.statisticshowto.com/bernoulli-distribution/)_\n\nMathematically, \u0022success\u0022 and \u0022failure\u0022 are represented as 1.0 and 0.0, respectively.\n\nIt is defined by one parameter B(p):\n\n  -  p = probability of success\n\nExample: A weighted coin with a probability of 0.6 to land on tails. Most bernoulli distribution calculations are rather intuitive:\n\nBernA: What is the mean of a bernoulli distribution with the weighted coin?\n\nBernB: What is the probability to land on heads?\n\n*)\n\nopen FSharp.Stats\nopen FSharp.Stats.Distributions\n\n// Assumes \u0022tails\u0022 to be success\nlet bernoulli = DiscreteDistribution.bernoulli 0.6\n\n// BernA: What is the mean of a bernoulli distribution with the weighted coin?\nlet bernA = bernoulli.Mean\n// Output: 0.6\n// Altough the bernoulli distribution can never return 0.6 (only 0.0 or 1.0) on average it will return heads at the same probability it has to land on heads.\n\n// BernB: What is the probability to land on heads?\nlet bernB = bernoulli.PMF 0\n// Output: 0.4\n// Again: Heads = 0.0 = failure and tails = 1.0 = success. \n\nlet plotBernoulli =\n    [0; 1]\n    |\u003E List.map (fun x -\u003E x, bernoulli.PMF x)\n    |\u003E Chart.Column\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022B(0.6)\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nplotBernoulli\n#endif // IPYNB\n\n(***hide***)\nplotBernoulli |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n### Binomial distribution\n\nThe binomial distribution describes the probability, that under a given success probability and \na given number of draws an event occurs exactly k times (with replacement). \n\nIt is defined by two parameters B(n,p):\n\n  - n = number of draws\n\n  - p = probability of success\n\nExample: The school bus is late with a probability of 0.10. \n\nBinoA: What is the probability of running late exactly 5 times during a 30 day month?\n\nBinoB: What is the probability of running late for a maximum of 5 times?\n\nBinoC: What is the probability of running late for at least 5 times?\n\n*)\nopen FSharp.Stats\nopen FSharp.Stats.Distributions\n\n// Creates a binomial distribution with n=30 and p=0.90 \nlet binomial = DiscreteDistribution.binomial 0.1 30\n\n// BinoA: What is the probability of running late exactly 5 times during a 30 day month?\nlet binoA = binomial.PMF 5\n// Output: 0.1023 = 10.23 %\n\n// BinoB: What is the probability of running late for a maximum of 5 times?\nlet binoB = binomial.CDF 5.\n// Output: 0.9268 = 92.68 %\n\n// BinoC: What is the probability of running late for at least 5 times?\nlet binoC = 1. - (binomial.CDF 4.)\n// Output: 0.1755 = 17.55 %\n\nlet plotBinomial =\n    [0..30]\n    |\u003E List.map (fun x -\u003E x,binomial.PMF x)\n    |\u003E Chart.Column\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022B(30,0.1)\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nplotBinomial\n#endif // IPYNB\n\n(***hide***)\nplotBinomial |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n### Hypergerometric distribution\n\nThe hypergeometric distribution describes the probability, that under a given number of success and failure events and \na given number of draws an event occurs exactly k times (without replacement). \n\nIt is defined by three parameters:\n\n  - N = finite population representing the total number of events. \n\n  - K = number of success events in this population.\n\n  - n = number of draws from the population.\n\nExample: You participate in a lottery, where you have to choose 6 numbers out of 49. The lottery queen draws 6 numbers randomly, \nwhere the order does not matter.\n\nHypA: What is the probability that your 6 numbers are right?\n\nHypB: How to simulate artificial draws from the distribution?\n\nHypC: What is the probability that you have at least 3 right ones?\n\nHypD: What is the probability that you have a maximum of 3 right ones? \n\n*)\n\n// Creates a hypergeometric distribution with N=49, K=6, n=6.\nlet hyper = DiscreteDistribution.hypergeometric 49 6 6\n\n// HypA: What is the probability that your 6 numbers are right?\nlet hypA = hyper.PMF 6\n// Output: 7.15-08\n\n// HypB: How to simulate artificial draws from the distribution?\nlet hypB = hyper.Sample()\n// Output: Number of success events randomly sampled from the distribution.\n\n// HypC: What is the probability that you have at least 3 right ones?\n// CDF is implemented to calculate P(X \u003C= k)\nlet hypC = 1. - hyper.CDF 2\n// Output: 0.01864 = 1.86 %\n\n// HypD: What is the probability that you have a maximum of 3 right ones? \nlet hypD = hyper.CDF 3\n// Output: 0.99901 = 99.90 %\n\n(***hide***)\nlet plotHyper =\n    [0..6]\n    |\u003E List.map (fun x -\u003E x,hyper.PMF x)\n    |\u003E Chart.Column\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022N=49, K=6, n=6\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nplotHyper\n#endif // IPYNB\n\n(***hide***)\nplotHyper |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n### Poisson distribution\n\nThe poisson distribution describes what the probability for a number of events is, occurring in a certain time, area, or volume.\n\nIt is defined by just one parameters Po(lambda) where lambda is the average rate.\n\nExample: During a year, a forest is struck by a lightning 5.5 times. \n\nPoA: What is the probability that the lightning strikes exactly 3 times?\n\nPoB: What is the probability that the lightning strikes less than 2 times?\n\nPoC: What is the probability that the lightning strikes more than 7 times?\n*)\n// Creates a poisson distribution with lambda=  .\nlet poisson = DiscreteDistribution.poisson 5.5\n\n(*** do-not-eval ***)\n// PoA: What is the probability that the lightning strikes exactly 3 times?\nlet poA = poisson.PMF 3\n// Output: 0.11332 = 11.33 %\n\n// PoB: What is the probability that the lightning strikes less or equal to 2 times?\nlet poB = \n    // CDF not implemented yet\n    //poisson.CDF 2.\n    [0 .. 2] |\u003E List.sumBy poisson.PMF\n    // Output: 0.088376 = 8.84 %\n    \n// PoC: What is the probability that the lightning strikes more than 7 times?\nlet poC = 1. -  poisson.CDF 6.\n// Output: Not implemented yet. Manual addition necessary\n\n(** *)\n\nlet plotPo =\n    [0..20]\n    |\u003E List.map (fun x -\u003E x,poisson.PMF x)\n    |\u003E Chart.Column\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    //|\u003E Chart.withSize(600.,400.)\n    |\u003E Chart.withTitle \u0022Po(5.5)\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nplotPo\n#endif // IPYNB\n\n(***hide***)\nplotPo |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n### Gamma distribution\n*)\n\nlet gammaParams = [(1.,2.);(2.,2.);(3.,2.);(5.,1.);(9.0,0.5);(7.5,1.);(0.5,1.);]\nlet xgamma = [0. ..0.1.. 20.]\n\nlet pdfGamma a b = \n    xgamma \n    |\u003E List.map (Continuous.Gamma.PDF a b)\n    |\u003E List.zip xgamma\n\nlet gammaPlot =\n    gammaParams\n    |\u003E List.map (fun (a,b) -\u003E Chart.Point(pdfGamma a b,Name=sprintf \u0022a=%.1f b=%.1f\u0022 a b) )//,ShowMarkers=false))\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\ngammaPlot\n#endif // IPYNB\n\n(***hide***)\ngammaPlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\nlet cdfGamma a b = \n    xgamma \n    |\u003E List.map (Continuous.Gamma.CDF a b)\n    |\u003E List.zip xgamma\n\nlet gammaCDFPlot=\n    gammaParams\n    |\u003E List.map (fun (a,b) -\u003E Chart.Spline(cdfGamma a b,Name=sprintf \u0022a=%.1f b=%.1f\u0022 a b) )//,ShowMarkers=false))\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\ngammaCDFPlot\n#endif // IPYNB\n\n(***hide***)\ngammaCDFPlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Empirical\n\nYou can create empirically derived distributions and sample randomly from these.\nIn this example 100,000 samples from a student t distribution \n\n*)\n\n// Randomly taken samples; in this case from a gaussian normal distribution.\nlet sampleDistribution = \n    let template = ContinuousDistribution.normal 5. 2.\n    Seq.init 100000 (fun _ -\u003E template.Sample())\n\n//creates an empirical distribution with bandwidth 0.1\nlet empiricalDistribution = \n    Empirical.create 0.1 sampleDistribution\n\n(***hide***)\nlet plotEmpirical =    \n    empiricalDistribution\n    |\u003E Empirical.getZip\n    |\u003E Chart.Column\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nplotEmpirical\n#endif // IPYNB\n\n(***hide***)\nplotEmpirical |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n## Density estimation\n*)\n\nlet nv = Array.init 1000 (fun _ -\u003E Distributions.Continuous.Normal.Sample 5. 2.)\n\nlet xy = KernelDensity.estimate KernelDensity.Kernel.gaussian 1.0 nv\n\nlet kernelChart = \n    Chart.SplineArea xy\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n \n(*** condition: ipynb ***)\n#if IPYNB\nkernelChart\n#endif // IPYNB\n\n(***hide***)\nkernelChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Distance\n\nIn this example we will calculate the Wasserstein Metric between 3 distributions. One can imagine this metric as the amount of work needed to move the area (pile of dirt) of one distribution to the area of the other. That\u0027s why it\u0027s also called Earth Movers Distance.\n\nBe aware that this distance measure is dependent on the actual absolute values of the distributions.\n*)\n\nlet distribution1 = \n    let normal = ContinuousDistribution.normal 300. 15.\n    Array.init 1000 (fun _ -\u003E normal.Sample())\nlet distribution2 =\n    let normal = ContinuousDistribution.normal 350. 20.\n    Array.init 500 (fun _ -\u003E normal.Sample())\nlet distribution3 =\n    let normal = ContinuousDistribution.normal 500. 20.\n    Array.init 1000 (fun _ -\u003E normal.Sample())\n\nlet pilesOfDirt =\n    [\n    Chart.Histogram(distribution1,Name = \u0022Distribution1\u0022)\n    Chart.Histogram(distribution2,Name = \u0022Distribution2\u0022)\n    Chart.Histogram(distribution3,Name = \u0022Distribution3\u0022)\n    ]\n    |\u003E Chart.combine\n\n(*** condition: ipynb ***)\n#if IPYNB\npilesOfDirt\n#endif // IPYNB\n\n(***hide***)\npilesOfDirt |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\nlet distance1and2 = Distance.OneDimensional.wassersteinDistance distribution1 distribution2\n\n(***include-value: distance1and2 ***)\n\nlet distance1and3 = Distance.OneDimensional.wassersteinDistance distribution1 distribution3\n(***include-value: distance1and3 ***)\n\n(**\nAs expected the distance between Distribution 1 and 2 is the lowest:\n*)\n\nlet distributions = \n    [|distribution1;distribution2;distribution3|]\n\nlet mapColor min max value = \n    let proportionR = \n        ((255. - 200.) * (value - min) / (max - min))\n        |\u003E int\n        |\u003E fun x -\u003E 255 - x\n    let proportionG = \n        ((255. - 200.) * (value - min) / (max - min))\n        |\u003E int\n        |\u003E fun x -\u003E 255 - x\n    let proportionB = \n        ((255. - 200.) * (value - min) / (max - min))\n        |\u003E int\n        |\u003E fun x -\u003E 255 - x\n    Color.fromARGB 1 proportionR proportionG proportionB\n\nlet distancesTable =\n    let headerColors = [\u0022white\u0022;\u0022#1f77b4\u0022;\u0022#ff7f0e\u0022;\u0022#2ca02c\u0022] |\u003E List.map Color.fromString |\u003E Color.fromColors\n    let distances = \n        distributions\n        |\u003E Array.map (fun x -\u003E\n            distributions\n            |\u003E Array.map (fun y -\u003E\n                Distance.OneDimensional.wassersteinDistance x y\n                |\u003E (sprintf \u0022%.2f\u0022)\n            )\n        )\n        |\u003E Array.transpose \n        |\u003E Array.append [|[|\u0022Distribution1\u0022;\u0022Distribution2\u0022;\u0022Distribution3\u0022|]|]\n        |\u003E Array.transpose \n    let cellColors = \n        distances\n        |\u003E Array.mapi (fun i a -\u003E\n            a\n            |\u003E Array.mapi (fun j v -\u003E \n                if j = 0 then \n                    if i = 0 then Color.fromHex \u0022#1f77b4\u0022\n                    elif i = 1 then Color.fromHex \u0022#ff7f0e\u0022\n                    else Color.fromHex \u0022#2ca02c\u0022\n                else \n                    mapColor 0. 200. (float v)\n            )\n        )\n        |\u003E Array.transpose\n        |\u003E Seq.map Color.fromColors\n        |\u003E Color.fromColors\n \n    Chart.Table(\n        [\u0022\u0022;\u0022Distribution1\u0022;\u0022Distribution2\u0022;\u0022Distribution3\u0022],         \n        distances,\n        HeaderFillColor = headerColors,\n        CellsFillColor = cellColors)\n\n(*** condition: ipynb ***)\n#if IPYNB\ndistancesTable\n#endif // IPYNB\n\n(***hide***)\ndistancesTable |\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/FSharp.Stats/Fitting.html","title":"Fitting","content":"(**\n---\ntitle: Fitting\nindex: 7\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(**\n\n# Fitting\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Fitting.ipynb)\n\n\n_Summary:_ this tutorial will walk through several ways of fitting data with FSharp.Stats.\n\n### Table of contents\n - [Linear Regression](#Linear-Regression)\n    - [Simple Linear Regression](#Simple-Linear-Regression)\n        - [Univariable](#Univariable)\n        - [Multivariable](#Multivariable)\n - [Polynomial Regression](#Polynomial-Regression)\n - [Nonlinear Regression](#Nonlinear-Regression)\n - [LevenbergMarquardtConstrained](#LevenbergMarquardtConstrained)\n - [Smoothing spline](#Smoothing-spline)\n\n## Linear Regression\n\nIn Linear Regression a linear system of equations is generated. The coefficients obtained by the solution to this equation \nsystem minimize the squared distances from the regression curve to the data points. These distances are also known as residuals (or least squares).\n\n### Simple Linear Regression\n\nSimple linear regression aims to fit a straight regression line to the data. While the least squares approach efficiently minimizes the sum of squared residuals it is prone to outliers. \nAn alternative is a robust simple linear regression like Theil\u0027s incomplete method or the Theil-Sen estimator, that are outlier resistant.\n\n#### Univariable\n\n*)\n\nopen FSharp.Stats\nopen FSharp.Stats.Fitting.LinearRegression\n\nlet xData = vector [|1. .. 10.|]\nlet yData = vector [|4.;7.;9.;12.;15.;17.;16.;23.;5.;30.|]\n\n//Least squares simple linear regression\nlet coefficientsLinearLS = \n    OrdinaryLeastSquares.Linear.Univariable.coefficient xData yData\nlet fittingFunctionLinearLS x = \n    OrdinaryLeastSquares.Linear.Univariable.fit coefficientsLinearLS x\n\n//Robust simple linear regression\nlet coefficientsLinearRobust = \n    RobustRegression.Linear.theilSenEstimator xData yData \nlet fittingFunctionLinearRobust x = \n    RobustRegression.Linear.fit coefficientsLinearRobust x\n\n//least squares simple linear regression through the origin\nlet coefficientsLinearRTO = \n    OrdinaryLeastSquares.Linear.RTO.coefficientOfVector xData yData \nlet fittingFunctionLinearRTO x = \n    OrdinaryLeastSquares.Linear.RTO.fit coefficientsLinearRTO x\n\n\n\nlet rawChart = \n    Chart.Point(xData,yData)\n    |\u003E Chart.withTraceName \u0022raw data\u0022\n    \nlet fittingLS = \n    let fit = \n        [|0. .. 11.|] \n        |\u003E Array.map (fun x -\u003E x,fittingFunctionLinearLS x)\n    Chart.Line(fit)\n    |\u003E Chart.withTraceName \u0022least squares (LS)\u0022\n\nlet fittingRobust = \n    let fit = \n        [|0. .. 11.|] \n        |\u003E Array.map (fun x -\u003E x,fittingFunctionLinearRobust x)\n    Chart.Line(fit)\n    |\u003E Chart.withTraceName \u0022TheilSen estimator\u0022\n\nlet fittingRTO = \n    let fit = \n        [|0. .. 11.|] \n        |\u003E Array.map (fun x -\u003E x,fittingFunctionLinearRTO x)\n    Chart.Line(fit)\n    |\u003E Chart.withTraceName \u0022LS through origin\u0022\n\nlet simpleLinearChart =\n    [rawChart;fittingLS;fittingRTO;fittingRobust;] \n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nsimpleLinearChart\n#endif // IPYNB\n\n(***hide***)\nsimpleLinearChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n#### Multivariable\n*)\n\n//Multivariate simple linear regression\nlet xVectorMulti =\n    [\n    [1.; 1. ;2.  ]\n    [2.; 0.5;6.  ]\n    [3.; 0.8;10. ]\n    [4.; 2. ;14. ]\n    [5.; 4. ;18. ]\n    [6.; 3. ;22. ]\n    ]\n    |\u003E Matrix.ofJaggedSeq\n\nlet yVectorMulti = \n    let transformX (x:Matrix\u003Cfloat\u003E) =\n        x\n        |\u003E Matrix.mapiRows (fun _ v -\u003E 100. \u002B (v.[0] * 2.5) \u002B (v.[1] * 4.) \u002B (v.[2] * 0.5))\n    xVectorMulti\n    |\u003E transformX\n    |\u003E vector\n\nlet coefficientsMV = \n    OrdinaryLeastSquares.Linear.Multivariable.coefficients xVectorMulti yVectorMulti\nlet fittingFunctionMV x = \n    OrdinaryLeastSquares.Linear.Multivariable.fit coefficientsMV x\n\n(**\n\n### Polynomial Regression\n\nIn polynomial regression a higher degree (d \u003E 1) polynomial is fitted to the data. The coefficients are chosen that the sum of squared residuals is minimized.\n\n*)\n\nopen FSharp.Stats\nopen FSharp.Stats.Fitting.LinearRegression\n\nlet xDataP = vector [|1. .. 10.|]\nlet yDataP = vector [|4.;7.;9.;8.;6.;3.;2.;5.;6.;8.;|]\n\n//Least squares polynomial regression\n\n//define the order the polynomial should have (order 3: f(x) = ax^3 \u002B bx^2 \u002B cx \u002B d)\nlet order = 3\nlet coefficientsPol = \n    OrdinaryLeastSquares.Polynomial.coefficient order xDataP yDataP \nlet fittingFunctionPol x = \n    OrdinaryLeastSquares.Polynomial.fit order coefficientsPol x\n\n//weighted least squares polynomial regression\n//If heteroscedasticity is assumed or the impact of single datapoints should be \n//increased/decreased you can use a weighted version of the polynomial regression.\n\n//define the order the polynomial should have (order 3: f(x) = ax^3 \u002B bx^2 \u002B cx \u002B d)\nlet orderP = 3\n\n//define the weighting vector\nlet weights = yDataP |\u003E Vector.map (fun y -\u003E 1. / y)\nlet coefficientsPolW = \n    OrdinaryLeastSquares.Polynomial.coefficientsWithWeighting orderP weights xDataP yDataP \nlet fittingFunctionPolW x = \n    OrdinaryLeastSquares.Polynomial.fit orderP coefficientsPolW x\n\nlet rawChartP = \n    Chart.Point(xDataP,yDataP)\n    |\u003E Chart.withTraceName \u0022raw data\u0022\n    \nlet fittingPol = \n    let fit = \n        [|1. .. 0.1 .. 10.|] \n        |\u003E Array.map (fun x -\u003E x,fittingFunctionPol x)\n    Chart.Line(fit)\n    |\u003E Chart.withTraceName \u0022order = 3\u0022\n\nlet fittingPolW = \n    let fit = \n        [|1. .. 0.1 .. 10.|] \n        |\u003E Array.map (fun x -\u003E x,fittingFunctionPolW x)\n    Chart.Line(fit)\n    |\u003E Chart.withTraceName \u0022order = 3 weigthed\u0022\n\nlet polRegressionChart =\n    [rawChartP;fittingPol;fittingPolW] \n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\npolRegressionChart\n#endif // IPYNB\n\n(***hide***)\npolRegressionChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n## Nonlinear Regression\n\nNonlinear Regression is used if a known model should be fitted to the data that cannot be represented in a linear system of equations. \nCommon examples are: \n\n - gaussian functions\n\n - log functions\n\n - exponential functions\n\nTo fit such models to your data the \u0060NonLinearRegression\u0060 module can be used. Three solver-methods are available to iteratively converge to a minimal least squares value.\n\n - GaussNewton\n\n - LevenbergMarquardt\n\n - LevenbergMarquardtConstrained\n\nFor solving a nonlinear problem the model function has to be converted to a \u0060NonLinearRegression.Model\u0060 type consisting of \n\n - parameter names,\n\n - the function itself, and\n\n - partial derivatives of all unknown parameters.\n\nFor clarification a exponential relationship in the form of \u0060y = a * exp(b * x)\u0060 should be solved:\n\n*)\n\nopen System\nopen FSharp.Stats.Fitting\nopen FSharp.Stats.Fitting.LinearRegression\nopen FSharp.Stats.Fitting.NonLinearRegression\n\nlet xDataN = [|1.;2.; 3.; 4.|]\nlet yDataN = [|5.;14.;65.;100.|]\n\n//search for:  y = a * exp(b * x)\n\n// 1. create the model\n// 1.1 define parameter names\nlet parameterNames = [|\u0022a\u0022;\u0022b\u0022|]\n\n// 1.2 define the exponential function that gets a parameter vector containing the \n//searched parameters and the x value and gives the corresponding y value\nlet getFunctionValue =                 \n    fun (parameterVector: Vector\u003Cfloat\u003E) x -\u003E \n        parameterVector.[0] * Math.Exp(parameterVector.[1] * x)\n      //a                   *      exp(b                   * x)\n\n// 1.3 Define partial derivatives of the exponential function. \n//     Take partial derivatives for every unknown parameter and\n//     insert it into the gradient vector sorted by parameterNames.\nlet getGradientValues =\n    fun (parameterVector:Vector\u003Cfloat\u003E) (gradientVector: Vector\u003Cfloat\u003E) xValueN -\u003E \n        // partial derivative of y=a*exp(b*x) in respect to the first parameter (a)   --\u003E exp(b*x)\n        gradientVector.[0] \u003C- Math.Exp(parameterVector.[1] * xValueN)  \n        // partial derivative of y=a*exp(b*x) in respect to the second parameter (b)  --\u003E a*x*exp(b*x)\n        gradientVector.[1] \u003C- parameterVector.[0] * xValueN * Math.Exp(parameterVector.[1] * xValueN)  \n\n        gradientVector\n\n// 1.4 create the model\nlet model = createModel parameterNames getFunctionValue getGradientValues\n\n// 2. define the solver options\n// 2.1 define the stepwidth of the x value change\nlet deltaX = 0.0001\n\n// 2.2 define the stepwidth of the parameter change\nlet deltaP = 0.0001\n\n// 2.3 define the number of iterations\nlet k = 1000\n\n// 2.4 define an initial guess\n//     For many problems you can set a default value or let the user decide to choose an \n//     appropriate guess. In the case of an exponential or log model you can use the \n//     solution of the linearized problem as a first guess.\nlet initialParamGuess (xData:float []) (yData:float [])=\n    //gets the linear representation of the problem and solves it by simple linear regression \n    //(prone to least-squares-deviations at high y_Values)\n    let yLn = yData |\u003E Array.map (fun x -\u003E Math.Log(x)) |\u003E vector\n    let linearReg = \n        LinearRegression.OrdinaryLeastSquares.Linear.Univariable.coefficient (vector xData) yLn\n    //calculates the parameters back into the exponential representation\n    let a = exp linearReg.[0]\n    let b = linearReg.[1]\n    [|a;b|]\n\n// 2.5 create the solverOptions\nlet solverOptions = \n    let guess = initialParamGuess xDataN yDataN\n    NonLinearRegression.createSolverOption 0.0001 0.0001 1000 guess\n\n// 3. get coefficients\nlet coefficientsExp = GaussNewton.estimatedParams model solverOptions xDataN yDataN\n//val coefficients = vector [|5.68867298; 0.7263428835|]\n\n// 4. create fitting function\nlet fittingFunction x = coefficientsExp.[0] * Math.Exp(coefficientsExp.[1] * x)\n\nlet rawChartNLR = \n    Chart.Point(xDataN,yDataN)\n    |\u003E Chart.withTraceName \u0022raw data\u0022\n\nlet fittingNLR = \n    let fit = \n        [|1. .. 0.1 .. 10.|] \n        |\u003E Array.map (fun x -\u003E x,fittingFunction x)\n    Chart.Line(fit)\n    |\u003E Chart.withTraceName \u0022NLR\u0022\n\nlet NLRChart =\n    [rawChartNLR;fittingNLR] \n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nNLRChart\n#endif // IPYNB\n\n(***hide***)\nNLRChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n### LevenbergMarquardtConstrained\n\nFor nonlinear regression using the LevenbergMarquardtConstrained module, you have to follow similar steps as in the example shown above.\nIn this example, a logistic function of the form \u0060y = L/(1\u002Be^(-k(t-x)))\u0060 should be fitted to count data:\n\n*)\nopen FSharp.Stats.Fitting.NonLinearRegression\n\nlet xHours = [|0.; 19.5; 25.5; 30.; 43.; 48.5; 67.75|]\n\nlet yCount = [|0.0; 2510000.0; 4926400.0; 9802600.0; 14949400.0; 15598800.0; 16382000.0|]\n\n// 1. Choose a model\n// The model we need already exists in FSharp.Stats and can be taken from the \u0022Table\u0022 module.\nlet model\u0027 = Table.LogisticFunctionAscending\n\n// 2. Define the solver options\n// 2.1 Initial parameter guess\n// The solver needs an initial parameter guess. This can be done by the user or with an estimator function.\n// The cutoffPercentage says at which percentage of the y-Range the lower part of the slope is. \n// Manual curation of parameter guesses can be performed in this step by editing the param array.\nlet initialParamGuess\u0027 = LevenbergMarquardtConstrained.initialParam xHours yCount 0.1\n\n// 2.2 Create the solver options\nlet solverOptions\u0027 = Table.lineSolverOptions initialParamGuess\u0027\n\n// 3. Estimate parameters for a possible solution based on residual sum of squares\n// Besides the solverOptions, an upper and lower bound for the parameters are required.\n// It is recommended to define them depending on the initial param guess\nlet lowerBound =\n    initialParamGuess\u0027\n    |\u003E Array.map (fun param -\u003E\n        // Initial paramters -20%\n        param - (abs param) * 0.2\n    )\n    |\u003E vector\n\nlet upperBound =\n    initialParamGuess\u0027\n    |\u003E Array.map (fun param -\u003E\n        param \u002B (abs param) * 0.2\n    )\n    |\u003E vector\n\nlet estParams =\n    LevenbergMarquardtConstrained.estimatedParams model\u0027 solverOptions\u0027 0.001 10. lowerBound upperBound xHours yCount\n\n// 3.1 Estimate multiple parameters and pick the one with the least residual sum of squares (RSS)\n// For a more \u0022global\u0022 minimum. it is possible to estimate multiple possible parameters for different initial guesses.\n\n//3.1.1 Generation of parameters with varying steepnesses\nlet multipleSolverOptions =\n    LevenbergMarquardtConstrained.initialParamsOverRange xHours yCount [|0. .. 0.1 .. 2.|]\n    |\u003E Array.map Table.lineSolverOptions\n\nlet estParamsRSS =\n    multipleSolverOptions\n    |\u003E Array.map (fun solvO -\u003E\n        let lowerBound =\n            solvO.InitialParamGuess\n            |\u003E Array.map (fun param -\u003E param - (abs param) * 0.2)\n            |\u003E vector\n        let upperBound =\n            solvO.InitialParamGuess\n            |\u003E Array.map (fun param -\u003E param \u002B (abs param) * 0.2)\n            |\u003E vector\n        LevenbergMarquardtConstrained.estimatedParamsWithRSS \n            model\u0027 solvO 0.001 10. lowerBound upperBound xHours yCount\n    )\n    |\u003E Array.minBy snd\n    |\u003E fst\n\n// The result is the same as for \u0027estParams\u0027, but tupled with the corresponding RSS, which can be taken\n// as a measure of quality for the estimate.\n\n// 4. Create fitting function\nlet fittingFunction\u0027 = Table.LogisticFunctionAscending.GetFunctionValue estParamsRSS\n\nlet fittedY = Array.zip [|1. .. 68.|] ([|1. .. 68.|] |\u003E Array.map fittingFunction\u0027)\n\nlet fittedLogisticFunc =\n    [\n    Chart.Point (Array.zip xHours yCount)\n    |\u003E Chart.withTraceName\u0022Data Points\u0022\n    Chart.Line fittedY\n    |\u003E Chart.withTraceName \u0022Fit\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022Time\u0022 \u0022Count\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nfittedLogisticFunc\n#endif // IPYNB\n\n(***hide***)\nfittedLogisticFunc |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Smoothing spline\n\nA smoothing spline aims to minimize a function consisting of two error terms: \n\n - error1: sum of squared residuals\n\n    - Similar to the OrdinaryLeastSquares regression this error term ensures the fidelity to the data.\n\n - error2: integral of the second derivative of the fitting function\n\n    - This error term ensures the smoothness of the resulting curve.\n\nA smoothing parameter (lambda) mediates between the two error terms.\n\n - E = error1 \u002B (lambda * error2)\n\n    - If lambda = 0, the resulting curve minimizes the sum of squared residuals and results in an interpolating curve.\n\n    - If lambda = infinity, the resulting curve is punished by the smoothness measurement and results in a straight regression line.\n\nThe spline is constructed out of piecewise cubic polynomials that meet at knots. In the defined knots the function is continuous. \nDepending on the used smoothing factor and the defined knots the smoothing spline has a unique solution. The resulting curve is just defined within the interval defined in the x values of the data.\n\nThe right amount of smoothing can be determined by cross validation or generalized cross validation.\n*)\n\nopen FSharp.Stats.Fitting\n\nlet xDataS = [|1.;2.; 3.; 4.|]\nlet yDataS = [|5.;14.;65.;75.|]\n\nlet data = Array.zip xDataS yDataS\n\n//in every x position a knot should be located\nlet knots = xDataS\n\nlet spline lambda x = (Spline.smoothingSpline data knots) lambda x\n\nlet fit lambda = \n    [|1. .. 0.1 .. 4.|]\n    |\u003E Array.map (fun x -\u003E x,spline lambda x)\n    |\u003E Chart.Line\n    |\u003E Chart.withTraceName (sprintf \u0022lambda: %.3f\u0022 lambda)\n\nlet rawChartS = Chart.Point(data)\n\nlet smoothingSplines =\n    [\n    rawChartS\n    fit 0.001\n    fit 0.02\n    fit 1.\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nsmoothingSplines\n#endif // IPYNB\n\n(***hide***)\nsmoothingSplines |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n\n\n\n(*** hide ***)\n\n\n//// Test versus http://www.cyclismo.org/tutorial/R/linearLeastSquares.html\n//let xVector =\n//    vector [2000.;   2001.;  2002.;  2003.;   2004.;]\n\n//let xVectorM =\n//    vector [2000.;   2001.;  2002.;  2003.;   2004.;]\n//    |\u003E Matrix.ofVector\n//let yVector = vector [9.34;   8.50;  7.62;  6.93;  6.60;]\n\n\n\n\n//let coeffM   = Regression.OrdinaryLeastSquares.Linear.MultiVariateCoefficient xVectorM yVector\n\n//let coeff   = Regression.OrdinaryLeastSquares.Linear.coefficient xVector yVector\n\n\n//let fit     = Regression.OrdinaryLeastSquares.Linear.fit coeff\n//let fitM     = Regression.OrdinaryLeastSquares.Linear.fit\u0027 coeffM\n\n//fit 2002.\n//fitM (vector [2002.])    \n\n//let regLine = xVector |\u003E Vector.map fit\n\n//let xVectorMulti =\n//    [\n//    [1.; 1. ;2.  ]\n//    [2.; 0.5;6.  ]\n//    [3.; 0.8;10. ]\n//    [4.; 2. ;14. ]\n//    [5.; 4. ;18. ]\n//    [6.; 3. ;22. ]\n//    ]\n//    |\u003E Matrix.ofSeq\n\n//let f (x:Matrix\u003Cfloat\u003E) =\n//    x\n//    |\u003E Matrix.mapiRows (fun i v -\u003E\n//        //let v = v.Transpose\n//        100. \u002B (v.[0] * 2.5) \u002B (v.[1] * 4.) \u002B (v.[2] * 0.5))\n\n//let y = vector \u003C| f xVectorMulti\n\n//let coeffM2   = Regression.OrdinaryLeastSquares.Linear.MultiVariateCoefficient xVectorMulti y\n\n//let fitM2     = Regression.OrdinaryLeastSquares.Linear.fit\u0027 coeffM2\n\n//fitM2 (vector [3.; 0.8;10. ]) \n\n//let MultiVariateCoefficient (xData : Matrix\u003Cfloat\u003E) (yData : Vector\u003Cfloat\u003E) =\n//    if xData.NumRows \u003C\u003E yData.Length then\n//        raise (System.ArgumentException(\u0022vector x and y have to be the same size!\u0022))\n//    let m = xData.NumRows\n//    let n = xData.NumCols\n//    let X = Matrix.init m (n\u002B1) (fun m n -\u003E  if n = 0 then 1. else xData.[m,n-1] )\n//    //Algebra.LinearAlgebra.LeastSquares X yData\n//    X\n//let X = MultiVariateCoefficient xVectorMulti y\n//Algebra.LinearAlgebra.LeastSquares X y\n\n//let summary = Regression.calulcateSumOfSquares fit xVector yVector\n\n//let rsquared = Regression.calulcateDetermination summary\n\n//let sigIntercept = Regression.ttestIntercept coeff.[0] summary\n//let sigSlope     = Regression.ttestSlope coeff.[1] summary\n\n\n//let anova = Regression.Linear.calculateANOVA coeff xVector yVector\n\n\n//let aic = Regression.calcAIC 2. summary.Count summary.Error\n//let bic = Regression.calcBIC 2. summary.Count summary.Error\n\n//Regression.getResiduals fit xVector yVector\n//Regression.calculateSSE fit xVector yVector\n\n//(*** define:regression1 ***)\n//[\n//    Chart.Point(Seq.zip xVector yVector,Name=\u0022data points\u0022);\n//    Chart.Line(Seq.zip xVector regLine,Name =\u0022regression\u0022)\n//]\n//|\u003E Chart.Combine\n//(***hide***)\n//regression1 |\u003E GenericChart.toChartHTML\n//(***include-it-raw***)\n\n\n\n\n\n\n\n//let xVector\u0027 = vector [1290.;1350.;1470.;1600.;1710.;1840.;1980.;2230.;2400.;2930.;]\n//let yVector\u0027 = vector [1182.;1172.;1264.;1493.;1571.;1711.;1804.;1840.;1956.;1954.;]\n\n\n//let coeff\u0027   = Regression.Polynomial.coefficient 2 xVector\u0027 yVector\u0027\n\n//let fit\u0027     = Regression.Polynomial.fit 2 coeff\u0027\n//let regLine\u0027 = vector xVector\u0027 |\u003E Vector.map fit\u0027\n\n\n//Regression.Polynomial.calculateANOVA 2 coeff\u0027 xVector\u0027 yVector\u0027\n\n//(*** define:polynomial1 ***)\n//[\n//    Chart.Point(Seq.zip xVector\u0027 yVector\u0027,Name=\u0022data points\u0022);\n//    Chart.Spline(Seq.zip xVector\u0027 regLine\u0027,Name =\u0022regression\u0022)\n//]\n//|\u003E Chart.Combine\n//(***hide***)\n//polynomial1 |\u003E GenericChart.toChartHTML\n//(***include-it-raw***)\n\n\n\n\n\n//(**\n//Hermite Spline Regression\n//-----------------\n//*)\n\n\n\n\n//let x = vector [0.0;1.0;2.0;3.0;4.5;5.1;7.6;] \n//let y = vector [2.2;5.5;7.7;9.9;11.1;12.3;13.9]\n\n//// Weigth matrix with equal weights\n//let W = Matrix.diag (Vector.ones y.Length)\n\n//let a,e,b,c = Hermite.splineIncreasing x y W 10.0\n\n//let t = [0.0 .. 0.01 .. 7.5]\n\n//let eval = Hermite.initEvalAt x a c\n\n//(*** define:hermitespline1 ***)\n//[\n//    Chart.Point(x,y)\n//    Chart.Point(t,t |\u003E Seq.map eval)\n//]\n//|\u003E Chart.Combine\n//(***hide***)\n//hermitespline1 |\u003E GenericChart.toChartHTML\n//(***include-it-raw***)\n\n\n//let m1 = vector [|14.69707479;49.40105967;4.63026942;7.728633952;4.077401498;3.847039793;3.294171442;4.837594998;0.345542383;7.141212053|]\n//let m2 = vector [|1.156069364;10.69364162;9.248554913;2.312138728;13.00578035;9.826589595;12.42774566;7.225433526;1.156069364;32.94797688|]\n//let m3 = vector [|0.139580499;5.089121731;3.153427595;4.343756039;5.899058788;6.242208666;7.593415919;5.831556204;1.551657515;60.15621704|]\n\n//let t1 = vector [|0.129230005;8.82273372;6.149632627;7.616209201;9.226621001;9.247565753;9.274231037;7.417205731;2.153290552;39.96328037|]\n//let t2 = vector [|1.020411515;18.39983282;11.69962593;11.3877188;8.877225494;6.802075352;6.42866738;6.570529817;2.237481955;26.57643094|]\n//let t3 = vector [|1.514770998;15.24095695;7.727525997;9.372988152;9.944448026;8.774023957;7.817375851;7.23063126;2.16513451;30.2121443|]\n\n\n//let N = m1.Length\n//let oneVec = Vector.create N 1. //:\u003E Vector\u003Cfloat\u003E\n//let X = Matrix.ofSeq  [ m1; m2; m3] \n\n//let r1 = Regression.Linear.coefficientOfMatrix (X.Transpose) t1 // Glucose\n//let r2 = Regression.Linear.coefficientOfMatrix (X.Transpose) t2 // Fructose\n//let r3 = Regression.Linear.coefficientOfMatrix (X.Transpose) t3 // Sucrose\n\n\n//open FSharp.Stats\n//let bwm1 = 1.//Distributions.Bandwidth.nrd0 m1.Values\n//let km1 = Distributions.KernelDensity.estimate Distributions.KernelDensity.Kernel.biweight bwm1 m1.Values\n\n//let bwm2 = 1.//Distributions.Bandwidth.nrd0 m2.Values\n//let km2 = Distributions.KernelDensity.estimate Distributions.KernelDensity.Kernel.biweight bwm2 m2.Values\n\n//let bwm3 = 1.//Distributions.Bandwidth.nrd0 m3.Values\n//let km3 = Distributions.KernelDensity.estimate Distributions.KernelDensity.Kernel.biweight bwm3 m3.Values\n\n////[\n////Chart.Point ([1..10], m1 ,Name = \u0022Chlorophyll\u0022)\n////Chart.Point ([1..10], m2,Name = \u0022UGPase\u0022)\n////Chart.Point ([1..10], m3,Name = \u0022Nitrat\u0022)\n////]\n////|\u003E Chart.Combine\n////|\u003E Chart.Show\n\n\n\n//[\n//Chart.Point (km1 ,Name = \u0022Chlorophyll\u0022)\n//Chart.Point (km2,Name = \u0022UGPase\u0022)\n//Chart.Point (km3,Name = \u0022Nitrat\u0022)\n//]\n//|\u003E Chart.Combine\n////|\u003E Chart.Show\n\n\n\n\n\n\n\n\n\n"},{"uri":"https://fslab.org/FSharp.Stats/GoodnessOfFit.html","title":"Fit quality","content":"(**\n---\ntitle: Fit quality\nindex: 11\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n\n# Fit quality\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=GoodnessOfFit.ipynb)\n\n_Summary:_ this tutorial shows how to assess fit quality with FSharp.Stats\n\n### Table of contents\n\n - [Linear regression report](#Linear-regression-report)\n - [Confidence bands](#Confidence-bands)\n - [Prediction bands](#Prediction-bands)\n - [Cook\u0027s distance](#Cook-s-distance)\n\n## Linear regression report\n\nConsider this simple linear regression:\n*)\nopen FSharp.Stats\nopen FSharp.Stats.Fitting\nopen LinearRegression.OrdinaryLeastSquares\nopen GoodnessOfFit.OrdinaryLeastSquares.Linear.Univariable\nopen FSharp.Stats.Distributions\n\n//data sorted by x values\nlet x = vector [|1. .. 10.|]\nlet y = vector [|4.;10.;9.;7.;13.;17.;16.;23.;15.;30.|]\n\n///linear regression line fitting function\nlet coefficients = Linear.Univariable.coefficient x y\nlet fitFunc = Linear.Univariable.fit coefficients\n\nlet fittedValues = x |\u003E Seq.map fitFunc\n\n\nlet chart =\n    [\n    Chart.Point(x,y) |\u003E Chart.withTraceName \u0022raw\u0022\n    Chart.Line(fittedValues|\u003E Seq.mapi (fun i y -\u003E x.[i],y)) |\u003E Chart.withTraceName \u0022fit\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nchart\n#endif // IPYNB\n\n(***hide***)\nchart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\nVarious quality parameters can be accessed via the \u0060GoodnessOfFit\u0060 module:\n*)\n\n//In the following some quality/interval/significance values are computed:\nlet sos         = GoodnessOfFit.calculateSumOfSquares fitFunc x y\nlet n           = sos.Count\nlet meanX       = sos.MeanX\nlet meanY       = sos.MeanY\nlet slope       = coefficients.[1]\nlet intercept   = coefficients.[0]\n//coefficient of determination\nlet rSq        = GoodnessOfFit.calculateDeterminationFromValue y fittedValues\n//adjusted coefficient of determination; variable=number of coefficints (excluding intercept)\nlet rSqAdj    = GoodnessOfFit.calculateDeterminationAdj y fittedValues 1\n//pearson correlation coefficient\nlet r           = sqrt rSq\n//total sum of squares\nlet ssTotal     = sos.Total\n//regression sum of squares\nlet ssReg       = sos.Regression\n//residual sum of squares\nlet ssResidual  = sos.Error\n//sum of squares xx\nlet ssxx        = sos.SSxx\n//sum of products xy\nlet ssxy        = sos.SSxy\n//standard error of the regression slope\nlet stdErrSlope = GoodnessOfFit.standardErrorSlope sos \n//standard error of the regression intercept\nlet stdErrIntercept = GoodnessOfFit.standardErrorIntercept sos \n//standard error of the estimate (S)\nlet stdErrEstimate  = GoodnessOfFit.standardErrorEstimate sos \n//confidence intervals (df = n-#coefficients; a=5%)\nlet criticalT   = ContinuousDistribution.getCriticalTValue (n - 2.) 0.05 ContinuousDistribution.TwoTailed\nlet lowerS      = slope - criticalT * stdErrSlope\nlet upperS      = slope \u002B criticalT * stdErrSlope\nlet lowerI      = intercept - criticalT * stdErrIntercept\nlet upperI      = intercept \u002B criticalT * stdErrIntercept\n//significance tests\nlet testSlope   = GoodnessOfFit.ttestSlope slope sos\nlet testInterc  = GoodnessOfFit.ttestIntercept intercept sos\n\n  \nlet outputTable = \n    let header = [\u0022\u003Cb\u003EParameterName\u003C/b\u003E\u0022;\u0022Value\u0022;\u0022StandardError (SE Coeff)\u0022]\n    let rows = \n        let print f = sprintf \u0022%.3f\u0022 f\n        [\n        [\u0022n\u0022;               sprintf \u0022%.0f\u0022 n;       \u0022-\u0022] \n        [\u0022meanX\u0022;           print meanX;            \u0022-\u0022]\n        [\u0022meanY\u0022;           print meanY;            \u0022-\u0022]\n        [\u0022slope\u0022;           print slope;            print stdErrSlope]\n        [\u0022intercept\u0022 ;      print intercept;        print stdErrIntercept]\n        [\u0022\u003Cb\u003EGoodness of fit\u003C/b\u003E\u0022;\u0022\u0022;               \u0022\u0022]\n        [\u0022SS_total\u0022;        print ssTotal;          \u0022\u0022]\n        [\u0022SS_regression\u0022;   print ssReg;            \u0022\u0022]\n        [\u0022SS_residual\u0022;     print ssResidual;       \u0022\u0022]\n        [\u0022r (pearson cor. coef.\u0022;               print r;                \u0022\u0022]\n        [\u0022r_squared\u0022;       print rSq;             \u0022\u0022]      \n        [\u0022r_squared_adj\u0022;   print rSqAdj;         \u0022\u0022]\n        [\u0022SE Estimate\u0022;     print stdErrEstimate;   \u0022\u0022]   \n        [\u0022\u003Cb\u003E95% Confidence interval\u003C/b\u003E\u0022;\u0022\u003Cb\u003Emin\u003C/b\u003E\u0022;    \u0022\u003Cb\u003Emax\u003C/b\u003E\u0022]\n        [\u0022slope\u0022;           print lowerS;           print upperS]\n        [\u0022intercept\u0022;       print lowerI;           print upperI]\n        [\u0022\u003Cb\u003Esignificances\u003C/b\u003E\u0022;\u0022\u0022;                 \u0022\u0022]\n        [\u0022slope p Value\u0022;   print testSlope.PValue; \u0022\u0022]\n        [\u0022intercept p Value\u0022;print testInterc.PValue;\u0022\u0022]\n        ]\n    Chart.Table(\n        header, \n        rows, \n        HeaderFillColor = Color.fromString \u0022#deebf7\u0022,\n        CellsFillColor  = Color.fromColors [Color.fromString \u0022#deebf7\u0022; Color.fromString \u0022white\u0022;Color. fromString \u0022white\u0022],\n        CellsMultiAlign  = [StyleParam.HorizontalAlign.Left;StyleParam.HorizontalAlign.Center]\n        )\n    |\u003E Chart.withTitle \u0022Regression report\u0022\n    \n\n(*** condition: ipynb ***)\n#if IPYNB\noutputTable\n#endif // IPYNB\n\n(***hide***)\noutputTable |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n## Confidence bands\n\nA confidence band shows the uncertainty of an curve estimate. It widens towards the periphery. \n\nA prediction band shows the uncertainty of a value of a new data point.\n\nIn both cases homoscedasticity is assumed.\n\n*)\n\n//data sorted by x values\nlet xData = vector [|1. .. 10.|]\nlet yData = vector [|4.;10.;9.;7.;13.;17.;16.;23.;15.;30.|]\n//let xData = vector [|1.47;1.50;1.52;1.55;1.57;1.60;1.63;1.65;1.68;1.70;1.73;1.75;1.78;1.80;1.83|]\n//let yData = vector [|52.21;53.12;54.48;55.84;57.20;58.57;59.93;61.29;63.11;64.47;66.28;68.10;69.92;72.19;74.46|]\nlet values = Seq.zip xData yData\n\n///linear regression line fitting function\nlet coeffs = Linear.Univariable.coefficient xData yData\nlet fit = Linear.Univariable.fit coeffs\n\nlet fitValues = xData |\u003E Seq.map (fun xi -\u003E xi,(fit xi))\n\n///calculate confidence band errors for every x value\nlet confidence = \n    xData\n    |\u003E Vector.map (calculateConfidenceBandError xData yData 0.95)\n\n///lower and upper bounds of the 95% confidence band sorted according to x values\nlet (lower,upper) = \n    xData \n    |\u003E Seq.mapi (fun i xi -\u003E (fit xi) - confidence.[i],(fit xi) \u002B confidence.[i]) \n    |\u003E Seq.unzip\n\nlet rangePlot = \n    [\n    Chart.Range (\n        fitValues,\n        lower,\n        upper,\n        mode = StyleParam.Mode.Lines,\n        Color = Color.Table.Office.blue,\n        RangeColor = Color.Table.Office.lightBlue)\n        |\u003E Chart.withTraceName \u0022CI95\u0022\n    Chart.Point (values,MarkerColor=Color.fromString \u0022#000000\u0022) |\u003E Chart.withTraceName \u0022raw\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022Confidence band 95%\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nrangePlot\n#endif // IPYNB\n\n(***hide***)\nrangePlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\nThe confidence band calculation is not limited to the original x values. To get a smooth confidence band, introduce additional x values in small steps.\n*)\n\nlet newXValues =\n    vector [|1. .. 0.5 .. 11.|]\n\n///calculate confidence band errors for every x value\nlet newConfidence = \n    newXValues\n    |\u003E Vector.map (calculateConfidenceBandError xData yData 0.95)\n\n///lower and upper bounds of the 95% confidence band sorted according to x values\nlet (newLower,newUpper) = \n    newXValues \n    |\u003E Seq.mapi (fun i xi -\u003E (fit xi) - newConfidence.[i],(fit xi) \u002B newConfidence.[i]) \n    |\u003E Seq.unzip\n\nlet linePlot =\n    [\n    Chart.Point(xData,yData) |\u003E Chart.withTraceName (sprintf \u0022%.2f\u002B%.4fx\u0022 coeffs.[0] coeffs.[1])\n    Chart.Line(fitValues) |\u003E Chart.withTraceName \u0022linear regression\u0022\n    Chart.Line(newXValues,newLower,LineColor= Color.fromString \u0022#C1C1C1\u0022) |\u003E Chart.withLineStyle(Dash=StyleParam.DrawingStyle.Dash)|\u003E Chart.withTraceName \u0022lower\u0022\n    Chart.Line(newXValues,newUpper,LineColor= Color.fromString \u0022#C1C1C1\u0022) |\u003E Chart.withLineStyle(Dash=StyleParam.DrawingStyle.Dash)|\u003E Chart.withTraceName \u0022upper\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022Confidence band 95%\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nrangePlot\n#endif // IPYNB\n\n(***hide***)\nlinePlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Prediction bands\n\n*)\n\nlet predictionXValues = vector [|1. .. 0.5 .. 15.|]\n///calculate preditcion band errors for every x value\nlet prediction = \n    predictionXValues\n    |\u003E Vector.map (calculatePredictionBandError xData yData 0.95)\n\n///lower and upper bounds of the 95% prediction band sorted according to x values\nlet (pLower,pUpper) = \n    predictionXValues \n    |\u003E Seq.mapi (fun i xi -\u003E (fit xi) - prediction.[i],(fit xi) \u002B prediction.[i]) \n    |\u003E Seq.unzip\n\nlet predictionPlot =\n    [\n    Chart.Point(xData,yData) |\u003E Chart.withTraceName (sprintf \u0022%.2f\u002B%.4fx\u0022 coeffs.[0] coeffs.[1])\n    Chart.Line(fitValues) |\u003E Chart.withTraceName \u0022linear regression\u0022\n    Chart.Line(predictionXValues,pLower,LineColor= Color.fromString \u0022#C1C1C1\u0022) |\u003E Chart.withLineStyle(Dash=StyleParam.DrawingStyle.Dash)|\u003E Chart.withTraceName \u0022pLower\u0022\n    Chart.Line(predictionXValues,pUpper,LineColor= Color.fromString \u0022#C1C1C1\u0022) |\u003E Chart.withLineStyle(Dash=StyleParam.DrawingStyle.Dash)|\u003E Chart.withTraceName \u0022pUpper\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022Prediction band\u0022\n\n\n(***hide***)\npredictionPlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n## Cook\u0027s distance\n\nLeverage: Leverage describes the potential impact of data points regarding their regression line. Points that show a great dependent-variable-distance to all other points, have a \nhigher potential to distort the regression line coefficients (high-leverage points).\n\nCooks distance (D) is a measure to describe the influence of each data point to the regression line.\nIf D is low, the influence is low, while a high D indicates an \u0027influential observation\u0027 that is worth taking a closer look.\nCooks distance is a mixture of the residual sum of squares at the particular point and its leverage.\n\nA linear threshold is arbitrarily defined by either 1, 4/n, or 3*mean(D).\nBecause outliers have a strong influence to D of all other points as well, the thresholds should not be applied without checking the issues by eye.\n\n*)\n\nopen LinearRegression.OrdinaryLeastSquares.Linear\n\nlet xD = vector [|1. .. 10.|]\nlet yD = vector [|4.;6.;9.;7.;13.;17.;16.;23.;14.;26.|]\n\nlet cooksDistance = Univariable.cooksDistance xD yD\n\nlet nD         = float xD.Length\nlet meanCook   = Seq.mean cooksDistance\nlet threshold1 = 1.\nlet threshold2 = 4. / nD\nlet threshold3 = 3. * meanCook\n\nlet cook = \n    [\n    Chart.Column (Seq.zip xD cooksDistance) |\u003E Chart.withTraceName \u0022cook\u0027s distance\u0022\n    Chart.Line([0.5,threshold1;10.5,threshold1])|\u003E Chart.withLineStyle(Dash=StyleParam.DrawingStyle.Dash)|\u003E Chart.withTraceName \u0022t=1\u0022\n    Chart.Line([0.5,threshold2;10.5,threshold2])|\u003E Chart.withLineStyle(Dash=StyleParam.DrawingStyle.Dash)|\u003E Chart.withTraceName \u0022t=4/n\u0022\n    Chart.Line([0.5,threshold3;10.5,threshold3])|\u003E Chart.withLineStyle(Dash=StyleParam.DrawingStyle.Dash)|\u003E Chart.withTraceName \u0022t=3*mean(D)\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022cook\u0027s distance\u0022\n    |\u003E fun l -\u003E [(Chart.Point(xD,yD) |\u003E Chart.withTraceName \u0022raw\u0022);l] |\u003E Chart.Grid(2,1)\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022Cook\u0027s distance\u0022\n    |\u003E Chart.withSize (650.,650.)\n\n(*** condition: ipynb ***)\n#if IPYNB\ncook\n#endif // IPYNB\n\n(***hide***)\ncook |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n"},{"uri":"https://fslab.org/FSharp.Stats/GrowthCurve.html","title":"Growth curve","content":"(**\n---\ntitle: Growth curve\nindex: 9\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(**\n\n# Growth curve\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=GrowthCurve.ipynb)\n\n_Summary:_ this tutorial demonstrates variou way to model growth curves, a commong task in any (micro)biological lab\n\n### Table of contents\n\n - [Modelling](#Modelling)\n - [Manual phase selection](#Manual-phase-selection)\n - [Gompertz model](#Gompertz-model)\n - [Generation time calculation](#Generation-time-calculation)\n - [Other models](#Other-models)\n    - [Richards curve](#Richards-curve)\n    - [Weibull](#Weibull)\n    - [Janoschek](#Janoschek)\n    - [Exponential](#Exponential)\n    - [Verhulst](#Verhulst)\n    - [Morgan-Mercer-Flodin](#Morgan-Mercer-Flodin)\n    - [von Bertalanffy](#von-Bertalanffy)\n - [Comparison between all models](Comparison-between-all-models)\n    - [Fit function](#Fit-function)\n    - [Generation time](#Generation-time)\n - [Model examples](#Model-examples)\n\n## Modelling\n\nGrowth and other physiological parameters like size/weight/length can be modeled as function of time.\nSeveral growth curve models have been proposed. Some of them are covered in this documentation.\n\nFor growth curve analysis the cell count data must be considered in log space. The exponential phase (log phase) then becomes linear.\nAfter modeling, all growth parameters (maximal cell count, lag phase duration, and growth rate) can be derived from the model, so there is no\nneed for manual labelling of separate growth phases.\n\n\u003C/br\u003E\n\n![Data model](img/growthCurve.png)\n\n\u003C/br\u003E\n\nIf specific parameters should be constrained to the users choice (like upper or lower asymptote), a constrained version of the \nLevenberg-Marquardt solver can be used (\u0060LevenbergMarquardtConstrained\u0060)! Accordingly, minimal and maximal parameter vectors must be provided.\n\n*)\n\nopen System\nopen FSharp.Stats\nopen FSharp.Stats.Fitting.NonLinearRegression\nopen FSharp.Stats.Fitting.LinearRegression\n\nlet time = [|0. .. 0.5 .. 8.|]\n\nlet cellCount =\n    [|\n    17000000.;16500000.;11000000.;14000000.;27000000.;40000000.;120000000.;\n    300000000.;450000000.;1200000000.;2700000000.;5000000000.;\n    8000000000.;11700000000.;12000000000.;13000000000.;12800000000.\n    |]\n\nlet cellCountLn = cellCount |\u003E Array.map log\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\nlet chartOrig = \n    Chart.Point(time,cellCount)\n    |\u003E Chart.withTraceName \u0022original data\u0022\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022cells/ml\u0022\n\nlet chartLog =\n    Chart.Point(time,cellCountLn)\n    |\u003E Chart.withTraceName \u0022log count\u0022\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    \nlet growthChart = \n    [chartOrig;chartLog] |\u003E Chart.Grid(2,1)\n\n(*** condition: ipynb ***)\n#if IPYNB\ngrowthChart\n#endif // IPYNB\n\n(***hide***)\ngrowthChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n## Manual phase selection\n\nIf growth phases are labelled manually, the exponential phase can be fitted with a regression line. \n\nTo determine the generation time, it is necessary to find the time interval it takes to double the count data.\nWhen a log\u003Csub\u003E2\u003C/sub\u003E transform is used, a doubling of the original counts is achieved, when the log value moves 1 unit.\nKeeping that in mind, the slope can be used to calculate the time it takes for the log\u003Csub\u003E2\u003C/sub\u003E data to increase 1 unit.\n\n  - slope * generation time = 1\n\n  - generation time = 1/slope\n\nIf a different log transform was used, the correction factor for the numerator is log\u003Csub\u003Ex\u003C/sub\u003E(2).\n*)\n\n\n// The exponential phase was defined to be between time point 1.5 and 5.5.\nlet logPhaseX = vector time.[3..11]\nlet logPhaseY = vector cellCountLn.[3..11]\n\n// regression coefficients as [intercept;slope]\nlet regressionCoeffs =\n    OrdinaryLeastSquares.Linear.Univariable.coefficient logPhaseX logPhaseY\n\n(**Here is a pre-evaluated version (to save time during the build process, as the solver takes quite some time.)*)\n\n// The generation time is calculated by dividing log_x 2. by the regression line slope. \n// The log transform must match the used data transform. \nlet slope = regressionCoeffs.[1]\nlet generationTime = log(2.) / slope\n\n\nlet fittedValues = \n    let f = OrdinaryLeastSquares.Linear.Univariable.fit (vector [|14.03859475; 1.515073487|])\n    logPhaseX |\u003E Seq.map (fun x -\u003E x,f x)\n\nlet chartLinearRegression =\n    [\n    Chart.Point(time,cellCountLn)   |\u003E Chart.withTraceName \u0022log counts\u0022\n    Chart.Line(fittedValues)        |\u003E Chart.withTraceName \u0022fit\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n\n\n(*** condition: ipynb ***)\n#if IPYNB\nchartLinearRegression\n#endif // IPYNB\n\n(***hide***)\nchartLinearRegression |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\nlet generationTimeManual = sprintf \u0022The generation time (manual selection) is: %.1f min\u0022 ((log(2.)/1.5150)* 60.)\n\ngenerationTimeManual\n(***include-it-raw***)\n\n(**\n\n## Gompertz model\n\nIn the following example the four parameter gompertz function is applied to cell count data (Gibson et al., 1988).\n\nThe Gompertz model is fitted using the Levenberg Marquardt solver. Initial parameters are estimated from the original data.\nThe expected generation time has to be approximated as initial guess. \n\nFor parameter interpretation the applied log transform is important and must be provided.\nIf other parameters than cell count (e.g. size or length) should be analyzed, use \u0060id\u0060 as value transform.\n\nGompertz parameters:\n\n  - A: lower asymptote\n\n  - B: relative growth rate (approximated by generation time consideration)\n\n  - C: upper asymptote - lower asymptote \n\n  - M: time point of inflection (maximal growth rate)\n\n*)\n\n// The Levenberg Marquardt algorithm identifies the parameters that leads to the best fit \n// of the gompertz models to the count data. The solver must be provided with initial parameters\n// that are estimated in the following:\nlet solverOptions (xData :float []) (yDataLog :float []) expectedGenerationTime (usedLogTransform: float -\u003E float) =\n    // lower asymptote\n    let a = Seq.min yDataLog\n    // upper asymptote - lower asymptote (y range)\n    let c = (Seq.max yDataLog) - a\n    // relative growth rate\n    let b = usedLogTransform 2. * Math.E / (expectedGenerationTime * c)\n    // time point of inflection (in gompertz model at f(x)=36% of the y range)\n    let m = \n        let yAtInflection = a \u002B c * 0.36\n        Seq.zip xData yDataLog\n        |\u003E Seq.minBy (fun (xValue,yValue) -\u003E\n            Math.Abs (yValue - yAtInflection)\n        )\n        |\u003E fst\n    createSolverOption 0.001 0.001 10000 [|a;b;c;m|]\n\n// By solving the nonlinear fitting problem, the optimal model parameters are determined\nlet gompertzParams =\n    LevenbergMarquardt.estimatedParams\n        Table.GrowthModels.gompertz\n        (solverOptions time cellCountLn 1. log)\n        0.1\n        10.\n        time\n        cellCountLn\n\nlet fittingFunction = \n    Table.GrowthModels.gompertz.GetFunctionValue gompertzParams\n\n    \nlet fittedValuesGompertz =\n    // The parameter were determined locally for saving time during build processes\n    //let f = Table.GrowthModels.gompertz.GetFunctionValue (vector [|16.46850199; 0.7014917539; 7.274139441; 3.3947717|])\n    [time.[0] .. 0.1 .. Seq.last time]\n    |\u003E Seq.map (fun x -\u003E \n        x,fittingFunction x\n        ) \n    |\u003E Chart.Line\n    |\u003E Chart.withTraceName \u0022gompertz\u0022\n\nlet fittedChartGompertz = \n    [\n        Chart.Point(time,cellCountLn)\n        |\u003E Chart.withTraceName \u0022log count\u0022\n        fittedValuesGompertz\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nfittedChartGompertz\n#endif // IPYNB\n\n(***hide***)\nfittedChartGompertz |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Generation time calculation\n\nThe generation time can be calculated by dividing log(2) by the slope of the inflection point. The used log transform must\nmatch the used log transform applied to the count data.\n\nThe four parameter Gompertz model allows the determination of generation times from its parameters (Gibson et al., 1988).\n\n*)\n\nlet generationtime (parametervector:vector) (logTransform:float -\u003E float) =\n    logTransform 2. * Math.E / (parametervector.[1] * parametervector.[2])\n\nlet lag (parametervector:vector) =\n    (parametervector.[3] - 1.) / parametervector.[1]\n\nlet g = sprintf \u0022The generation time (Gompertz) is: %.1f min\u0022 (60. * (generationtime gompertzParams log))\nlet l = sprintf \u0022The lag phase duration is %.2f h\u0022 (lag gompertzParams)\n\n(*** include-value:g ***)\n(*** include-value:l ***)\n\n(**\n\n## Other models\n\nIn the following other growth models are applied to the given data set:\n\n  - Richards\n\n  - Weibull\n\n  - Janoschek\n\n  - Exponential\n\n  - Verhulst\n\n  - Morgan-Mercer-Flodin\n\n  - von Bertalanffy\n\nTo determine the generation time, the slope at the inflection point must be calculated. \nAs explained above, the generation time can be calculated by: logx(2)/(slope at inflection) where x is the used\nlog transform.\n\n[Choose a appropriate growth model according to your needs.](http://www.pisces-conservation.com/growthhelp/index.html)\n\nFor an overview please scroll down to see a combined diagram of all growth models.\n\n\n### Richards curve\n\nParameters:\n\n- l: upper asymptote\n\n- k: growth rate\n\n- y: inflection point (x value)\n\n- d: influences the inflection point on the y axis\n\n*)\n\n(*** do-not-eval ***)\n\nlet richardsParams =\n    LevenbergMarquardt.estimatedParams\n        Table.GrowthModels.richards\n        (createSolverOption 0.001 0.001 10000 [|23.;1.;3.4;2.|])\n        0.1\n        10.\n        time\n        cellCountLn\n\nlet fittingFunctionRichards = \n    Table.GrowthModels.richards.GetFunctionValue richardsParams\n\n(**Here is a pre-evaluated version (to save time during the build process, as the solver takes quite some time.)*)\n\nlet generationtimeRichards (richardParameters:vector) =\n    let l = richardParameters.[0]\n    let k = richardParameters.[1]\n    let y = richardParameters.[2] //x value of inflection point\n    let d = richardParameters.[3]\n    let gradientFunctionRichards t =\n        (k*l*((d-1.)*Math.Exp(-k*(t-y))\u002B1.)**(1./(1.-d)))/(Math.Exp(k*(t-y))\u002Bd-1.)\n    let maximalSlope =\n        gradientFunctionRichards y\n    log(2.) / maximalSlope\n\nlet fittedValuesRichards =\n    // The parameter were determined locally for saving time during build processes\n    let f =  Table.GrowthModels.richards.GetFunctionValue (vector [|23.25211263; 7.053516315; 5.646889803; 111.0132522|])\n    [time.[0] .. 0.1 .. Seq.last time]\n    |\u003E Seq.map (fun x -\u003E \n        x,f x\n        ) \n    |\u003E Chart.Line\n\nlet fittedChartRichards = \n    fittedValuesRichards\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTraceName \u0022richards\u0022\n\nlet fittedChartRichardsS = \n    [\n        Chart.Point(time,cellCountLn)\n        |\u003E Chart.withTraceName \u0022log count\u0022\n        fittedValuesRichards\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTitle \u0022richards\u0022\n\nlet generationRichards = sprintf \u0022The generation time (Richards) is: %.1f min\u0022 (generationtimeRichards (vector [|23.25211263; 7.053516315; 5.646889803; 111.0132522|]) * 60.)\n\n(*** condition: ipynb ***)\n#if IPYNB\nfittedChartRichardsS\n#endif // IPYNB\n\n(***hide***)\nfittedChartRichardsS |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(*** include-value:generationRichards ***)\n\n(**\n\n### Weibull\n\nParameters:\n\n- b: lower asymptote\n\n- l: upper asymptote\n\n- k: growth rate\n\n- d: influences the inflection point position\n\n*)\n\n(*** do-not-eval ***)\n\nlet weibullParams =\n    LevenbergMarquardt.estimatedParams\n        Table.GrowthModels.weibull\n        (createSolverOption 0.001 0.001 10000 [|15.;25.;1.;5.|])\n        0.1\n        10.\n        time\n        cellCountLn\n\nlet fittingFunctionWeibull = \n    Table.GrowthModels.weibull.GetFunctionValue weibullParams\n\n(**Here is a pre-evaluated version (to save time during the build process, as the solver takes quite some time.)*)\n\nlet generationtimeWeibull (weibullParameters:vector) =\n    let b = weibullParameters.[0]\n    let l = weibullParameters.[1]\n    let k = weibullParameters.[2]\n    let d = weibullParameters.[3]\n    let gradientFunctionWeibull t =\n        (d*(l-b)*(k*t)**d*Math.Exp(-((k*t)**d)))/t\n    let inflectionPointXValue =\n        (1./k)*((d-1.)/d)**(1./d)\n    let maximalSlope =\n        gradientFunctionWeibull inflectionPointXValue\n    log(2.) / maximalSlope\n\nlet fittedValuesWeibull =\n    // The parameter were determined locally for saving time during build processes\n    let f =  Table.GrowthModels.weibull.GetFunctionValue (vector [|16.40632433; 23.35537293; 0.2277752116; 2.900806071|])\n    [time.[0] .. 0.1 .. Seq.last time]\n    |\u003E Seq.map (fun x -\u003E \n        x,f x\n        ) \n    |\u003E Chart.Line\n\nlet fittedChartWeibull = \n    fittedValuesWeibull\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTraceName \u0022weibull\u0022\n\nlet fittedChartWeibullS = \n    [\n        Chart.Point(time,cellCountLn)\n        |\u003E Chart.withTraceName \u0022log count\u0022\n        fittedValuesWeibull\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTitle \u0022weibull\u0022\n\nlet generationWeibull = \n    sprintf \u0022The generation time (Weibull) is: %.1f min\u0022 (generationtimeWeibull (vector [|16.40632433; 23.35537293; 0.2277752116; 2.900806071|]) * 60.)   \n\n(*** condition: ipynb ***)\n#if IPYNB\nfittedChartWeibullS\n#endif // IPYNB\n\n(***hide***)\nfittedChartWeibullS |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(*** include-value:generationWeibull ***)\n\n(**\n\n### Janoschek\n\nParameters:\n\n- b: lower asymptote\n\n- l: upper asymptote\n\n- k: growth rate\n\n- d: influences the inflection point position on the x axis\n\n*)\n\n(*** do-not-eval ***)\n\nlet janoschekParams =\n    LevenbergMarquardt.estimatedParams\n        Table.GrowthModels.janoschek\n        (createSolverOption 0.001 0.001 10000 [|15.;25.;1.;5.|])\n        0.1\n        10.\n        time\n        cellCountLn\n\nlet fittingFunctionJanoschek = \n    Table.GrowthModels.janoschek.GetFunctionValue janoschekParams\n\n(**Here is a pre-evaluated version (to save time during the build process, as the solver takes quite some time.)*)\n\nlet generationtimeJanoschek (janoschekParameters:vector) =\n    let b = janoschekParameters.[0]\n    let l = janoschekParameters.[1]\n    let k = janoschekParameters.[2]\n    let d = janoschekParameters.[3]\n    let gradientFunctionJanoschek t =\n        d*k*(l-b)*t**(d-1.)*Math.Exp(-k*t**d)\n    //Chart to estimate point of maximal slope (inflection point)\n    let slopeChart() =\n        [time.[0] .. 0.1 .. 8.] |\u003E List.map (fun x -\u003E x, gradientFunctionJanoschek x) |\u003E Chart.Line\n    let inflectionPointXValue =\n        3.795\n    let maximalSlope =\n        gradientFunctionJanoschek inflectionPointXValue\n    log(2.) / maximalSlope\n    \nlet fittedValuesJanoschek =\n    // The parameter were determined locally for saving time during build processes\n    let f =  Table.GrowthModels.janoschek.GetFunctionValue (vector [|16.40633962; 23.35535182; 0.01368422994; 2.900857027|])\n    [time.[0] .. 0.1 .. Seq.last time]\n    |\u003E Seq.map (fun x -\u003E \n        x,f x\n        ) \n    |\u003E Chart.Line\n\nlet fittedChartJanoschek = \n    fittedValuesJanoschek\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTraceName \u0022janoschek\u0022\n\nlet fittedChartJanoschekS = \n    [\n        Chart.Point(time,cellCountLn)\n        |\u003E Chart.withTraceName \u0022log count\u0022\n        fittedChartJanoschek\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTitle \u0022janoschek\u0022\n\nlet generationJanoschek = \n    sprintf \u0022The generation time (Janoschek) is: %.1f min\u0022 (generationtimeJanoschek (vector [|16.40633962; 23.35535182; 0.01368422994; 2.900857027|]) * 60.)\n\n(*** condition: ipynb ***)\n#if IPYNB\nfittedChartJanoschekS\n#endif // IPYNB\n\n(***hide***)\nfittedChartJanoschekS |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(*** include-value:generationJanoschek ***)\n\n(**\n\n### Exponential\n\nThe exponential model of course can not be applied to the lag phase.\n\nParameters:\n\n- b: lower asymptote\n\n- l: upper asymptote\n\n- k: growth rate\n\n*)\n\n(*** do-not-eval ***)\nlet exponentialParams =\n    LevenbergMarquardt.estimatedParams\n        Table.GrowthModels.exponential\n        (createSolverOption 0.001 0.001 10000 [|15.;25.;0.5|])\n        0.1\n        10.\n        time.[6..]\n        cellCountLn.[6..]\n\nlet fittingFunctionExponential = \n    Table.GrowthModels.exponential.GetFunctionValue exponentialParams\n\n(**Here is a pre-evaluated version (to save time during the build process, as the solver takes quite some time.)*)\n\nlet generationtimeExponential (expParameters:vector) =\n    let b = expParameters.[0]\n    let l = expParameters.[1]\n    let k = expParameters.[2]\n    let gradientFunctionExponential t =\n        k*(l-b)*Math.Exp(-k*t)\n    let maximalSlope =\n        gradientFunctionExponential time.[6]\n    log(2.) / maximalSlope\n\nlet fittedValuesExp =\n    // The parameter were determined locally for saving time during build processes\n    let f =  Table.GrowthModels.exponential.GetFunctionValue (vector [|4.813988967; 24.39950361; 0.3939132175|])\n    [3.0 .. 0.1 .. Seq.last time]\n    |\u003E Seq.map (fun x -\u003E \n        x,f x\n        ) \n    |\u003E Chart.Line\n\nlet fittedChartExp = \n    fittedValuesExp\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTraceName \u0022exponential\u0022\n\nlet fittedChartExpS = \n    [\n        Chart.Point(time,cellCountLn)\n        |\u003E Chart.withTraceName \u0022log count\u0022\n        fittedChartExp\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTitle \u0022exponential\u0022\n\nlet generationExponential = \n    sprintf \u0022The generation time (Exp) is: %.1f min\u0022 (generationtimeExponential (vector [|4.813988967; 24.39950361; 0.3939132175|]) * 60.)\n    \n(*** condition: ipynb ***)\n#if IPYNB\nfittedChartExpS\n#endif // IPYNB\n\n(***hide***)\nfittedChartExpS |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(*** include-value:generationExponential ***)\n\n(**\n\n## Verhulst\n\nThe verhulst growth model is a logistic function with a lower asymptote fixed at y=0. A 4 parameter version allows \nthe lower asymptote to vary from 0.\n\nNote: symmetric with inflection point at 50 % of y axis range\n\nParameters:\n\n\n- l: upper asymptote\n\n- k: x value at inflection point\n\n- d: steepness\n\n- b: lower asymptote\n\n\nTo apply the 3 parameter verhulst model with a fixed lower asymptote = 0 use the \u0027verhulst\u0027 model instead of \u0027verhulst4Param\u0027.\n*)\n\n(*** do-not-eval ***)\n\nlet verhulstParams =\n    LevenbergMarquardt.estimatedParams\n        Table.GrowthModels.verhulst4Param\n        (createSolverOption 0.001 0.001 10000 [|25.;3.5;1.;15.|])\n        0.1\n        10.\n        time\n        cellCountLn\n\nlet fittingFunctionVerhulst() = \n    Table.GrowthModels.verhulst.GetFunctionValue verhulstParams\n\n(**Here is a pre-evaluated version (to save time during the build process, as the solver takes quite some time.)*)\n\nlet generationtimeVerhulst (verhulstParameters:vector) =\n    let lmax = verhulstParameters.[0]\n    let k    = verhulstParameters.[1]\n    let d    = verhulstParameters.[2]\n    let lmin = verhulstParameters.[3]\n    let gradientFunctionVerhulst t =\n        ((lmax-lmin)*Math.Exp((k-t)/d))/(d*(Math.Exp((k-t)/d)\u002B1.)**2.)\n    let maximalSlope =\n        gradientFunctionVerhulst k\n    log(2.) / maximalSlope\n\nlet fittedValuesVerhulst =\n    // The parameter were determined locally for saving time during build processes\n    let f =  Table.GrowthModels.verhulst4Param.GetFunctionValue (vector [|23.39504328; 3.577488116; 1.072136278; 15.77380824|])\n    [time.[0] .. 0.1 .. Seq.last time]\n    |\u003E Seq.map (fun x -\u003E \n        x,f x\n        ) \n    |\u003E Chart.Line\n\nlet fittedChartVerhulst = \n    fittedValuesVerhulst\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTraceName \u0022verhulst\u0022\n\nlet fittedChartVerhulstS = \n    [\n        Chart.Point(time,cellCountLn)\n        |\u003E Chart.withTraceName \u0022log count\u0022\n        fittedChartVerhulst\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTitle \u0022verhulst\u0022\n\nlet generationVerhulst = \n    sprintf \u0022The generation time (Verhulst) is: %.1f min\u0022 (generationtimeVerhulst (vector [|23.39504328; 3.577488116; 1.072136278; 15.77380824|]) * 60.)\n\n(*** condition: ipynb ***)\n#if IPYNB\nfittedChartVerhulstS\n#endif // IPYNB\n\n(***hide***)\nfittedChartVerhulstS |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(*** include-value:generationVerhulst ***)\n\n(**\n\n## Morgan-Mercer-Flodin\n\nParameters:\n\n- b: count at t0\n\n- l: upper asymptote\n\n- k: growth rate\n\n- d: influences the inflection point position\n\n*)\n\n(*** do-not-eval ***)\n\nlet morganMercerFlodinParams =\n    LevenbergMarquardt.estimatedParams\n        Table.GrowthModels.morganMercerFlodin\n        (createSolverOption 0.001 0.001 10000 [|15.;25.;0.2;3.|])\n        0.1\n        10.\n        time\n        cellCountLn\n\nlet fittingFunctionMMF() = \n    Table.GrowthModels.morganMercerFlodin.GetFunctionValue morganMercerFlodinParams\n\n(**Here is a pre-evaluated version (to save time during the build process, as the solver takes quite some time.)*)\n\nlet generationtimeMmf (mmfParameters:vector) =\n    let b = mmfParameters.[0]\n    let l = mmfParameters.[1]\n    let k = mmfParameters.[2]\n    let d = mmfParameters.[3]\n    let gradientFunctionMmf t =\n        (d*(l-b)*(k*t)**d)/(t*((k*t)**d\u002B1.)**2.)\n    //Chart to estimate point of maximal slope (inflection point)\n    let slopeChart() =\n        [time.[0] .. 0.1 .. 8.] |\u003E List.map (fun x -\u003E x, gradientFunctionMmf x) |\u003E Chart.Line\n    let inflectionPointXValue =\n        3.45\n    let maximalSlope =\n        gradientFunctionMmf inflectionPointXValue\n    log(2.) / maximalSlope\n\nlet generationMmf = \n    sprintf \u0022The generation time (MMF) is: %.1f min\u0022 (generationtimeMmf (vector [|16.46099291; 24.00147463; 0.2500698772; 3.741048641|]) * 60.)\n\nlet fittedValuesMMF =\n    // The parameter were determined locally for saving time during build processes\n    let f =  Table.GrowthModels.morganMercerFlodin.GetFunctionValue (vector [|16.46099291; 24.00147463; 0.2500698772; 3.741048641|])\n    [time.[0] .. 0.1 .. Seq.last time]\n    |\u003E Seq.map (fun x -\u003E \n        x,f x\n        ) \n    |\u003E Chart.Line\n\nlet fittedChartMMF = \n    [\n        Chart.Point(time,cellCountLn)\n        |\u003E Chart.withTraceName \u0022log count\u0022\n        fittedValuesMMF |\u003E Chart.withTraceName \u0022morganMercerFlodin\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n    |\u003E Chart.withTitle \u0022morganMercerFlodin\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nfittedChartMMF\n#endif // IPYNB\n\n(***hide***)\nfittedChartMMF |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(*** include-value:generationMmf ***)\n\n(**\n## von Bertalanffy\n\nSince this model expects a x axis crossing of the data it cannot be applied to the given data.\n\nParameters:\n\n - l: upper asymptote\n\n - k: growth rate\n\n - t0: x axis crossing\n\n*)\n\n(**\n## Comparison between all models\n\n### Fit function\n*)\nlet combinedChart =\n    [\n        \n        Chart.Point(time,cellCountLn) |\u003E Chart.withTraceName \u0022log count\u0022\n        Chart.Line(fittedValues)|\u003E Chart.withTraceName \u0022regression line\u0022\n        fittedValuesGompertz    |\u003E Chart.withTraceName \u0022Gompertz\u0022\n        fittedValuesRichards    |\u003E Chart.withTraceName \u0022Richards\u0022\n        fittedValuesWeibull     |\u003E Chart.withTraceName \u0022Weibull\u0022\n        fittedValuesJanoschek   |\u003E Chart.withTraceName \u0022Janoschek\u0022\n        fittedValuesExp         |\u003E Chart.withTraceName \u0022Exponential\u0022\n        fittedValuesVerhulst    |\u003E Chart.withTraceName \u0022Verhulst\u0022\n        fittedValuesMMF         |\u003E Chart.withTraceName \u0022MorganMercerFlodin\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022time (h)\u0022 \u0022ln(cells/ml)\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\ncombinedChart\n#endif // IPYNB\n\n(***hide***)\ncombinedChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n### Generation time\n*)\n\nlet generationTimeTable =\n    let header = [\u0022\u003Cb\u003EModel\u003C/b\u003E\u0022;\u0022\u003Cb\u003EGeneration time (min)\u0022]\n    let rows = \n        [\n            [\u0022manual selection (regression line)\u0022;      sprintf \u0022%.1f\u0022 ((log(2.)/1.5150)* 60.)]    \n            [\u0022Gompertz\u0022;    sprintf \u0022%.1f\u0022 (60. * (generationtime gompertzParams log))]    \n            [\u0022Richards\u0022;    sprintf \u0022%.1f\u0022 (generationtimeRichards (vector [|23.25211263; 7.053516315; 5.646889803; 111.0132522|]) * 60.)]       \n            [\u0022Weibull\u0022;     sprintf \u0022%.1f\u0022 (generationtimeWeibull (vector [|16.40632433; 23.35537293; 0.2277752116; 2.900806071|]) * 60.)  ]       \n            [\u0022Janoschek\u0022;   sprintf \u0022%.1f\u0022 (generationtimeJanoschek (vector [|16.40633962; 23.35535182; 0.01368422994; 2.900857027|]) * 60.)]    \n            [\u0022Exponential\u0022; sprintf \u0022%.1f\u0022 (generationtimeExponential (vector [|4.813988967; 24.39950361; 0.3939132175|]) * 60.)]\n            [\u0022Verhulst\u0022;    sprintf \u0022%.1f\u0022 (generationtimeVerhulst (vector [|23.39504328; 3.577488116; 1.072136278; 15.77380824|]) * 60.)] \n            [\u0022MMF\u0022;         sprintf \u0022%.1f\u0022 (generationtimeMmf (vector [|16.46099291; 24.00147463; 0.2500698772; 3.741048641|]) * 60.)] \n        ]\n    \n    Chart.Table(\n        header, \n        rows,\n        HeaderFillColor = Color.fromHex \u0022#45546a\u0022,\n        CellsFillColor = Color.fromColors [Color.fromHex \u0022#deebf7\u0022;Color.fromString \u0022lightgrey\u0022]\n        )\n\n(***hide***)\ngenerationTimeTable |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Model examples\n\n*)\n\n(*** hide ***)\nlet explGompertz (model:Model) coefs = \n    let ff = model.GetFunctionValue coefs\n    [0. .. 0.1 .. 10.]\n    |\u003E List.map (fun x -\u003E x,ff x)\n    |\u003E Chart.Line\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTraceName (sprintf \u0022%A\u0022 coefs)\n\nlet gom =\n    [\n        explGompertz Table.GrowthModels.gompertz (vector [5.; 0.7; 10.; 2.])\n        explGompertz Table.GrowthModels.gompertz (vector [7.; 0.7; 12.; 3.])\n        explGompertz Table.GrowthModels.gompertz (vector [5.; 0.8; 10.; 3.])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Gompertz\u0022\n\n\n(***hide***)\ngom |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(*** hide ***)\n\nlet rich =\n    [\n        explGompertz Table.GrowthModels.richards (vector [20.; 7.; 5.; 5.])\n        explGompertz Table.GrowthModels.richards (vector [20.; 5.; 5.; 10.])\n        explGompertz Table.GrowthModels.richards (vector [15.; 7.; 5.; 15.])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Richards\u0022\n\n(***hide***)\nrich |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(*** hide ***)\nlet explRichGeneric (model:Model) coefs = \n    let ff = model.GetFunctionValue coefs\n    [-6. .. 0.1 .. 6.]\n    |\u003E List.map (fun x -\u003E x,ff x)\n    |\u003E Chart.Line\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTraceName (sprintf \u0022%A\u0022 coefs)\n    \nlet richGeneric =\n    [\n        explRichGeneric Table.GrowthModels.richardsGeneric (vector [0.; 1.; 3.; 0.5; 0.5; 1.; 0.])\n        explRichGeneric Table.GrowthModels.richardsGeneric (vector [0.; 1.; 3.; 0.5; 0.5; 1.; 3.])\n        explRichGeneric Table.GrowthModels.richardsGeneric (vector [0.; 1.; 3.; 2.; 0.5; 1.; 0.])\n        explRichGeneric Table.GrowthModels.richardsGeneric (vector [0.; 1.; 3.; 0.5; 5.; 1.; 0.])\n        explRichGeneric Table.GrowthModels.richardsGeneric (vector [0.; 1.; 3.; 0.5; 0.5; 5.; 0.])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Richards Generic\u0022\n\n(***hide***)\nrichGeneric |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(*** hide ***)\n\nlet wei =\n    [\n        explGompertz Table.GrowthModels.weibull (vector [7.; 20.; 0.2; 3.])\n        explGompertz Table.GrowthModels.weibull (vector [7.; 20.; 0.3; 5.])\n        explGompertz Table.GrowthModels.weibull (vector [7.; 15.; 0.2; 3.])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Weibull\u0022\n\n(***hide***)\nwei |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(*** hide ***)\nlet jan =\n    [\n        explGompertz Table.GrowthModels.janoschek (vector [7.; 20.; 0.02; 3.])\n        explGompertz Table.GrowthModels.janoschek (vector [7.; 20.; 0.03; 15.])\n        explGompertz Table.GrowthModels.janoschek (vector [7.; 15.; 0.02; 3.])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Janoschek\u0022\n\n(***hide***)\njan |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(*** hide ***)\n\nlet exp =\n    [\n        explGompertz Table.GrowthModels.exponential (vector [7.; 20.; 1.])\n        explGompertz Table.GrowthModels.exponential (vector [7.; 20.; 2.])\n        explGompertz Table.GrowthModels.exponential (vector [7.; 15.; 3.])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Exponential\u0022\n\n(***hide***)\nexp |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(*** hide ***)\nlet ver =\n    [\n        explGompertz Table.GrowthModels.verhulst (vector [20.; 3.; 1.2])\n        explGompertz Table.GrowthModels.verhulst (vector [20.; 4.; 0.7])\n        explGompertz Table.GrowthModels.verhulst (vector [15.; 6.; 3.2])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Verhulst\u0022\n\n(***hide***)\nver |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(*** hide ***)\nlet ver4 =\n    [\n        explGompertz Table.GrowthModels.verhulst4Param (vector [20.; 3.; 1.0; 10.])\n        explGompertz Table.GrowthModels.verhulst4Param (vector [20.; 4.; 1.5; 10.])\n        explGompertz Table.GrowthModels.verhulst4Param (vector [15.; 6.; 1.0; 10.])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Verhulst 4 Param\u0022\n\n(***hide***)\nver4 |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(*** hide ***)\n\nlet mmf =\n    [\n        explGompertz Table.GrowthModels.morganMercerFlodin (vector [  8.; 20.; 0.2 ; 3.0;])\n        explGompertz Table.GrowthModels.morganMercerFlodin (vector [ 10.; 20.; 0.25; 4.0;])\n        explGompertz Table.GrowthModels.morganMercerFlodin (vector [ 10.; 15.; 0.3; 3.0;])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022MMF\u0022\n\n(***hide***)\nmmf |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(*** hide ***)\n\nlet vonB =\n    [\n        explGompertz Table.GrowthModels.vonBertalanffy (vector [ 20.; 0.2 ; 3.0;])\n        explGompertz Table.GrowthModels.vonBertalanffy (vector [ 20.; 0.25; 4.0;])\n        explGompertz Table.GrowthModels.vonBertalanffy (vector [ 15.; 0.3 ; 3.0;])\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022vonBertalanffy\u0022\n\n(***hide***)\nvonB |\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/FSharp.Stats/Imputation.html","title":"Imputation","content":"(**\n---\ntitle: Imputation\nindex: 12\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\n(** \n\n#Imputation\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Imputation.ipynb)\n\nShort documentation how to impute values\n\n*)\nopen FSharp.Stats\nopen FSharp.Stats.ML\n\n\nlet a = [3.;2.;3.;4.;5.;]\nlet b = [1.;2.;3.;nan;5.;]\nlet c = [nan;2.;3.;4.;nan;]\nlet d = [5.;2.;6.;4.;5.;]\nlet e = [0.5;2.;3.;5.;5.;]\n\nlet data = [a;b;c;d;e]\n\n(*** hide ***)\nlet missingDataMatrix = \u0022rawData\\r\\n\u0022 \u002B FSharp.Stats.FSIPrinters.matrix (matrix data)\n(*** include-value:missingDataMatrix ***)\n\n(**\n\u003Ca name=\u0022k-Nearest imputation\u0022\u003E\u003C/a\u003E\n\n##k-Nearest imputation\n\nMissing data imputation based on the k-nearest neighbour algorithm:\n\n*)\n\n// init kNearest MatrixBaseImpute\nlet kn : Impute.MatrixBaseImputation\u003Cfloat[],float\u003E = Impute.kNearestImpute 2\nlet imputedData = Impute.imputeBy kn Ops.isNan data\n\n(*** hide ***)\nlet imputedDataMatrix = \u0022k nearest neighbours imputed data\\r\\n\u0022 \u002B FSharp.Stats.FSIPrinters.matrix (matrix imputedData)\n(*** include-value:imputedDataMatrix ***)\n\n(**\n\n\u003Ca name=\u0022random imputation\u0022\u003E\u003C/a\u003E\n\n##random imputation\n\n...\n*)\n\n// init random VectorBaseImpute\nlet rnd = Impute.rnd (System.Random())\n\nlet rndRowWise = Impute.imputeRowWiseBy rnd Ops.isNan data\nlet rndColWise = Impute.imputeColWiseBy rnd Ops.isNan data\n\n(*** hide ***)\nlet rndRowDataMatrix = \u0022rndRowDataMatrix imputed data\\r\\n\u0022 \u002B FSharp.Stats.FSIPrinters.matrix (matrix rndRowWise)\nlet rndColDataMatrix = \u0022rndColDataMatrix imputed data\\r\\n\u0022 \u002B FSharp.Stats.FSIPrinters.matrix (matrix rndColWise)\n(*** include-value:rndRowDataMatrix ***)\n(*** include-value:rndColDataMatrix ***)\n\n(**\n\n\u003Ca name=\u0022normal imputation\u0022\u003E\u003C/a\u003E\n\n##normal imputation\n\n...\n\n*)\n\nlet normalRowWise = Impute.imputeRowWiseBy Impute.normal Ops.isNan data\nlet normalColWise = Impute.imputeColWiseBy Impute.normal Ops.isNan data\n\n\n(*** hide ***)\nlet normalRowDataMatrix = \u0022normalRowDataMatrix imputed data\\r\\n\u0022 \u002B FSharp.Stats.FSIPrinters.matrix (matrix normalRowWise)\nlet normalColDataMatrix = \u0022normalColDataMatrix imputed data\\r\\n\u0022 \u002B FSharp.Stats.FSIPrinters.matrix (matrix normalColWise)\n(*** include-value:normalRowDataMatrix ***)\n(*** include-value:normalColDataMatrix ***)\n"},{"uri":"https://fslab.org/FSharp.Stats/index.html","title":"FSharp.Stats\r\n","content":"(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n# FSharp.Stats\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=index.ipynb)\n\nFSharp.Stats is a multipurpose project for statistical testing, linear algebra, machine learning, fitting and signal processing.\n\n## Installation\n\n**From Nuget.org:**\n\nYou can get all FSharp.Stats packages from nuget at https://www.nuget.org/packages/FSharp.Stats/.\n\n**To build the binaries yourself:**\n\n**Windows**:\n\n- Install [.Net Core SDK](https://www.microsoft.com/net/download)\n- navigate to project folder\n- use the console command \u0060./build.cmd\u0060\n\n**Linux(Ubuntu, using Mono)**:\n\n- Install [.Net Core SDK](https://www.microsoft.com/net/download/linux-package-manager/ubuntu14-04/sdk-current)\n- navigate to project folder\n- make the script executable with \u0060chmod \u002Bx ./build.sh\u0060\n- use the console command \u0060./build.sh\u0060\n\n**Documentation**:\n\n- While editing the documentation you can preview the documentation in your browser via \u0060dotnet fsdocs watch --eval\u0060\n\n---\n\n## Example\n\nThe following examples show how easy it is to start working with FSharp.Stats.\n\n*)\n\n(**\n### Distributions\n*)\n\nopen FSharp.Stats\n\n// initialize a normal distribution with mean 25 and standard deviation 0.1\nlet normalDistribution = Distributions.ContinuousDistribution.normal 25. 0.1\n\n// draw independently 30 times from the given distribution \nlet sample = Array.init 30 (fun _ -\u003E normalDistribution.Sample())\n\n(*** include-value:sample ***)\n\n(**\n### Basic descriptive statistics\n*)\n\n// calculate the mean of the given sample\nlet mean = Seq.mean sample\n\n(*** include-value:mean ***)\n\n// calculate the bessel corrected sample standard deviation of the given sample\nlet stDev = Seq.stDev sample\n\n(*** include-value:stDev ***)\n\n// calculate the coefficient of variation of the given sample \n// Attention: CV is valid only if a hypothetical real zero value exists for the data.\nlet cv = Seq.cv sample\n\n(*** include-value:cv ***)\n\n\n(**\n### Vectors, Matrices and linear algebra\n*)\n\n// create a vector \nlet vecB = vector [19.;11.;35.]\n\n// create a matrix \nlet matA = matrix [[3.;4.;0.];[1.;2.;2.];[5.;0.;5.]]\n\n// solve the linear system of equations\nlet vecX = FSharp.Stats.Algebra.LinearAlgebra.SolveLinearSystem matA vecB\n\n(*** include-value:vecX ***)\n\n(**\n### Interpolation\n*)\n\nlet xData = vector [|1. .. 10.|]\nlet yData = vector [|4.;7.;9.;12.;15.;17.;16.;23.;5.;30.|]\n\n// get coefficients of interpolating polynomial\nlet interpolatingCoefficients = \n    Interpolation.Polynomial.coefficients xData yData\n\n// get fitting function of interpolating polynomial\nlet interpolFitFunc = \n    Interpolation.Polynomial.fit interpolatingCoefficients\n\n(*** hide ***)\n// create line chart of interpolating polynomial\nlet interpolChart = \n    [1. .. 0.1 .. 10.] \n    |\u003E List.map (fun x -\u003E x,interpolFitFunc x)\n    |\u003E fun data -\u003E Chart.Line(data,Name=\u0022interpol polynomial\u0022)\n\n(**\n### Regression\n*)\n\n// get coefficients of 3rd order regression polynomial\nlet regressionCoefficients = \n    Fitting.LinearRegression.OrdinaryLeastSquares.Polynomial.coefficient 3 xData yData\n    \n// get fitting function of 3rd order regression polynomial\nlet regressionFitFunc = \n    Fitting.LinearRegression.OrdinaryLeastSquares.Polynomial.fit 3 regressionCoefficients\n\n(*** hide ***)\n// create line chart of regression polynomial\nlet regressionChart = \n    [1. .. 0.1 .. 10.] \n    |\u003E List.map (fun x -\u003E x,regressionFitFunc x)\n    |\u003E fun data -\u003E Chart.Line(data,Name=\u0022regression polynomial\u0022)\n\nlet combinedChart =\n    let rawChart = Chart.Point(xData,yData)\n    [rawChart;interpolChart;regressionChart]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n(**\nThe resulting interpolating and regression polynomials are plotted below using [Plotly.NET](https://github.com/plotly/Plotly.NET).\n\n*)   \n(***hide***)\ncombinedChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(**\n\n\nSamples \u0026 documentation\n-----------------------\n\nThe library comes with comprehensible documentation. \nIt can include tutorials automatically generated from \u0060*.fsx\u0060 files in [the content folder][content]. \nThe API reference is automatically generated from Markdown comments in the library implementation.\n\n * [API Reference](reference/index.html) contains automatically generated documentation for all types, modules\n   and functions in the library. This includes additional brief samples on using most of the\n   functions.\n \nContributing and copyright\n--------------------------\n\nThe project is hosted on [GitHub][gh] where you can [report issues][issues], fork \nthe project and submit pull requests. If you\u0027re adding a new public API, please also \nconsider adding [samples][content] that can be turned into a documentation. You might\nalso want to read the [library design notes][readme] to understand how it works.\n\nThe library is available under Public Domain license, which allows modification and \nredistribution for both commercial and non-commercial purposes. For more information see the \n[License file][license] in the GitHub repository. \n\n  [content]: https://github.com/fslaborg/FSharp.Stats/tree/developer/docs\n  [gh]: https://github.com/fslaborg/FSharp.Stats\n  [issues]: https://github.com/fslaborg/FSharp.Stats/issues\n  [readme]: https://github.com/fslaborg/FSharp.Stats/blob/developer/README.md\n  [license]: https://github.com/fslaborg/FSharp.Stats/blob/developer/LICENSE\n\n*)"},{"uri":"https://fslab.org/FSharp.Stats/Integration.html","title":"Integration","content":"(**\n---\ntitle: Integration\nindex: 16\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(***hide***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(**\n# Numerical integration\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Integration.ipynb)\n\nNumerical integration comprises a broad family of algorithms for calculating the numerical value of a definite integral, typically by using values from the funcion range.\n\nSee also: https://en.wikipedia.org/wiki/Numerical_integration\n\n## Numerical integration methods\n\nThe algorithms implemented in FSharp.Stats are:\n\n- Left endpoint rule (\u0060LeftEndpoint\u0060)\n- Right endpoint rule (\u0060RightEndpoint\u0060)\n- Midpoint rule  (\u0060Midpoint\u0060)\n- Trapezoidal rule (\u0060Trapezoidal\u0060)\n- Simpson\u0027s rule (\u0060Simpson\u0060)\n\n## Usage\n\nYou can either integrate a function (\u0060float -\u003E float\u0060) or observations. When estimating the integral of observations, Mid-values are calculated as the average of two observations\n\n### Integrating functions\n\nAny function with domain and range of float (\u0060float -\u003E float\u0060) can be numerically integrated for an interval $[a,b]$ with $n$ partitions, which will be evenly spaced in the interval (partition length = $\\frac{(b-a)}n$)\n\nUse the \u0060NumericalIntegration.definiteIntegral\u0060 function and pass the desired estimation method together with the integration interval start/endpoints and the amount of partitions(more on those methods in the chapters below).\n\nthe expected exact value for the definite integral of $f(x) = x^3$ is 0.25\n\n*)\n\nopen FSharp.Stats.Integration\n\nlet f (x: float) = x * x * x\n\n// integrate f in the interval [0.,1.] with 100 partitions using the left endpoint method\nf |\u003E NumericalIntegration.definiteIntegral(LeftEndpoint, 0., 1., 100)\n(***include-it***)\n\n// integrate f in the interval [0.,1.] with 100 partitions using the right endpoint method\nf |\u003E NumericalIntegration.definiteIntegral(RightEndpoint, 0., 1., 100)\n(***include-it***)\n\n// integrate f in the interval [0.,1.] with 100 partitions using the midpoint method\nf |\u003E NumericalIntegration.definiteIntegral(Midpoint, 0., 1., 100)\n(***include-it***)\n\n// integrate f in the interval [0.,1.] with 100 partitions using the trapezoidal method\nf |\u003E NumericalIntegration.definiteIntegral(Trapezoidal, 0., 1., 100)\n(***include-it***)\n\n// integrate f in the interval [0.,1.] with 100 partitions using the simpson method\nf |\u003E NumericalIntegration.definiteIntegral(Simpson, 0., 1., 100)\n(***include-it***)\n\n(**\n\nIt should be noted that the accuracy of the estimation increases with the amount of partitions in the integration interval.\n\n### Integrating observations\n\nInstead of integrating a function by sampling the function values in a set interval, we can also calculate the definite integral of (x,y) pairs with these methods.\n\nThis may be of use for example for calculating the area under the curve for prediction metrics such as the ROC(Receiver operator characteristic), which yields a distinct set of (Specificity/Fallout) pairs.\n\nUse the \u0060NumericalIntegration.definiteIntegral\u0060 function and pass the desired estimation method (more on those methods in the chapters below).\n\nthe expected exact value for the definite integral of $f(x) = x^2$ is $0.\\overline3$\n*)\n\n//x,y pairs of f(x) = x^2 in the interval of [0,1], with random values removed to show that this works with unevenly spaced data\nlet rnd = new System.Random(69)\nlet observations = \n    [|0. .. 0.01 .. 1.|] \n    |\u003E Array.map(fun x -\u003E x, x * x)\n    |\u003E Array.filter (fun (x,y) -\u003E rnd.NextDouble() \u003C 0.85 )\n\nobservations.Length\n(***include-it***)\n\n// integrate observations using the left endpoint method\nobservations |\u003E NumericalIntegration.definiteIntegral LeftEndpoint\n(***include-it***)\n\n// integrate observations using the right endpoint method\nobservations |\u003E NumericalIntegration.definiteIntegral RightEndpoint\n(***include-it***)\n\n// integrate observations using the midpoint method\nobservations |\u003E NumericalIntegration.definiteIntegral Midpoint\n(***include-it***)\n\n// integrate observations using the trapezoidal method\nobservations |\u003E NumericalIntegration.definiteIntegral Trapezoidal\n(***include-it***)\n\n// integrate observations using the simpson method\nobservations |\u003E NumericalIntegration.definiteIntegral Simpson\n(***include-it***)\n\n(**\n## Explanation of the methods\n\nIn the following chapter, each estimation method is introduced briefly and visualized for the example of $f(x) = x^3$ in the interval $[0,1]$ using 5 partitions.\n\n*)\n\n(***hide***)\nlet x = [0. .. 0.01 .. 1.]\nlet y = x |\u003E List.map f\n\n\nopen Plotly.NET\nopen Plotly.NET.LayoutObjects\n\nlet functionChart = \n    Chart.Spline(x,y, Name=\u0022f(x) = x^3\u0022)\n    |\u003E Chart.withTitle \u0022f(x) = x^3\u0022\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n    |\u003E Chart.withXAxisStyle \u0022x\u0022\n    |\u003E Chart.withYAxisStyle \u0022f(x)\u0022\n    |\u003E Chart.withSize(600,400)\n\n(**\n\nA large class of quadrature rules can be derived by constructing interpolating functions that are easy to integrate. \nTypically these interpolating functions are polynomials. In practice, since polynomials of very high degree tend to oscillate wildly, only polynomials of low degree are used, typically linear and quadratic.\n\nThe approximation of all these methods increase with the size of subintervals in the integration interval.\n\n### Left endpoint rule\n\nThe interpolating function is a constant function (a polynomial of degree zero), passing the leftmost points of the partition boundaries of the interval to integrate.\n\nFor a single partition $[a,b]$ in the integration interval, the integral is estimated by\n\n$$\n\\int_a^b f(x)\\,dx \\approx (b-a) * f(a)\n$$\n\nThe integral of the whole integration interval is obtained by summing the integral of n partitions.\n\n*)\n\n(***hide***)\nlet plotEstimationBars (data: seq\u003Cfloat*float\u003E) =\n    Chart.Column(\n        data, \n        Name = \u0022Left endpoint integrals\u0022, \n        MarkerPatternShape = StyleParam.PatternShape.DiagonalDescending, \n        MarkerColor = Color.fromString \u0022rgba(0,0,0,0)\u0022, \n        MarkerOutline = Line.init(Color=Color.fromKeyword Black)\n    )\n    |\u003E Chart.withLayout(Layout.init(BarGap=0.))\n\nlet leftEndpointChart = \n    let bars = \n        [\n            0. , 0.;\n            0.2, f 0.2\n            0.4, f 0.4\n            0.6, f 0.6\n            0.8, f 0.8\n        ]\n        |\u003E fun data -\u003E plotEstimationBars data\n        |\u003E GenericChart.mapTrace (fun t -\u003E t?offset \u003C- 0.; t)\n    let markers = Chart.Point([for i in 0. .. 0.2 .. 1. -\u003E i, f i], Name = \u0022Partition boundaries\u0022, MarkerColor = Color.fromKeyword Black, MarkerSymbol = StyleParam.MarkerSymbol.X)\n    [bars; functionChart; markers] |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Left endpoint rule\u0022\n    |\u003E Chart.withSize(800,400)\n\n\n(*** condition: ipynb ***)\n#if IPYNB\nleftEndpointChart\n#endif // IPYNB\n\n(***hide***)\nleftEndpointChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n### Right endpoint rule\n\nThe interpolating function is a constant function (a polynomial of degree zero), passing the rightmost points of the partition boundaries of the interval to integrate.\n\nFor a single partition $[a,b]$ in the integration interval, the integral is estimated by\n\n$$\n\\int_a^b f(x)\\,dx \\approx (b-a) * f(b)\n$$\n\nThe integral of the whole integration interval is obtained by summing the integral of n partitions.\n\n*)\n(***hide***)\nlet rightEndpointChart = \n    let bars = \n        [\n            0. , f 0.2\n            0.2, f 0.4\n            0.4, f 0.6\n            0.6, f 0.8\n            0.8, f 1.\n        ]\n        |\u003E fun data -\u003E plotEstimationBars data\n        |\u003E GenericChart.mapTrace (fun t -\u003E t?offset \u003C- 0; t)\n    let markers = Chart.Point([for i in 0. .. 0.2 .. 1. -\u003E i, f i], Name = \u0022Partition boundaries\u0022, MarkerColor = Color.fromKeyword Black, MarkerSymbol = StyleParam.MarkerSymbol.X)\n    [bars; functionChart; markers] |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Right endpoint rule\u0022\n    |\u003E Chart.withSize(800,400)\n\n(*** condition: ipynb ***)\n#if IPYNB\nrightEndpointChart\n#endif // IPYNB\n\n(***hide***)\nrightEndpointChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n### Midpoint rule\n\nThe interpolating function is a constant function (a polynomial of degree zero), passing the mid-points of the partition boundaries of the interval to integrate. \n\nFor a single partition $[a,b]$ in the integration interval, the integral is estimated by\n\n$$\n\\int_a^b f(x)\\,dx \\approx (b-a) * f(\\frac{a\u002Bb}2))\n$$\n\nThe integral of the whole integration interval is obtained by summing the integral of n partitions.\n\n*)\n(***hide***)\nlet midpointChart = \n    let bars = \n        [\n            0.1 ,((f 0.) \u002B (f 0.2)) / 2.\n            0.3, ((f 0.2) \u002B (f 0.4)) / 2.\n            0.5, ((f 0.4) \u002B (f 0.6)) / 2.\n            0.7, ((f 0.6) \u002B (f 0.8)) / 2.\n            0.9, ((f 0.8) \u002B (f 1.)) / 2.\n        ]\n        |\u003E fun data -\u003E plotEstimationBars data\n    let markers = Chart.Point([for i in 0. .. 0.2 .. 1. -\u003E i, f i], Name = \u0022Partition boundaries\u0022, MarkerColor = Color.fromKeyword Black, MarkerSymbol = StyleParam.MarkerSymbol.X)\n    [bars; functionChart; markers] |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Midpoint rule\u0022\n    |\u003E Chart.withSize(800,400)\n\n(*** condition: ipynb ***)\n#if IPYNB\nmidpointChart\n#endif // IPYNB\n\n(***hide***)\nmidpointChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n### Trapezoidal rule\n\nThe interpolating function is a straight line (an affine function, i.e. a polynomial of degree 1) passing through the partition boundaries of the interval to integrate. \n\nFor a single partition $[a,b]$ in the integration interval, the integral is estimated by\n\n$$\n\\int_a^b f(x)\\,dx \\approx (b-a) (\\frac{f(a) \u002B f(b)}2)\n$$\n\nThe integral of the whole integration interval is obtained by summing the integral of n partitions.\n\n*)\n(***hide***)\nlet trapezoidalChart = \n    let lines = \n        [\n            0.0, f 0.0\n            0.2, f 0.2\n            0.4, f 0.4\n            0.6, f 0.6\n            0.8, f 0.8\n            1.0, f 1.0\n        ]\n        |\u003E fun data -\u003E Chart.Area(data, Name = \u0022Trapezoidal Integrals\u0022)\n    let indicators = \n        [\n            0.0, f 0.0\n            0.2, f 0.2\n            0.4, f 0.4\n            0.6, f 0.6\n            0.8, f 0.8\n            1.0, f 1.0\n        ]\n        |\u003E Seq.map (fun (x,y) -\u003E Chart.Line([x,0.; x,y], LineDash = StyleParam.DrawingStyle.Dash, LineColor = Color.fromKeyword Gray, ShowLegend = false))\n        |\u003E Chart.combine\n    let markers = Chart.Point([for i in 0. .. 0.2 .. 1. -\u003E i, f i], Name = \u0022Partition boundaries\u0022, MarkerColor = Color.fromKeyword Black, MarkerSymbol = StyleParam.MarkerSymbol.X)\n    [lines; functionChart; indicators; markers] |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Trapezoidal rule\u0022\n    |\u003E Chart.withSize(800,400)\n\n(*** condition: ipynb ***)\n#if IPYNB\ntrapezoidalChart\n#endif // IPYNB\n\n(***hide***)\ntrapezoidalChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n### Simpson\u0027s rule (\u0060Simpson\u0060)\n\nFor a single partition $[a,b]$ in the integration interval, the integral is estimated by\n\n$$\n\\int_a^b f(x)\\,dx \\approx \\frac{b - a}6 [f(a) \u002B 4f(\\frac{a\u002Bb}2) \u002B f(b)]\n$$\n\nThe integral of the whole integration interval is obtained by summing the integral of n partitions.\n\nThis rule can be derived by constructing parabolas that have the value of $f(x)$ for the partition boundaries $a$ and $b$, and the midpoint $m = \\frac{a\u002Bb}2$ and calculating their definite integral for $[a,b]$\n\nAnother possibility to derive this rule is the weighted average of the midpoint ($M$) and trapezoidal ($T$) rules $\\frac{2M \u002B T}3$\n\n![Simpson\u0027s One-Third Rule.gif](https://upload.wikimedia.org/wikipedia/commons/f/fc/Simpson%27s_One-Third_Rule.gif)\n\n[Source](https://en.wikipedia.org/wiki/Simpson%27s_rule)\n\n*)"},{"uri":"https://fslab.org/FSharp.Stats/Interpolation.html","title":"Interpolation","content":"(**\n---\ntitle: Interpolation\nindex: 8\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n\n# Interpolation\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Interpolation.ipynb)\n\n_Summary:_ This tutorial demonstrates several ways of interpolating with FSharp.Stats\n\n### Table of contents\n\n- [Polynomial interpolation](#Polynomial-interpolation)\n- [Cubic interpolating Spline](#Cubic-interpolating-Spline)\n- [Hermite interpolation](#Hermite-interpolation)\n\n## Polynomial Interpolation\n\nHere a polynomial is fitted to the data. In general, a polynomial with degree = dataPointNumber - 1 has sufficient flexibility to interpolate all data points.\nThe least squares approach is not sufficient to converge to an interpolating polynomial! A degree other than n-1 results in a regression polynomial.\n\n*)\n\nopen FSharp.Stats\n\nlet xData = vector [|1.;2.;3.;4.;5.;6.|]\nlet yData = vector [|4.;7.;9.;8.;7.;9.;|]\n\n//Polynomial interpolation\n\n//Define the polynomial coefficients. In Interpolation the order is equal to the data length - 1.\nlet coefficients = \n    Interpolation.Polynomial.coefficients xData yData \nlet interpolFunction x = \n    Interpolation.Polynomial.fit coefficients x\n\nlet rawChart = \n    Chart.Point(xData,yData)\n    |\u003E Chart.withTraceName \u0022raw data\u0022\n    \nlet interpolPol = \n    let fit = [|1. .. 0.1 .. 6.|] |\u003E Array.map (fun x -\u003E x,interpolFunction x)\n    fit\n    |\u003E Chart.Line\n    |\u003E Chart.withTraceName \u0022interpolating polynomial\u0022\n\nlet chartPol = \n    [rawChart;interpolPol] \n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nchartPol\n#endif // IPYNB\n\n(***hide***)\nchartPol |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n## Cubic interpolating Spline\n\nSplines are flexible strips of wood, that were used by shipbuilders to draw smooth shapes. In graphics and mathematics a piecewise cubic polynomial (order = 3) is called spline.\nThe curvature (second derivative) of a cubic polynomial is proportional to its tense energy and in spline theory the curvature is minimized. Therefore, the resulting function is very smooth.\nTo solve for the spline coefficients it is necessary to define two additional constraints, so called boundary conditions:\n\n - natural spline (most used spline variant): \u0060f\u0027\u0027\u0060 at borders is set to 0\n\n - periodic spline: \u0060f\u0027\u0060 at first point is the same as \u0060f\u0027\u0060 at the last point\n\n - parabolic spline: \u0060f\u0027\u0027\u0060 at first/second and last/penultimate knot are equal\n\n - notAKnot spline: \u0060f\u0027\u0027\u0027\u0060 at second and penultimate knot are continuous\n\n - quadratic spline: first and last polynomial are quadratic, not cubic\n\n - clamped spline: \u0060f\u0027\u0060 at first and last knot are set by user\n\nIn general, piecewise cubic splines only are defined within the region defined by the used x values.\n\n### Related information\n - [Cubic Spline Interpolation](https://en.wikiversity.org/wiki/Cubic_Spline_Interpolation)\n\n - [Boundary conditions](https://timodenk.com/blog/cubic-spline-interpolation/)\n\n - [Cubic spline online tool](https://tools.timodenk.com/cubic-spline-interpolation)\n*)\n\n\nopen Plotly.NET\nopen FSharp.Stats.Interpolation\n\nlet xValues = vector [1.;2.;3.;4.;5.5;6.]\nlet yValues = vector [1.;8.;6.;3.;7.;1.]\n\n//calculates the spline coefficients for a natural spline\nlet coeffSpline = \n    CubicSpline.Simple.coefficients CubicSpline.Simple.BoundaryCondition.Natural xValues yValues\n//cubic interpolating splines are only defined within the region defined in xValues\nlet fit  x = \n    CubicSpline.Simple.fit coeffSpline xValues x\n//to fit x_Values that are out of the region defined in xValues\n//fits the interpolation spline with linear prediction at borderknots\nlet fitIntPo x = \n    CubicSpline.Simple.fitWithLinearPrediction coeffSpline xValues x\n\n//to compare the spline fit with an interpolating polynomial:\nlet coeffPolynomial = \n    Interpolation.Polynomial.coefficients xValues yValues\nlet fitPol x = \n    Interpolation.Polynomial.fit coeffPolynomial x\n//A linear spline draws straight lines to interpolate all data\nlet coeffLinearSpline = Interpolation.LinearSpline.initInterpolate (Array.ofSeq xValues) (Array.ofSeq yValues)\nlet fitLinSp = Interpolation.LinearSpline.interpolate coeffLinearSpline\n\nlet splineChart =\n    [\n    Chart.Point(xValues,yValues)                                           |\u003E Chart.withTraceName \u0022raw data\u0022\n    [ 1. .. 0.1 .. 6.] |\u003E List.map (fun x -\u003E x,fitPol x)   |\u003E Chart.Line |\u003E Chart.withTraceName \u0022fitPolynomial\u0022\n    [-1. .. 0.1 .. 8.] |\u003E List.map (fun x -\u003E x,fitIntPo x) |\u003E Chart.Line |\u003E Chart.withLineStyle(Dash=StyleParam.DrawingStyle.Dash) |\u003E Chart.withTraceName \u0022fitSplineLinPred\u0022\n    [ 1. .. 0.1 .. 6.] |\u003E List.map (fun x -\u003E x,fit x)      |\u003E Chart.Line |\u003E Chart.withTraceName \u0022fitSpline\u0022\n    [ 1. .. 0.1 .. 6.] |\u003E List.map (fun x -\u003E x,fitLinSp x) |\u003E Chart.Line |\u003E Chart.withTraceName \u0022fitLinearSpline\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Interpolation methods\u0022\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nsplineChart\n#endif // IPYNB\n\n(***hide***)\nsplineChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n//additionally you can calculate the derivatives of the spline\n//The cubic spline interpolation is continuous in f, f\u0027, and  f\u0027\u0027.\nlet derivativeChart =\n    [\n        Chart.Point(xValues,yValues) |\u003E Chart.withTraceName \u0022raw data\u0022\n        [1. .. 0.1 .. 6.] |\u003E List.map (fun x -\u003E x,fit x) |\u003E Chart.Line  |\u003E Chart.withTraceName \u0022spline fit\u0022\n        [1. .. 0.1 .. 6.] |\u003E List.map (fun x -\u003E x,CubicSpline.Simple.getFirstDerivative  coeffSpline xValues x) |\u003E Chart.Point |\u003E Chart.withTraceName \u0022fst derivative\u0022\n        [1. .. 0.1 .. 6.] |\u003E List.map (fun x -\u003E x,CubicSpline.Simple.getSecondDerivative coeffSpline xValues x) |\u003E Chart.Point |\u003E Chart.withTraceName \u0022snd derivative\u0022\n        [1. .. 0.1 .. 6.] |\u003E List.map (fun x -\u003E x,CubicSpline.Simple.getThirdDerivative  coeffSpline xValues x) |\u003E Chart.Point |\u003E Chart.withTraceName \u0022trd derivative\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Cubic spline derivatives\u0022\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nderivativeChart\n#endif // IPYNB\n\n(***hide***)\nderivativeChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n## Hermite interpolation\n\nIn Hermite interpolation the user can define the slopes of the function in the knots. This is especially useful if the function is oscillating and thereby generates local minima/maxima.\nIntuitively the slope of a knot should be between the slopes of the adjacent straight lines. By using this slope calculation a monotone knot behavior results in a monotone spline.\n\n\n - [Slope calculation](http://www.korf.co.uk/spline.pdf)\n\n*)\n\nopen FSharp.Stats\nopen FSharp.Stats.Interpolation\nopen FSharp.Stats.Interpolation.CubicSpline\nopen Plotly.NET\n\n//example from http://www.korf.co.uk/spline.pdf\nlet xDataH = vector [0.;10.;30.;50.;70.;80.;82.]\nlet yDataH = vector [150.;200.;200.;200.;180.;100.;0.]\n\n//Get slopes for Hermite spline. Try to fit a monotone function.\nlet tryMonotoneSlope = Simple.Hermite.getSlopesTryMonotonicity xDataH yDataH    \n//get function for Hermite spline\nlet funHermite = Simple.Hermite.cubicHermite xDataH yDataH tryMonotoneSlope\n\n//get coefficients and function for a classic natural spline\nlet coeffSpl = Simple.coefficients Simple.BoundaryCondition.Natural xDataH yDataH\nlet funNaturalSpline x = Simple.fit coeffSpl xDataH x\n\n//get coefficients and function for a classic polynomial interpolation\nlet coeffPolInterpol = \n    //let neutralWeights = Vector.init 7 (fun x -\u003E 1.)\n    //Fitting.LinearRegression.OrdinaryLeastSquares.Polynomial.coefficientsWithWeighting 6 neutralWeights xDataH yDataH\n    Interpolation.Polynomial.coefficients xDataH yDataH\nlet funPolInterpol x = \n    //Fitting.LinearRegression.OrdinaryLeastSquares.Polynomial.fit 6 coeffPolInterpol x\n    Interpolation.Polynomial.fit coeffPolInterpol x\n\nlet splineComparison =\n    [\n    Chart.Point(xDataH,yDataH) |\u003E Chart.withTraceName \u0022raw data\u0022\n    [0. .. 82.] |\u003E List.map (fun x -\u003E x,funNaturalSpline x) |\u003E Chart.Line  |\u003E Chart.withTraceName \u0022natural spline\u0022\n    [0. .. 82.] |\u003E List.map (fun x -\u003E x,funHermite x      ) |\u003E Chart.Line  |\u003E Chart.withTraceName \u0022hermite spline\u0022\n    [0. .. 82.] |\u003E List.map (fun x -\u003E x,funPolInterpol x  ) |\u003E Chart.Line  |\u003E Chart.withTraceName \u0022polynomial\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nsplineComparison\n#endif // IPYNB\n\n(***hide***)\nsplineComparison |\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/FSharp.Stats/Intervals.html","title":"Intervals","content":"(**\n---\ntitle: Intervals\nindex: 21\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n# Intervals\n\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Intervals.ipynb)\n\nThe interval module enables working with closed intervals. A closed interval includes its maximum and minimum.\n\n  - $[1,2], \\left\\{ x | 1 \\le x \\le 2 \\right\\}$ - closed interval; 1 and 2 are _included_\n  - $(1,2), \\left\\{ x | 1 \u003C x \u003C 2 \\right\\}$ - open interval; 1 and 2 are _excluded_\n  - $[1,2), \\left\\{ x | 1 \\le x \u003C 2 \\right\\}$ - half open interval; 1 is _included_ but 2 is _excluded_\n\n\n**Interval creation**\n\n*)\nopen FSharp.Stats\n\nlet collection = [3.0; -2.0; 5.0; 1.0; -6.0; 100.0]\nlet interval = Intervals.ofSeq collection\n\n(*** include-value:interval***)\n\n(**\n\n**Visualization of the interval**\n\n*)\n\nopen Plotly.NET\n\nlet interval01 = \n    Chart.Point([])\n    |\u003E Chart.withShape (Shape.init(ShapeType.Rectangle,Intervals.getStart interval,Intervals.getEnd interval,1,2,Fillcolor=Color.fromHex \u0022#1f77b4\u0022))\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withXAxisStyle (\u0022\u0022,MinMax=(-10.,120.))\n    |\u003E Chart.withYAxisStyle (\u0022\u0022,MinMax=(0.,5.))\n\n(*** condition: ipynb ***)\n#if IPYNB\ninterval01\n#endif // IPYNB\n\n(***hide***)\ninterval01 |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n*)\n\nlet collectionBy = [(\u0022a\u0022,3.0); (\u0022b\u0022,-2.0); (\u0022c\u0022,5.0); (\u0022d\u0022,1.0); (\u0022e\u0022,-6.0); (\u0022f\u0022,100.0)]\nlet intervalByFst = Intervals.ofSeqBy fst collectionBy\nlet intervalBySnd = Intervals.ofSeqBy snd collectionBy\n\n(*** include-value:intervalByFst***)\n(*** include-value:intervalBySnd***)\n\n(**\n\n**Interval addition**\n\nIntervals can be added (interval arithmetic definition) by adding the minima and maxima to obtain a new interval\n\n\u0060\u0060\u0060\ni=[a,b]\nj=[c,d]\n\ni \u002B j = [a\u002Bb,c\u002Bd]\n\u0060\u0060\u0060\n\n*)\n\nlet i02 = Intervals.create 6.  8.\nlet i03 = Intervals.create 5. 10.\nlet addedInterval = Intervals.add i02 i03\n\n(*** hide ***)\nlet interval02 = \n    let i1 = Shape.init(ShapeType.Rectangle,Intervals.getStart i02,Intervals.getEnd i02,1,2,Fillcolor=Color.fromHex \u0022#1f77b4\u0022)\n    let i2 = Shape.init(ShapeType.Rectangle,Intervals.getStart i03,Intervals.getEnd i03,3,4,Fillcolor=Color.fromHex \u0022#ff7f0e\u0022)\n    let re = Shape.init(ShapeType.Rectangle,Intervals.getStart addedInterval,Intervals.getEnd addedInterval,5,6,Fillcolor=Color.fromHex \u0022#2ca02c\u0022)\n    Chart.Point([])\n    |\u003E Chart.withShapes [i1;i2;re]\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withXAxisStyle (\u0022\u0022,MinMax=(0.,20.))\n    |\u003E Chart.withYAxisStyle (\u0022\u0022,MinMax=(0.,8.))\n\ninterval02 |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n**Interval subtraction**\n\nIntervals can be subtracted (interval arithmetic definition) by:\n\n\u0060\u0060\u0060\ni=[a,b]\nj=[c,d]\n\ni - j = [a-d,b-c]\n\u0060\u0060\u0060\n\n*)\n\nlet subInterval = Intervals.subtract i02 i03\n\n(*** hide ***)\nlet interval03 = \n    let i1 = Shape.init(ShapeType.Rectangle,Intervals.getStart i02,Intervals.getEnd i02,1,2,Fillcolor=Color.fromHex \u0022#1f77b4\u0022)\n    let i2 = Shape.init(ShapeType.Rectangle,Intervals.getStart i03,Intervals.getEnd i03,3,4,Fillcolor=Color.fromHex \u0022#ff7f0e\u0022)\n    let re = Shape.init(ShapeType.Rectangle,Intervals.getStart subInterval,Intervals.getEnd subInterval,5,6,Fillcolor=Color.fromHex \u0022#2ca02c\u0022)\n    Chart.Point([])\n    |\u003E Chart.withShapes [i1;i2;re]\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withXAxisStyle (\u0022\u0022,MinMax=(-5.,20.))\n    |\u003E Chart.withYAxisStyle (\u0022\u0022,MinMax=(0.,8.))\n\ninterval03 |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\n**Interval intersection**\n\nClosed intervals include their margins. If a margin is shared between two intervals, both intervals intersect.\n\n*)\n\nlet i04 = Intervals.create 2.  8.\nlet i05 = Intervals.create 5. 10.\nlet intInterval = Intervals.intersect i04 i05\n\n(*** hide ***)\nlet interval04 = \n    let i1 = Shape.init(ShapeType.Rectangle,Intervals.getStart i04,Intervals.getEnd i04,1,2,Fillcolor=Color.fromHex \u0022#1f77b4\u0022)\n    let i2 = Shape.init(ShapeType.Rectangle,Intervals.getStart i05,Intervals.getEnd i05,3,4,Fillcolor=Color.fromHex \u0022#ff7f0e\u0022)\n    let re = Shape.init(ShapeType.Rectangle,Intervals.getStart intInterval.Value,Intervals.getEnd intInterval.Value,5,6,Fillcolor=Color.fromHex \u0022#2ca02c\u0022)\n    Chart.Point([])\n    |\u003E Chart.withShapes [i1;i2;re]\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withXAxisStyle (\u0022\u0022,MinMax=(0.,12.))\n    |\u003E Chart.withYAxisStyle (\u0022\u0022,MinMax=(0.,8.))\n\ninterval04 |\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/FSharp.Stats/LinearAlgebra.html","title":"Linear Algebra","content":"(**\n---\ntitle: Linear Algebra\nindex: 4\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\nopen Plotly.NET\n\n(**\n# Linear Algebra\n\nSome algorithms such as SVD, EVD, or QR are implemented as a managed version in F# for a full list check the [API reference](https://fslab.org/FSharp.Stats/reference/fsharp-stats-algebra.html)\n*)\n\nopen FSharp.Stats\nopen FSharp.Stats.Algebra\n\nlet A = \n    matrix [ [ 1.0;  1.0; -1.0 ]\n             [ 1.0; -2.0; -3.0 ]\n             [ 2.0;  3.0;  1.0 ] ]\n\nlet B = \n    matrix [ [  4.0; ]\n             [ -6.0; ]\n             [  7.0; ] ]\n\nlet svdRes = LinearAlgebra.SVD A\n\n(***include-value:svdRes***)\n\n(**\n\n## Using unmanaged optimized linear algebra functions\n\nAdditionally, we provide some bindings for [LAPACK]() routines. This is currently only tested on windows.\n\n**Attention**: These bindings are highly incomplete and will most likely be dropped for something like MKL.NET. [See issue#](https://github.com/fslaborg/FSharp.Stats/issues/91)\n\nthe native libraries are contained in the nuget package at the \u0060netlib_LAPACK\u0060 path. Include that one instead of the \u0060/../../lib\u0060 pth used here.\n\n*)\n\nServiceLocator.setEnvironmentPathVariable (__SOURCE_DIRECTORY__ \u002B \u0022/../../lib\u0022) //\u0022D:/Source/FSharp.Stats/lib\u0022\n\n// initialize the native service provider. This will search on many system paths for the needed binaries.\nLinearAlgebra.Service()\n\nlet svdResLapack = LinearAlgebra.SVD A\n\n"},{"uri":"https://fslab.org/FSharp.Stats/Matrix_Vector.html","title":"Matrix and Vector","content":"(**\n---\ntitle: Matrix and Vector\nindex: 3\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n(**\n# Matrix and Vector\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Matrix_Vector.ipynb)\n\n_Summary:_ this tutorial demonstrates some of the functionality for matrices and vectors provided by FSharp.Stats.\n\n## Vector\n*)\nopen FSharp.Stats\n\nlet v = \n    vector [|2.0; 20.0; 1.|]\n\n(*** include-value:v ***)\n\nlet rv = \n    rowvec [|2.0; 20.0; 1.|]\n\n(*** include-value:rv ***)\n\n(***hide***)\nlet exmp13 = v \u002B 1.\nlet exmp14 = rv \u002B 1.\n\n(**Addition to every element of vector.*)\nv \u002B 1.\n\n(*** include-value:exmp13 ***)\n\n(**Addition to every element of row vector.*)\nrv \u002B 1.\n\n(*** include-value:exmp14 ***)\n\n\n(**\n\n## Matrix\n\n### Creating Matrices with FSharp.Stats. \nMatrices will also be printed with the FSharp.Stats.FSIPrinters.matrix function to get a nice console output.\n*)\nopen FSharp.Stats\n\n// http://fdatamining.blogspot.de/2010/03/matrix-and-linear-algebra-in-f-part-i-f.html\n// http://fdatamining.blogspot.de/search/label/linear%20algebra\n\nlet A = \n    matrix [ [ 1.0; 7.0; 2.0 ]\n             [ 1.0; 3.0; 1.0 ]\n             [ 2.0; 9.0; 1.0 ] ]\n\n(***hide***)\nlet APrint =\n    FSharp.Stats.FSIPrinters.matrix A\n\n(*** include-value:APrint ***)\n\nlet B = \n    matrix [ [ 10.0; 70.0; 20.0 ]\n             [ 10.0; 30.0; 10.0 ]\n             [ 20.0; 90.0; 10.0 ] ]\n\n(***hide***)\nlet BPrint =\n    FSharp.Stats.FSIPrinters.matrix B\n\n(*** include-value:BPrint ***)\n\n\n(**\n### Calculation Examples for Matrices\n*)\n\n(***hide***)\nlet exmp1 =\n    A\n    |\u003E Matrix.Generic.mapRows (Seq.sum)\n\n(**Get sum of each row.*)\nA\n|\u003E Matrix.Generic.mapRows (Seq.sum)\n\n(*** include-value:exmp1 ***)\n\n(***hide***)\nlet exmp2 =\n    A\n    |\u003E Matrix.mapiCols (fun i r -\u003E r)\n\n(**Create seq of vectors of matrix columns.*)\nA\n|\u003E Matrix.mapiCols (fun i r -\u003E r)\n\n(*** include-value:exmp2 ***)\n\n(***hide***)\nlet exmp3 = A \u002B B |\u003E FSharp.Stats.FSIPrinters.matrix\nlet exmp4 = A - B|\u003E FSharp.Stats.FSIPrinters.matrix\nlet exmp5 = A * B|\u003E FSharp.Stats.FSIPrinters.matrix\nlet exmp6 = A.*B|\u003E FSharp.Stats.FSIPrinters.matrix\nlet exmp7 = A * 2.0|\u003E FSharp.Stats.FSIPrinters.matrix\nlet exmp9 = -A|\u003E FSharp.Stats.FSIPrinters.matrix\nlet exmp10 = A * v \nlet exmp11 = Matrix.dot A B \nlet exmp12 = A \u002B 1.|\u003E FSharp.Stats.FSIPrinters.matrix\n\n\n(**Sum of two matrices.*)\nA \u002B B\n\n(*** include-value:exmp3 ***)\n\n(**Difference between two matrices.*)\nA - B\n\n(*** include-value:exmp4 ***)\n\n(**Product of two matrices.*)\nA * B \n\n(*** include-value:exmp5 ***)\n\n(**Element-wise product of two matrices*)\nA .* B \n\n(*** include-value:exmp6 ***)\n\n(**Scalar product of a matrix.*)\nA * 2.0 \n2.0 * A // also ok, gives same result\n\n(*** include-value:exmp7 ***)\n\n(**Negation of a matrix*)\n-A \n\n(*** include-value:exmp9 ***)\n\n(**Product of a matrix-vector.*)\nA * v\n\n(*** include-value:exmp10 ***)\n\n(**Dot product of two matrices.*)\nMatrix.dot A B\n\n(*** include-value:exmp11 ***)\n\n(**Addition to every element of matrix.*)\nA \u002B 1.\n\n(*** include-value:exmp12 ***)\n\n\n(***hide***)\n//let () =\n//    let assemblyProbeDirectory =  \u0022D:/Source/FSharp.Stats/lib\u0022\n//    System.IO.Directory.SetCurrentDirectory(assemblyProbeDirectory)\n\n(***hide***)\n//// Linear regression\n//let cost theta X (y:vector) =\n//    let tmp = Matrix.dot X theta \n//    y\n//    |\u003E Vector.fold (fun sum v -\u003E \n//        let error = v - tmp\n//        sum \u002B (error * error) ) 0. \n//    |\u003E (/) (float y.Length * 2.0)\n\n(***hide***)\n//let inline (.-) a b =\n//    a |\u003E Matrix.map (fun x -\u003E x - b)\n\n(***hide***)\n//let estimateCoefficientsBySGD (X:matrix) y theta alpha = // rate nEpoch (data:array\u003Carray\u003C\u0027a\u003E\u003E)\n//    //let delta = Vector.create (X.NumCols) 1.\n//    let cost\u0027 = cost theta X y\n//    let rec loop delta =\n//        match (delta.Values|\u003E Array.maxBy abs \u003E 1e-6) with\n//        | false -\u003E theta\n//        | true -\u003E \n//            let error = \n//                let tmp = Matrix.dot X theta \n//                y |\u003E Vector.map (fun v -\u003E v - y)\n//            let delta\u0027 = \n//                Matrix.dot X.Transpose error \n//                |\u003E (/) (float y.Length)\n//            let trial_theta = theta - alpha * delta\n//            let trial_cost = cost trial_theta X y\n//            loop delta\u0027\n//    let rec wloop (theta:vector) (ttheta:vector) (tcost:vector) (pcost:vector) =\n//        let ttheta\u0027 = (theta \u002B ttheta) / 2.\n//        let tcost\u0027  = cost ttheta X y      \n//    //while (np.max(np.abs(delta)) \u003E 1e-6) do\n//    //    1.\n\n\n\n(***hide***)\n//// F# Numerics Interface \n//// http://fdatamining.blogspot.de/2010/03/f-inumerics-interface-and-matrix-class.html\n\n(***hide***)\n//// Service Provider model pattern\n//// \n//// http://blog.ploeh.dk/2011/04/27/Providerisnotapattern/\n//// http://blog.ploeh.dk/2011/04/27/Providerisnotapattern/\n\n(***hide***)\n//open System.Runtime.InteropServices\n\n(***hide***)\n//// [\u003CDllImport(\u0022C:/Program Files (x86)/Sho 2.1/bin/bin64/mkl.dll\u0022,EntryPoint=\u0022dgemm_\u0022)\u003E]\n//[\u003CDllImport(\u0022D:\\\\libopenblas.dll\u0022,EntryPoint=\u0022dgemm_\u0022)\u003E]\n//extern void dgemm_\n//  ( char *transa, char *transb, \n//    int *m, int *n, int *k, \n//    double *alpha, double *a, int *lda, \n//    double *b, int *ldb, double *beta, \n//    double *c, int *ldc );\n\n\n\n(***hide***)\n//#nowarn \u002251\u0022 \n//open Microsoft.FSharp.NativeInterop\n\n(***hide***)\n//let matmul_blas (a:float[,]) (b:float[,]) = \n//    // Get dimensions of the input matrices\n//    let m = Array2D.length1 a\n//    let k = Array2D.length2 a\n//    let n = Array2D.length2 b\n//    // Allocate array for the result\n//    let c = Array2D.create n m 0.0\n//    // Declare arguments for the call\n//    let mutable arg_transa = \u0027t\u0027\n//    let mutable arg_transb = \u0027t\u0027\n//    let mutable arg_m = m\n//    let mutable arg_n = n\n//    let mutable arg_k = k\n//    let mutable arg_alpha = 1.0\n//    let mutable arg_ldk = k\n//    let mutable arg_ldn = n\n//    let mutable arg_beta = 1.0\n//    let mutable arg_ldm = m\n\n(***hide***)\n//    // Temporarily pin the arrays\n//    use arg_a = PinnedArray2.of_array2D(a)\n//    use arg_b = PinnedArray2.of_array2D(b)\n//    use arg_c = PinnedArray2.of_array2D(c)\n//    // Invoke the native routine\n//    dgemm_( \u0026\u0026arg_transa, \u0026\u0026arg_transb,\n//            \u0026\u0026arg_m, \u0026\u0026arg_n, \u0026\u0026arg_k,\n//            \u0026\u0026arg_alpha, arg_a.Ptr, \u0026\u0026arg_ldk,\n//            arg_b.Ptr, \u0026\u0026arg_ldn, \u0026\u0026arg_beta,\n//            arg_c.Ptr, \u0026\u0026arg_ldm )\n//    // Transpose the result to get m*n matrix \n//    Array2D.init m n (fun i j -\u003E c.[j,i])\n\n\n\n(***hide***)\n//matmul_blas (A.ToArray2D()) (B.ToArray2D())\n"},{"uri":"https://fslab.org/FSharp.Stats/ML.html","title":"Machine Learning","content":"(**\n---\ntitle: Machine Learning\nindex: 22\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n\n# Machine Learning\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Signal.ipynb)\n\n_Summary:_ this tutorial demonstrates functionality relevant in the context of machine learning.\n\n### Table of contents\n\n - [Dimensionality Reduction](#Dimensionality-Reduction)\n    - [PCA](#PCA)\n\n## Dimensionality Reduction\n\n### PCA\n\nA common approach for to reduce the dimensionality of large data sets is the use of Principal component analyis.\n\n*)\nopen FSharp.Stats\nopen FSharp.Stats.ML.Unsupervised\n\nlet data = \n    [\n        [1.0; 2.0;1.0; 2.0;];\n        [1.1; 2.1;1.1; 2.1;];\n        [-1.0; -2.0;1.0; 2.0;];\n        [-1.1; -2.1;1.1; 2.1;];\n        [-1.15; -2.15;1.15; 2.15;];\n    ]\n    |\u003E FSharp.Stats.Matrix.ofJaggedList\n\n// The PCA implementation expects column wise centered data, which can be generated by calling:\nlet dc = PCA.center data\n\n// Calling compute will compute the PCA of the centered data matrix. Relevant information is stored in the result object.\nlet pca = PCA.compute dc\n\n// The result of the PCA allows to visualize the analyzed data set projected onto the principal axis:\n\n// extract components 1 and 2\nlet pcs = pca.PrincipalComponents |\u003E Matrix.mapiRows (fun i v -\u003E v.[0],v.[1])\n\n// typical PCA \u0022score\u0022 plot of components 1 and 2 with the explained variance indicated\nlet scorePlot = \n    Chart.Point(pcs)\n    |\u003E Chart.withAxisTitles (sprintf \u0022PC1, Var explained %f\u0022 pca.VarExplainedByComponentIndividual.[0]) (sprintf \u0022PC2, Var explained %f\u0022 pca.VarExplainedByComponentIndividual.[1])\n    |\u003E Chart.withTitle \u0022Score Plot\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nscorePlot\n#endif // IPYNB\n\n(***hide***)\nscorePlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n// Additionally the variable loadings can be visualized:\n// Disclaimer: there is a certain ambiguity when it comes to the use of the term loading.\n// To stay consistent with other implementations the term loading is used.\n\n/// Extract loadings of the variables onto the first and second principal component\nlet loadings = \n    pca.Loadings \n    |\u003E Matrix.mapRows (fun v -\u003E v.[0],v.[1])\n\n\n// typical PCA \u0022loading\u0022 plot \nlet loadingPlot = \n    loadings\n    |\u003E Seq.map (fun l -\u003E [0.,0.;l])\n    |\u003E Seq.map Chart.Line\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022PC1\u0022 \u0022PC2\u0022\n    |\u003E Chart.withTitle \u0022Loading Plot\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nloadingPlot\n#endif // IPYNB\n\n(***hide***)\nloadingPlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/FSharp.Stats/Normalization.html","title":"Normalization","content":"(**\n---\ntitle: Normalization\nindex: 18\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 3.0.1\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 3.0.1\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 3.0.1\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n\n# Normalization\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Normalization.ipynb)\n\n_Summary:_ this tutorial demonstrates multiple ways of data normalization accross several samples\n\n### Table of contents\n - [Introduction](#Introduction)\n - [Median of Ratios](#Median-of-ratios)\n - [Quantile](#Quantile)\n\n## Introduction\n\nWhen you want to compare e.g. intensity measurements of elements between samples, you often have to normalize the samples in order\nto be able to perform a valid comparison. Samples may vary in their average intensity just because of the technical nature of the measurement itself, \nthereby shifting or distorting the underlying correct/real distribution. For the presented normalization strategies it is assumed that global changes across the samples are due to unwanted technical variability and only\na small number of elements are dysregulated (Zhao et al, 2020).\n\n\n## Median of ratios\n\nTo correct for batch effects or technical measurment differences the median of ratios normalization (MOR) can be applied.\nAs explained above, it expects that the majority of genes/proteins/elements do not differ between the conditions that should be compared [Love et al. 2014](https://doi.org/10.1186/s13059-014-0550-8).\nAt first a reference sample is determined by calculating the geometric mean of each of the **n** elements across all **m** samples. The calculation of the geometric mean as \nthe n\u003Csup\u003Eth\u003C/sup\u003E square root of the product of all values (1) seems odd, but when displayed as mean of the log-transformed data (2) it becomes clear, that the geometric \nmean is just an outlier-insensitive measure of a robust average, which is intuitive to do when dealing with biological data or in general data with some extreme outliers.\n\n1. \u003Cimg src=\u0022https://render.githubusercontent.com/render/math?math=geomean = \\sqrt[n]{\\prod_{}^{}x}\u0022\u003E\n2. \u003Cimg src=\u0022https://render.githubusercontent.com/render/math?math=geomean = e^{\\frac{1}{n}\\sum_{}^{}log(x)}\u0022\u003E\n\nAfter a reference sample for each row is determined, for each entry a correction factor to reach the reference is calculated. Each sample now has n associated correction factors.\nBy taking the median of those individual correction factors, an outlier-insensitive measure of the true correction factor is determined. By choosing the median it is assumed that in theory \u003E=50% of all\nmeasured elements should not change between the measured samples. \n\nNo prior log-transform has to be applied before normalizing the data with this method. If required a log transform can be applied to the normalized values to restore homoscedasticity.\n\nIn the following a step-by-step introduction is given with finally applying \u0060Signal.Normalization.medianOfRatios\u0060 function to the given data.\n\n**1. Raw intensities for m=3 samples and n=6 elements:**\n\n|elementID|sample1|sample2|sample3|\n|--|--|--|--|\n|g00|100|130|30|\n|g01|80|200|30|\n|g02|0|50|0|\n|g03|40|50|20|\n|g04|50|45|25|\n|g05|40|50|15|\n\n\n**2. Zero intensities cannot be processed during the MOR-normalization.** \nEither imputation, row filtering or data transformation must be performed. In this example a single count is added to each intensity. \nNote that this is not necessarily reasonable for every analysis! The reference sample is determined by calculating the geometric mean of every row.\n\n|elementID|sample1|sample2|sample3|reference|\n|--|--|--|--|--|\n|g00|101|131|31|74.30|\n|g01|81|201|31| 79.62|\n|g02|1|51|1|    3.71 |\n|g03|41|51|21|  35.28|\n|g04|51|56|26|  42.03|\n|g05|41|51|16|  32.22|\n\n**3. For every element the correction factor is determined by dividing it by its reference.**\n\n|elementID|sample1|sample2|sample3|reference|corr1|corr2|corr3|\n|--|--|--|--|--|--|--|--|\n|g00|101|131|31|74.30|1.359|1.763|0.417|\n|g01|81|201|31| 79.62|1.017|2.525|0.389|\n|g02|1|51|1|    3.71 |0.270|13.752|0.270|\n|g03|41|51|21|  35.28|1.162|1.446|0.595|\n|g04|51|56|26|  42.03|1.213|1.332|0.619|\n|g05|41|51|16|  32.22|1.272|1.583|0.497|\n\nIt becomes apparent, that sample1 and sample2 are overrepresented and sample3 is underepresented. g02 and g03 are obviously outliers that differ between the samples. \nThese elements should not influence the correction factors. By determining the median of each sample correction column, a outlier insensitive approximation of the true correction \nfactor is achieved.\n\n\n**4. The median of each correction factor column determines the final correction.**\n\n|elementID|sample1|sample2|sample3|reference|corr1|corr2|corr3|\n|--|--|--|--|--|--|--|--|\n|g00|101|131|31|74.30|1.359|1.763|0.417|\n|g01|81|201|31| 79.62|1.017|2.525|0.389|\n|g02|1|51|1|    3.71 |0.270|13.752|0.270|\n|g03|41|51|21|  35.28|1.162|1.446|0.595|\n|g04|51|56|26|  42.03|1.213|1.332|0.619|\n|g05|41|51|16|  32.22|1.272|1.583|0.497|\n|||||||||\n|   |  |  |  |  **Median:**     |**1.188**|**1.673**|**0.457**|\n\n**5. Apply the correction factors to the original (untransformed) data.**\n\n|elementID|sample1|sample2|sample3|reference|corr1|corr2|corr3||normedSample1|normedSample2|normedSample3|\n|--|--|--|--|--|--|--|--|--|--|--|--|\n|g00|101|131|31|74.30|1.359|1.763|0.417|| 84.19|77.71|65.66 |\n|g01|81|201|31| 79.62|1.017|2.525|0.389|| 67.35|119.5|565.66|\n|g02|1|51|1|    3.71 |0.270|13.752|0.270|| 0.00|29.89|0.00  |\n|g03|41|51|21|  35.28|1.162|1.446|0.595|| 33.68|29.89|43.77 |\n|g04|51|56|26|  42.03|1.213|1.332|0.619|| 42.10|32.88|54.72 |\n|g05|41|51|16|  32.22|1.272|1.583|0.497|| 33.68|29.89|32.83 |\n|||||||||||||\n|   |  |  |  | **Median:**  |**1.188**|**1.673**|**0.457**|||||\n\nThe normed intensities of the different elements now match a theoretical common intensity level.\n\n*)\n\n\nopen FSharp.Stats\n\n\nlet rawData = \n    [|\n    [|100.; 130.; 30.|]\n    [| 80.; 200.; 30.|]\n    [|  0.;  50.;  0.|]\n    [| 40.;  50.; 20.|]\n    [| 50.;  45.; 25.|]\n    [| 40.;  50.; 15.|]\n    |]\n    |\u003E matrix\n\n// visualization of the raw data\nlet rawDataChart = \n    rawData.Transpose\n    |\u003E Matrix.toJaggedArray\n    |\u003E Array.mapi (fun sampleID sample -\u003E \n        let sampleIntensities = \n            sample \n            |\u003E Array.mapi (fun gID intensity -\u003E\n                gID,intensity\n            )\n        Chart.Column(sampleIntensities,Name = sprintf \u0022raw sample%i\u0022 (sampleID\u002B1))\n    )\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022gID\u0022 \u0022raw intensity\u0022\n    |\u003E Chart.withTitle \u0022raw data\u0022\n\n\n(*** condition: ipynb ***)\n#if IPYNB\nrawDataChart\n#endif // IPYNB\n\n(***hide***)\nrawDataChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\nIn the above figure you can see, that the green sample is underrepresented, and the orange is overrepresented when compared to the blue one. \nNo the MOR normalization is applied. If no transformation (\u002B1) should be applied, you can use \u0060Signal.Normalization.medianOfRatios\u0060.\n\n*)\n\n/// actual median of ratios normalization. 1 is added to each intensity to get rid of the empty intensities.\nlet mor = \n    Signal.Normalization.medianOfRatiosBy (fun x -\u003E x \u002B 1.0) rawData\n\n/// Matrix of normalized data in the same order as the input matrix\nlet morNormedData = \n    mor.NormedData\n\n/// Correction factors to assess the strenght of the applied normalization (1 indicates no normalization)\nlet corrFactors = \n    let cf1 = Seq.item 0 mor.CorrFactors\n    let cf2 = Seq.item 1 mor.CorrFactors\n    let cf3 = Seq.item 2 mor.CorrFactors\n    sprintf \u0022Correctionfactor for sample1 is %.3f\\nCorrectionfactor for sample2 is %.3f\\nCorrectionfactor for sample3 is %.3f\u0022 cf1 cf2 cf3\n\n(*** condition: ipynb ***)\n#if IPYNB\ncorrFactors\n#endif // IPYNB\n\n(***hide***)\ncorrFactors\n(***include-it-raw***)\n\n// visualization of the normed data\nlet normedDataChart =\n    morNormedData.Transpose\n    |\u003E Matrix.toJaggedArray\n    |\u003E Array.mapi (fun sampleID sample -\u003E \n        let sampleIntensities = \n            sample \n            |\u003E Array.mapi (fun gID intensity -\u003E\n                gID,intensity\n            )\n        Chart.Column(sampleIntensities,Name = sprintf \u0022MOR normed sample%i\u0022 (sampleID\u002B1))\n    )\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022gID\u0022 \u0022MOR intensity\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nnormedDataChart\n#endif // IPYNB\n\n(***hide***)\nnormedDataChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\nThe normed data now shows high similarity of the individual element intensities across samples.\n\n# Quantile normalization\n\nTo compensate for the technical variance you also can perform a quantile normalization. It is a technique for making two or more\ndistributions identical in statistical properties and was originally developed for gene expression microarrays. It sees widespread use, constituting a standard part\nof analysis pipelines for high-throughput analysis.\nYou can either quantile normalize data according to a given reference distribution (e.g. Gamma or Normal distribution) or create your own reference distribution out of your samples.\n\nThe same dataset as above is used and a quantile normalization is performed. Since no log transform is applied, there is no necessity to add a constant to each intensity:\n\n**1. Raw intensities for m=3 samples and n=6 elements:**\n\n|elementID|sample1|sample2|sample3|\n|--|--|--|--|\n|g00|100|130|30|\n|g01|80|200|30|\n|g02|0|50|0|\n|g03|40|50|20|\n|g04|50|45|25|\n|g05|40|50|15|\n\n\n**2. Intensities are indexed and sorted in ascending order. The row average intensity is determined.**\n\n|sample1|sample2|sample3| |row average|\n|--|--|--|--|--|\n|3 -\u003E 0|5 -\u003E 45|3 -\u003E 0    | |15| \n|4 -\u003E 40|3 -\u003E 50|6 -\u003E 15  | |35|\n|6 -\u003E 40|4 -\u003E 50|4 -\u003E 20  | |36.7|\n|5 -\u003E 50|6 -\u003E 50|5 -\u003E 25  | |41.7|\n|2 -\u003E 80|1 -\u003E 130|1 -\u003E 30 | |80|\n|1 -\u003E 100|2 -\u003E 200|2 -\u003E 30| |110|\n\n\n**3. Every intensity is replaced by the row average intensity**\n\n|sample1|sample2|sample3| |row average|\n|--|--|--|--|--|\n|3;15\t|5;15\t|3;15   ||15| \n|4;35\t|3;35\t|6;35   ||35|\n|6;36.7\t|4;36.7\t|4;36.7 ||36.7|\n|5;41.7\t|6;41.7\t|5;41.7 ||41.7|\n|2;80\t|1;80\t|1;80   ||80|\n|1;110\t|2;110\t|2;110  ||110|\n\n\n**4. Finally the columns are resorted to their original order using the indices. The indices are removed**\n\n|elementID|normedSample1|normedSample2|normedSample3|\n|--|--|--|--|\n|g00|110  |80   |80   |\n|g01|80   |110  |110  |\n|g02|15   |35   |15   |\n|g03|35   |36.7 |36.7 |\n|g04|41.7 |15   |41.7 |\n|g05|36.7 |41.7 |35   |\n\n\n\n*)\n\nlet quantileNorm = \n    Signal.Normalization.quantile rawData\n\n// visualization of the normed data\nlet normedDataQuantileChart =\n    quantileNorm.Transpose\n    |\u003E Matrix.toJaggedArray\n    |\u003E Array.mapi (fun sampleID sample -\u003E \n        let sampleIntensities = \n            sample \n            |\u003E Array.mapi (fun gID intensity -\u003E\n                gID,intensity\n            )\n        Chart.Column(sampleIntensities,Name = sprintf \u0022quantile normed sample%i\u0022 (sampleID\u002B1))\n    )\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022gID\u0022 \u0022qNorm intensity\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nnormedDataQuantileChart\n#endif // IPYNB\n\n(***hide***)\nnormedDataQuantileChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\nAs seen in the normalized column chart, the final samples all consists of the same values, just assigned to different row indices according to the rank within the sample.\nFor data with low row count, this normalization is not appropriate because there is a severe disturbance of the intensity values. The more data is incorporated (more rows), the lower\nthe single value influence will be.\n\n## Notes\n\nYou can assess the quality of your normalization by performing a PCA prior and after normalization and compare different normalization strategies. While the \ncorrection factors for MOR can be investigated, quantile normalization is a non-linear transformation since every value is normalized by its own rank-row mean. \n\n\n\n*)\n\n"},{"uri":"https://fslab.org/FSharp.Stats/Quantiles.html","title":"Quantile","content":"(**\n---\ntitle: Quantile\nindex: 20\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n\n# Quantile\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Quantile.ipynb)\n\n_Summary:_ this tutorial demonstrates how to handle quantiles and QQ-Plots\n\n### Table of contents\n\n - [Quantiles](#Quantiles)\n - [QQ plot](#QQ-plot)\n   - [Comparing two sample distributions](#Comparing-two-sample-distributions)\n   - [Comparing a sample against a distribution](#Comparing-a-sample-against-a-distribution)\n     - [Normal distribution](#Normal-distribution)\n     - [Uniform Distribution](#Uniform-Distribution)\n- [Quantile normalization](#Quantile-normalization)\n\n## Quantiles\n\nQuantiles are values that divide data into equally spaced groups. Percentiles are just quantiles that divide the data in 100 equally sized groups.\nThe median for example defines the 0.5 quantile or 0.5 percentile. You can calculate the quantile by what proportion of values are less than the value you are interested in.\n\n_Note: There are many possibilities to handle ties or data that cannot be split equally. The default quantile method used here is \u0060Quantile.mode\u0060._\n\nLet\u0027s sample 1000 data points from a normal distribution and calculate some percentiles.\n*)\nopen System\nopen FSharp.Stats\nopen FSharp.Stats.Signal\n\nlet rng = Distributions.ContinuousDistribution.normal 3. 1.\n\nlet sample = Array.init 1000 (fun _ -\u003E rng.Sample())\n\nlet quantile25  = Quantile.mode 0.25 sample\nlet quantile50  = Quantile.mode 0.50 sample\nlet quantile75  = Quantile.mode 0.75 sample\nlet quantile100 = Quantile.mode 1.00 sample\n\n\n[|quantile25;quantile50;quantile75;quantile100|]\n(***include-it-raw***)\n\n\n(**\n\nThese special quantiles are also called quartiles since they can be used to divide the data into 4 sections.\nThe ranges that can be defined by the quantiles are plotted below. Here the ranges defines half-open intervals between two quartiles.\n\n*)\n\nlet range25  = sample |\u003E Array.filter (fun x -\u003E x \u003C quantile25)\nlet range50  = sample |\u003E Array.filter (fun x -\u003E x \u003E quantile25 \u0026\u0026 x \u003C quantile50)\nlet range75  = sample |\u003E Array.filter (fun x -\u003E x \u003E quantile50 \u0026\u0026 x \u003C quantile75)\nlet range100 = sample |\u003E Array.filter (fun x -\u003E x \u003E quantile75)\n\n(*** hide ***)\nlet quartileRangePlot =\n    [|\n        Chart.Histogram(range25,\u00220-25\u0022,ShowLegend=false)   |\u003E Chart.withTemplate ChartTemplates.lightMirrored |\u003E Chart.withXAxisStyle(\u0022\u0022,MinMax=(0.,6.)) |\u003E Chart.withYAxisStyle(\u0022Quartil 0-25\u0022)\n        Chart.Histogram(range50,\u002225-50\u0022,ShowLegend=false)   |\u003E Chart.withTemplate ChartTemplates.lightMirrored |\u003E Chart.withXAxisStyle(\u0022\u0022,MinMax=(0.,6.)) |\u003E Chart.withYAxisStyle(\u0022Quartil 25-50\u0022)\n        Chart.Histogram(range75,\u002250-75\u0022,ShowLegend=false)   |\u003E Chart.withTemplate ChartTemplates.lightMirrored |\u003E Chart.withXAxisStyle(\u0022\u0022,MinMax=(0.,6.)) |\u003E Chart.withYAxisStyle(\u0022Quartil 50-75\u0022)\n        Chart.Histogram(range100,\u002275-100\u0022,ShowLegend=false) |\u003E Chart.withTemplate ChartTemplates.lightMirrored |\u003E Chart.withXAxisStyle(\u0022\u0022,MinMax=(0.,6.)) |\u003E Chart.withYAxisStyle(\u0022Quartil 75-100\u0022)\n    |]\n    |\u003E Chart.Grid(4,1)\n\n\n(*** condition: ipynb ***)\n#if IPYNB\nquartileRangePlot\n#endif // IPYNB\n\n(***hide***)\nquartileRangePlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\n## QQ plot\n\nQQ plots allow to compare sample distributions if:\n\n  - the underlying population distribution is unknown or if\n  - the relationship between two distributions should be evaluated in greater detail than just their estimated parameters.\n\nWhen a sample is compared to a known distribution, every quantile can be calculated exactly by inverting their CDF. If you compare two samples, there is no uniquely defined CDF, \nso quantiles have to be interpolated. \n\n### Comparing two sample distributions\n\nTwo sample populations can be compared by QQ-plots where quantiles of the first sample are plotted against quantiles of the second sample. If the sample length is equal, both samples are ordered and plotted as pairs. \n\n$qq_i = X_i,Y_i$ with $X$ and $Y$ beeing ordered sample sequences of length $n$ and $(1 \\le i \\le n)$\n\n\nIf samples sizes are unequal the quantiles of the larger data set have to be interpolated from the quantiles of the smaller data set. \n\n**Lets create four samples of unequal sizes first:**\n\n - two that are drawn from a normal distribution of mean $3.0$ and standard deviation $0.5$\n\n - two that are drawn randomly between 0 and 1\n\n*)\n\n\n//create samples\nlet rnd = System.Random()\nlet norm = Distributions.ContinuousDistribution.normal 3.0 0.5\n\n///Example 1: Samples from a normal distribution\nlet normalDistA = Array.init 300 (fun _ -\u003E norm.Sample())\nlet normalDistB = Array.init 250 (fun _ -\u003E norm.Sample())\n\n///Example 2: Random samples from values between 0 and 1\nlet evenRandomA = Array.init 270 (fun _ -\u003E rnd.NextDouble())\nlet evenRandomB = Array.init 280 (fun _ -\u003E rnd.NextDouble() \u002B 1.)\n\nlet exampleDistributions =\n    [\n        Chart.Histogram(normalDistA,Name=\u0022normalDistA\u0022) |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        Chart.Histogram(normalDistB,Name=\u0022normalDistB\u0022) |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        Chart.Histogram(evenRandomA,Name=\u0022evenRandomA\u0022) |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        Chart.Histogram(evenRandomB,Name=\u0022evenRandomB\u0022) |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n    ]\n    |\u003E Chart.Grid(2,2)\n    |\u003E Chart.withSize(800.,700.)\n\n(*** condition: ipynb ***)\n#if IPYNB\nexampleDistributions\n#endif // IPYNB\n\n(***hide***)\nexampleDistributions |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\nTo compare if two distributions are equal or to identify ranges in which the distributions differ, a quantile pair from each of the two distributions can be calculated and plotted against each other.\nIf both distributions are similar, you would expect the quantiles to be identical and therefore are located on a straight line that additionally is located on the bisector! If the samples are of different length $m$ and $n$ the number \nof quantiles is limited to $min$ $m$ $n$. For every data point of the smaller data set a corresponding quantile of the larger data set is determined.\n\nLets calculate the quantiles from _normalDistA_ vs _normalDistB_.\n*)\n\n// Here a tuple sequence is generated that pairwise contain the same quantiles from normalDistA and normalDistB\nlet qqData = QQPlot.fromTwoSamples normalDistA normalDistB\n\n// Lets check out the first 5 elements in the sequence\nSeq.take 5 qqData\n(***include-it-raw***)\n\n(**\n\nYou can use this tuple sequence and plot it against each other.\n\n*)\n\nopen FSharp.Stats.Signal\nopen FSharp.Stats.Signal.QQPlot\n\n\n//plots QQ plot from two sample populations\nlet plotFrom2Populations sampleA sampleB sampleNameA sampleNameB =\n\n    //here the coordinates are calculated\n    let qqCoordinates = QQPlot.fromTwoSamples sampleA sampleB\n\n    Chart.Point (qqCoordinates,Name=\u0022QQ\u0022)\n    |\u003E Chart.withXAxisStyle $\u0022Quantiles {sampleNameA}\u0022 \n    |\u003E Chart.withYAxisStyle $\u0022Quantiles {sampleNameB}\u0022\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n\nlet myQQplot1 = plotFrom2Populations normalDistA normalDistB \u0022sample A\u0022 \u0022sample B\u0022\n\n\n(*** condition: ipynb ***)\n#if IPYNB\nmyQQplot1\n#endif // IPYNB\n\n(***hide***)\nmyQQplot1 |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\nBoth samples were taken from the same distribution (here normal distribution) and therefore they match pretty well.\n\nIn the following plot you can see four comparisons of the four distributions defined in the beginning (2x normal \u002B 2x uniform).\n\n*)\n\nlet multipleQQPlots = \n    [\n        plotFrom2Populations normalDistA normalDistB \u0022normalA\u0022 \u0022normalB\u0022\n        plotFrom2Populations normalDistA evenRandomB \u0022normalA\u0022 \u0022randomB\u0022\n        plotFrom2Populations evenRandomA normalDistB \u0022randomA\u0022 \u0022normalB\u0022\n        plotFrom2Populations evenRandomA evenRandomB \u0022randomA\u0022 \u0022randomB\u0022\n    ]\n    |\u003E Chart.Grid(2,2)\n    |\u003E Chart.withLegend false\n    |\u003E Chart.withSize(800.,700.)\n\n(*** condition: ipynb ***)\n#if IPYNB\nmultipleQQPlots\n#endif // IPYNB\n\n(***hide***)\nmultipleQQPlots |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\nWhen QQ-plots are generated for pairwise comparisons, it is obvious, that the _random_-_random_ and _normal_-_normal_ samples fit nicely. \n\n## Attention\n\nPlease note that the _random_-_random_ comparison may be misleading! Despite the fact, that the QQ-plot forms a straight line, the underlying distributions differ greatly (_randomA_ ranges from 0 to 1 while _randomB_\nranges from 1 to 2. This is indicated in the QQ plot as the x- and y-axis ranges differ. The formed straight line does _not_ correspond to the bisector.\n\nThe cross comparisons between normal and random samples do not match because their quantiles differ.\nIts easy to see that the random samples are distributed between 0 and 1 (or 1 and 2) while the samples from the normal distributions range from $1$ to ~$5$.\n\n\n### Comparing a sample against a distribution\n\nYou can plot the quantiles from a sample versus a known distribution to check if your data follows the given distribution. \n\n_Note that a QQ plot does not replace a significance test wether the distributions differ statistically._\n\nThere are various methods to determine quantiles that differ in handling ties and uneven spacing.\n\n\n\u0060\u0060\u0060\nQuantile determination methods(rank,sampleLength):\n  - Blom          -\u003E (rank - 3. / 8.) / (sampleLength \u002B 1. / 4.)\n  - Rankit        -\u003E (rank - 1. / 2.) / sampleLength\n  - Tukey         -\u003E (rank - 1. / 3.) / (sampleLength \u002B 1. / 3.)\n  - VanDerWerden  -\u003E rank / (sampleLength \u002B 1.)\n\u0060\u0060\u0060\n\n\n#### Normal distribution\n\nThe data can be z standardized prior to quantile determination to have zero mean and unit variance. If the data is zTransformed the bisector defines a perfect match.\n\n*)\n\n// The raw qq-plot data of a standard normal distribution and the sample distribution\n// defaults: \n//   Method:     QuantileMethod.Rankit\n//   ZTransform: false\nlet qq2Normal sample = QQPlot.toGauss(Method=QuantileMethod.Rankit,ZTransform=true) sample\n\n// plots QQ plot from a sample population against a standard normal distribution. \n// if the data is zTransformed the bisector defines a perfect match.\nlet plotFromOneSampleGauss sample =\n    \n    //this is the main data plotted as x,y diagram\n    let qqData = QQPlot.toGauss(Method=QuantileMethod.Rankit,ZTransform=true) sample\n\n    let qqChart =\n        Chart.Point qqData\n\n    let expectedLine = \n        let minimum = qqData |\u003E Seq.head |\u003E snd\n        let maximum = qqData |\u003E Seq.last |\u003E snd\n        [\n            minimum,minimum\n            maximum,maximum\n        ]\n        |\u003E Chart.Line\n        |\u003E Chart.withTraceName \u0022expected\u0022\n\n    [\n        qqChart\n        expectedLine\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withXAxisStyle \u0022Theoretical quantiles (normal)\u0022 \n    |\u003E Chart.withYAxisStyle \u0022Sample quantiles\u0022\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n\n\nlet myQQPlotOneSampleGauss = plotFromOneSampleGauss normalDistA \n\n(*** condition: ipynb ***)\n#if IPYNB\nmyQQPlotOneSampleGauss\n#endif // IPYNB\n\n(***hide***)\nmyQQPlotOneSampleGauss |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n\n(**\n\nAs seen above the sample perfectly matches the expected quantiles from a normal distribution. This is expected because the sample was generated by sampling from an normal distribution.\n\n*)\n\n// compare the uniform sample against a normal distribution\nlet my2QQPlotOneSampleGauss = plotFromOneSampleGauss evenRandomA \n\n\n(*** condition: ipynb ***)\n#if IPYNB\nmy2QQPlotOneSampleGauss\n#endif // IPYNB\n\n(***hide***)\nmy2QQPlotOneSampleGauss |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\nAs seen above the sample does not match the expected quantiles from a normal distribution. The sample derives from an random sampling between 0 and 1 and therefore is overrepresented in the tails.\n\n\n#### Uniform Distribution\n\nYou also can plot your data against a uniform distribution. Data can be standardized to lie between $0$ and $1$\n*)\n\nlet uniform = \n    QQPlot.toUniform(Method=QuantileMethod.Rankit,Standardize=false) normalDistA\n    |\u003E Chart.Point\n    |\u003E Chart.withXAxisStyle \u0022Theoretical quantiles (uniform)\u0022 \n    |\u003E Chart.withYAxisStyle \u0022Sample quantiles\u0022\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n\n(*** condition: ipynb ***)\n#if IPYNB\nuniform\n#endif // IPYNB\n\n(***hide***)\nuniform |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n#### Any specified distribution\n\nYou also can plot your data against a distribution you can specify. You have to define the _inverse CDF_ or also called the _Quantile function_.\n\n**LogNormal distribution**\n\n*)\n\n// generate a sample from a lognormal distriution\nlet sampleFromLogNormal =\n    let d = Distributions.ContinuousDistribution.logNormal 0. 1.\n    Array.init 500 (fun _ -\u003E d.Sample())\n\n// define the quantile function for the log normal distribution with parameters mu = 0 and sigma = 1\nlet quantileFunctionLogNormal p = \n    let mu = 0.\n    let sigma = 1.\n    Math.Exp (mu \u002B Math.Sqrt(2. * (pown sigma 2)) * SpecialFunctions.Errorfunction.inverf(2. * p - 1.))\n\nlet logNormalNormalDist = QQPlot.toInvCDF(quantileFunctionLogNormal,Method=QuantileMethod.Rankit) normalDistA\n\nlet logNormalLogNormal  = QQPlot.toInvCDF(quantileFunctionLogNormal,Method=QuantileMethod.Rankit) sampleFromLogNormal\n\nlet logNormalChart = \n    [\n        Chart.Point(logNormalNormalDist,Name=\u0022normal sample\u0022)\n        Chart.Point(logNormalLogNormal,Name=\u0022log normal sample\u0022)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withXAxisStyle \u0022Theoretical quantiles Log Normal\u0022 \n    |\u003E Chart.withYAxisStyle \u0022Sample quantiles\u0022\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n\n(*** condition: ipynb ***)\n#if IPYNB\nlogNormalChart\n#endif // IPYNB\n\n(***hide***)\nlogNormalChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\nThe log normal sample fits nicely to the bisector, but the sample from the normal distribution does not fit\n\n# Quantile normalization\n\nFor the FSharp.Stats quantile normalization please refer to the [Normalization documentation](https://fslab.org/FSharp.Stats/Normalization.html). \nFor clarity, the normalization in this documentation is entirely performed within the snippets.\n\nWhen you want to compare e.g. intensity measurements of elements between samples, you often have to normalize the samples in order\nto be able to perform a valid comparison. Samples may vary in their average intensity just because of the technical nature of the measurement itself, \nthereby distorting the underlying correct/real distribution. It is assumed that global changes across the samples are due to unwanted technical variability and only\na small number of elements are dysregulated (Zhao et al, 2020).\n\nTo compensate for this technical variance you can perform a quantile normalization (_Note: \u0060Signal.Normalization.medianOfRatios\u0060 could be an alternative_). It is a technique for making two or more\ndistributions identical in statistical properties and was originally developed for gene expression microarrays. It sees widespread use, constituting a standard part\nof analysis pipelines for high-throughput analysis.\nYou can either quantile normalize data according to given reference distribution (e.g. Gamma or Normal distribution) or create your own reference distribution out of your samples.\nFor the latter some data is generated that does not share the same intensity range:\n\n*)\n\nlet namesA,dataA = Array.init 20 (fun i -\u003E $\u0022A_%02i{i\u002B1}\u0022,rnd.NextDouble()      ) |\u003E Array.unzip\nlet namesB,dataB = Array.init 20 (fun i -\u003E $\u0022B_%02i{i\u002B1}\u0022,rnd.NextDouble() \u002B 0.1) |\u003E Array.unzip\nlet namesC,dataC = Array.init 20 (fun i -\u003E $\u0022C_%02i{i\u002B1}\u0022,rnd.NextDouble() / 2.0) |\u003E Array.unzip\n\n\nlet rawDataChart = \n    [\n        Chart.Point(dataA |\u003E Array.map (fun value -\u003E \u0022sampleA\u0022,value),MultiText=namesA,TextPosition=TextPosition.MiddleRight,ShowLegend=false)\n        Chart.Point(dataB |\u003E Array.map (fun value -\u003E \u0022sampleB\u0022,value),MultiText=namesB,TextPosition=TextPosition.MiddleRight,ShowLegend=false)\n        Chart.Point(dataC |\u003E Array.map (fun value -\u003E \u0022sampleC\u0022,value),MultiText=namesC,TextPosition=TextPosition.MiddleLeft,ShowLegend=false)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n    |\u003E Chart.withTitle \u0022Raw data\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nrawDataChart\n#endif // IPYNB\n\n(***hide***)\nrawDataChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\nAs you can see, the average intensity varies greatly between samples A, B, and C. If you want to e.g. compare element 11 of each sample, you have to perform a \nsample normalization prior to this comparison. It is called quantile normalization, because the final normalized samples have the **same quantiles** and the **same statistical properties**.\n\nFor the normalization the data is ranked, the intensities of each rank x are averaged and this intensity is set as normalized intensity for each sample at rank x.\n*)\n\nlet rankedA =\n    Rank.RankFirst() dataA\n    |\u003E Array.zip3 namesA dataA\n    |\u003E Array.sortBy (fun (a,b,c) -\u003E c)\n\nlet rankedB =\n    Rank.RankFirst() dataB\n    |\u003E Array.zip3 namesB dataB\n    |\u003E Array.sortBy (fun (a,b,c) -\u003E c)\n\nlet rankedC =\n    Rank.RankFirst() dataC\n    |\u003E Array.zip3 namesC dataC\n    |\u003E Array.sortBy (fun (a,b,c) -\u003E c)\n\n\nlet rankDataChart = \n    let valA,rankA = rankedA |\u003E Array.map (fun (name,value,rank) -\u003E (\u0022sampleA\u0022,value),rank) |\u003E Array.unzip\n    let valB,rankB = rankedB |\u003E Array.map (fun (name,value,rank) -\u003E (\u0022sampleB\u0022,value),rank) |\u003E Array.unzip\n    let valC,rankC = rankedC |\u003E Array.map (fun (name,value,rank) -\u003E (\u0022sampleC\u0022,value),rank) |\u003E Array.unzip\n    let meanRank11 = [valA.[10];valB.[10];valC.[10]] |\u003E Seq.meanBy snd\n    [\n        Chart.Point(valA,MultiText=rankA,TextPosition=TextPosition.MiddleRight,ShowLegend=false)\n        Chart.Point(valB,MultiText=rankB,TextPosition=TextPosition.MiddleRight,ShowLegend=false)\n        Chart.Point(valC,MultiText=rankC,TextPosition=TextPosition.MiddleLeft,ShowLegend=false)\n        Chart.Point([valA.[10];valB.[10];valC.[10]],ShowLegend=false) |\u003E Chart.withMarkerStyle(Size=10)\n        Chart.Line([\u0022sampleA\u0022,meanRank11;\u0022sampleC\u0022,meanRank11],LineColor=Color.fromHex \u0022#d62728\u0022,LineDash=DrawingStyle.Dash,ShowLegend=false) \n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Ranks\u0022\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n\n(*** condition: ipynb ***)\n#if IPYNB\nrankDataChart\n#endif // IPYNB\n\n(***hide***)\nrankDataChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\nAs seen above, the ranks assign ascending indices for each data point within a sample. The data point of rank 11 varies a lot between the samples. To compensate this offset the average of the values at each rank\nis calculated (red dashed line for rank 11). The values of the data points at each rank are subsequently shifted to their mean (their reference).\n*)\n\n///quantile normalization of ranked samples\nlet normA,normB,normC =\n    Array.map3 (fun (nameA,intA,_) (nameB,intB,_) (nameC,intC,_) -\u003E \n        let reference = [intA;intB;intC] |\u003E Seq.mean\n        (nameA,reference),(nameB,reference),(nameC,reference)\n        ) \n        rankedA rankedB rankedC\n    |\u003E Array.unzip3\n\n\n\nlet normalizedDataChart = \n    let valA,rankA = normA |\u003E Array.map (fun (name,value) -\u003E (\u0022sampleA\u0022,value),name) |\u003E Array.unzip\n    let valB,rankB = normB |\u003E Array.map (fun (name,value) -\u003E (\u0022sampleB\u0022,value),name) |\u003E Array.unzip\n    let valC,rankC = normC |\u003E Array.map (fun (name,value) -\u003E (\u0022sampleC\u0022,value),name) |\u003E Array.unzip\n    [\n        Chart.Point(valA,MultiText=rankA,TextPosition=TextPosition.MiddleRight,ShowLegend=false)\n        Chart.Point(valB,MultiText=rankB,TextPosition=TextPosition.MiddleRight,ShowLegend=false)\n        Chart.Point(valC,MultiText=rankC,TextPosition=TextPosition.MiddleLeft,ShowLegend=false)\n        Chart.Point([valA.[10];valB.[10];valC.[10]],ShowLegend=false) |\u003E Chart.withMarkerStyle(Size=10)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withTitle \u0022Normalized data\u0022\n    |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n\n(*** condition: ipynb ***)\n#if IPYNB\nnormalizedDataChart\n#endif // IPYNB\n\n(***hide***)\nnormalizedDataChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\nNow let us check why this technique is called quantile normalization. First, we create QQ-Plots of the raw and normalized samples to compare them.\n\n*)\n\n\nlet QQPlotRawAB   = plotFrom2Populations dataA dataB \u0022raw data A\u0022 \u0022raw data B\u0022\nlet QQPlotRawBC   = plotFrom2Populations dataB dataC \u0022raw data B\u0022 \u0022raw data C\u0022\nlet QQPlotQNormAB = plotFrom2Populations (Array.map snd normA) (Array.map snd normB) \u0022qnorm data A\u0022 \u0022qnorm data B\u0022\nlet QQPlotQNormBC = plotFrom2Populations (Array.map snd normB) (Array.map snd normC) \u0022qnorm data B\u0022 \u0022qnorm data C\u0022\n\nlet qNormPlot = \n    [\n        QQPlotRawAB  |\u003E Chart.withTraceName \u0022rawAB\u0022\n        QQPlotQNormAB|\u003E Chart.withTraceName \u0022qnormAB\u0022\n        QQPlotRawBC  |\u003E Chart.withTraceName \u0022rawBC\u0022\n        QQPlotQNormBC|\u003E Chart.withTraceName \u0022qnormBC\u0022\n    ]\n    |\u003E Chart.Grid(2,2)\n\n(*** condition: ipynb ***)\n#if IPYNB\nqNormPlot\n#endif // IPYNB\n\n(***hide***)\nqNormPlot |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\nIt is obvious that the quantiles of the samples are identical after the normalization. Even the raw data QQ-Plots look straight because they all derive from a normal distribution.\nBut it is easy to see, that the absolute quantile values differ (the quantiles are not located on the bisector). \n\n### Additional remarks:\n\n  - In this documentation \u0060RankFirst\u0060 was used as method for handling ties. If ties are present, the first occurence is assigned to rank x, the next is assigned to rank (x\u002B1).\n\n  - Quantile normalization is susceptible to batch effects when blindly applied to whole data sets! When handling several conditions with multiple replicates each, it may be beneficial to group the samples of each condition and quantile normalize them separately (Zhao et al, 2020).\n\n  - For the standard quantile normalization the number of data point in each sample has to be equal.\n\n  - When strong effects are expected between the samples, it is useful to make special allowances for outliers.\n\n  - \u0022A particular danger in the use of QN is that lay analysts are easily misled by the rather \u0022perfect-looking\u0022 post-normalization results\u0022 (Zhao et al, 2020)\n\n### References\n\n  - Hicks S, Irzarry R, 2014, When to use Quantile Normalization?, https://doi.org/10.1101/012203\n  \n  - Zhao, Wong, and Goh, 2020, How to do quantile normalization correctly for gene expression data analyses, doi: 10.1038/s41598-020-72664-6\n\n*)\n\n\n"},{"uri":"https://fslab.org/FSharp.Stats/Rank.html","title":"Ranking","content":"(**\n---\ntitle: Ranking\nindex: 19\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 2.0.0-preview.16\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 2.0.0-preview.16\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n\n# Ranking\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Rank.ipynb)\n\n_Summary:_ this tutorial demonstrates how to determine ranks of a collection\n\nConsider a collection of values. The rank of a number is its size relative to other values in a sequence.\nThere are four methods how to handle ties:\n\n\n\u0060\u0060\u0060\nlet mySequence = [|1.0; -2.0; 0.0; 1.0|]\n\u0060\u0060\u0060\n\n- **rankFirst**\n  - Each rank occurs exactly once. If ties are present the first occurence gets the low rank. \n  - ATTENTION: If there are multiple ties (\u003E20) the sorting of Arrays will not preserve the element order correctly!!\n  - \u0060ranks = [3,1,2,4]\u0060\n\n\n- **rankMin**\n  - If ties are present all tied elements receive the score of the first occurence (min rank)\n  - \u0060ranks = [3,1,2,3]\u0060\n\n- **rankMax**\n  - If ties are present all tied elements receive the score of the last occurence (max rank)\n  - \u0060ranks = [4,1,2,4]\u0060\n\n\n- **rankAverge**\n  - If ties are present all tied elements receive their average rank.\n  - \u0060ranks = [3.5,1,2,3.5]\u0060\n\n\n## NaN treatment\nIf nans are present in the collection, there are several ways to treat them. In general \u0060nan \u003C\u003E nan\u0060 so that each occurence will receive its unique rank. \n(for infinity and -infinity the equality check returns true).\n  \n  - Usually nans are sorted to the beginning of the collection: \u0060nan, -infinity, -100., 0., 100, infinity\u0060\n  - By default in FSharp.Stats.Rank, nans are sorted to the end of the sequence (the sorting can be defined as optional parameter)\n  - Additionally ranks of nan values are set to nan if not specified othwerwise\n*)\n\nopen FSharp.Stats\n\nlet collection = [|2.;-infinity;infinity;infinity;nan;0|]\n\nRank.RankFirst() collection\n// result:  [|3.0; 1.0; 4.0; 5.0; nan; 2.0|]\n\nRank.RankMin() collection\n// result:  [|3.0; 1.0; 4.0; 4.0; nan; 2.0|]\n\nRank.RankMax() collection\n// result:  [|3.0; 1.0; 5.0; 5.0; nan; 2.0|]\n\nRank.RankAverage() collection\n// result:  [|3.0; 1.0; 4.5; 4.5; nan; 2.0|]\n\n(**\n\n\nIf you want to preserve the true ranks of nans but sort them to the back you can use:\n\n*)\n\nRank.RankFirst(RankNanWithNan=false) collection\n// result:  [|3.0; 1.0; 4.0; 5.0; 6.0; 2.0|]\n\n\n(**\n\n\nIf you want to preserve the true ranks of nans AND sort them to the beginning you can use:\n\n*)\n\nRank.RankFirst(NanIsMaximum=false,RankNanWithNan=false) collection\n// result:  [|4.0; 2.0; 5.0; 6.0; 1.0; 3.0|]\n\n\n"},{"uri":"https://fslab.org/FSharp.Stats/Signal.html","title":"Signal processing","content":"(**\n---\ntitle: Signal processing\nindex: 17\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 3.0.1\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 3.0.1\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 3.0.1\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#endif // IPYNB\n\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n(**\n\n# Signal Processing\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Signal.ipynb)\n\n_Summary:_ this tutorial demonstrates multiple ways of signal processing with FSharp.Stats.\n\n### Table of contents\n - [Outliers](#Outliers)\n    - [Tukey\u0027s fences](#Tukey-s-fences)\n - [Filtering](#Filtering)\n - [Padding](#Padding)\n - [Wavelet](#Wavelet)\n    - [Continuous Wavelet](#Continuous-Wavelet)\n    - [Continuous Wavelet 3D](#Continuous-Wavelet-3D)\n - [Fast Fourier transform](#Fast-Fourier-transform)\n\n## Outliers\n\n### Tukey\u0027s fences\n\nA common approach for outlier detection is Tukey\u0027s fences-method. It determines the interquartile range (IQR) of the \ndata and adds a fraction of it to the third quartile (Q3) or subtracts it from the first quartile (Q1) respectively. \nAn often-used fraction of the IQR is k=1.5 for outliers and k=3 for points \u0027far out\u0027.\n\nIn the generation of box plots the same method determines the whiskers and outliers of a sample.\n\nReference:\n\n  - Tukey, JW. Exploratory data analysis. Addison-Wesely, 1977\n\n*)\nopen FSharp.Stats\nopen FSharp.Collections\n\nlet sampleO1 = [|45.;42.;45.5;43.;47.;51.;34.;45.;44.;46.;48.;37.;46.;|]\n\nlet outlierBordersO1 = Signal.Outliers.tukey 1.5 sampleO1\n\nlet lowerBorderO1 = Intervals.getStart outlierBordersO1\n// result: 37.16667\n\nlet upperBorderO1 = Intervals.getEnd outlierBordersO1\n// result: 51.83333\n\nlet (inside,outside) =\n    sampleO1 \n    |\u003E Array.partition (fun x -\u003E Intervals.liesInInterval x outlierBordersO1)\n\nlet tukeyOutlierChart =\n    [\n        Chart.Point(inside |\u003E Seq.map (fun x -\u003E 1,x),\u0022sample\u0022)\n        Chart.Point(outside |\u003E Seq.map (fun x -\u003E 1,x),\u0022outliers\u0022)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withShapes(\n        [\n            Shape.init(StyleParam.ShapeType.Line,0.5,1.5,lowerBorderO1,lowerBorderO1,Line=Line.init(Dash=StyleParam.DrawingStyle.Dash,Color=Color.fromString \u0022grey\u0022))\n            Shape.init(StyleParam.ShapeType.Line,0.5,1.5,upperBorderO1,upperBorderO1,Line=Line.init(Dash=StyleParam.DrawingStyle.Dash,Color=Color.fromString \u0022grey\u0022))\n        ]\n        )\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withTitle \u0022Tukey\u0027s fences outlier borders\u0022\n   \n(*** condition: ipynb ***)\n#if IPYNB\ntukeyOutlierChart\n#endif // IPYNB\n\n(***hide***)\ntukeyOutlierChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Filtering\n\nSavitzgy-Golay description is coming soon.\n\n*)\n\nopen FSharp.Stats\n\n// Savitzky-Golay low-pass filtering\nlet t  = [|-4. ..(8.0/500.).. 4.|]\nlet dy  = t |\u003E Array.map (fun t -\u003E (-t**2.) \u002B (Distributions.Continuous.Normal.Sample 0. 0.5) )\nlet dy\u0027 = t |\u003E Array.map (fun t -\u003E (-t**2.))\n\nlet dysg = Signal.Filtering.savitzkyGolay  31 4 0 1 dy\n\nlet savitzgyChart =\n    [\n        Chart.Point(t, dy, Name=\u0022data with noise\u0022);\n        Chart.Point(t, dy\u0027, Name=\u0022data without noise\u0022);\n        Chart.Point(t, dysg, Name=\u0022data sg\u0022);\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nsavitzgyChart\n#endif // IPYNB\n\n(***hide***)\nsavitzgyChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Padding\n\nIf convolution operations should be performed on a signal trace, it often is necessary to extend (pad) the data with artificial data points.\nThere are several padding methods:\n\n - **Zero**: Data points with y-value=zero are introduced. This often is useful when analyzing spectra with sparse data because areas without any data measured are assumed to have zero intensity.\n\n - **Random**: When the baseline of the measured signal is nonzero like in chromatograms, it is necessary to insert data points with random y-values taken from the original data set.\n\n - **Delete**: No datapoints are inserted.\n\n - **Linear interpolation**: When a linear relationship is assumed in the range between two adjacent data points, the padding points should lie on the straight line between those points.\n\n\n**Three regions can be defined where padding points could be introduced:**\n\n 1. In the beginning and end of the data set artificial data points have to be added to analyse the start- and end-regions of the data. Therefore, random data points are chosen from the original data set.\n \n 2. If the data is not measured in discrete intervals, the region between two adjacent values have to be padded to ensure sufficient coverage for convolution.\n \n 3. If the gap between two adjacent points is too large, another padding method than in case 2. may be chosen.\n\n\n*)\n\nopen FSharp.Stats.Signal\n\n// get raw data\n// data originates from temperature measurements conducted in https://github.com/bvenn/AlgaeWatch\nlet data = \n    System.IO.File.ReadAllLines(__SOURCE_DIRECTORY__ \u002B \u0022/data/waveletData.txt\u0022)\n    |\u003E Array.map (fun x -\u003E \n        let tmp = x.Split([|\u0027\\t\u0027|])\n        float tmp.[0],float tmp.[1])\n\n///interpolate data point y-values when small gaps are present\nlet innerPadMethod = Padding.InternalPaddingMethod.LinearInterpolation\n\n///take random data point y-values when huge gaps are between data points\nlet hugeGapPadMethod = Padding.HugeGapPaddingMethod.Random\n\n///padd the start and end of the signal with random data points\nlet borderPadMethod = Padding.BorderPaddingMethod.Random\n\n///the maximal distance that is allowed between data points is the minimum spacing divided by 2\nlet minDistance = \n    (Padding.HelperFunctions.getMinimumSpacing data (-)) / 2.\n\n//maximal allowed gap between datapoints where internalPaddingMethod can be applied.\n//if internalPaddingMethod = hugeGapPaddingMethod, then it does not matter which value is chosen\nlet maxSpacing = 10.\n\n//since were dealing with floats the functions are (-) and (\u002B)\nlet getDiffFu = Padding.HelperFunctions.Float.getDiffFloat      //(-)\nlet addXValue = Padding.HelperFunctions.Float.addToXValueFloat  //(\u002B)\n\n//number of datapoints the dataset gets expanded to the left and to the rigth\nlet borderpadding = 1000\n\n//get the paddedDataSet\nlet paddedData =\n    //if a gap is greater than 10. the HugeGapPaddingMethod is applied\n    Padding.pad data minDistance maxSpacing getDiffFu addXValue borderpadding borderPadMethod innerPadMethod hugeGapPadMethod\n\nlet paddedDataChart=\n    [\n    Chart.Line (paddedData,Name=\u0022paddedData\u0022)\n    Chart.Area (data,Name = \u0022rawData\u0022)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022Time\u0022 \u0022Temperature\u0022\n    |\u003E Chart.withSize(900.,450.)\n\n(*** condition: ipynb ***)\n#if IPYNB\npaddedDataChart\n#endif // IPYNB\n\n(***hide***)\npaddedDataChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\nExample for a linear interpolation as huge gap padding method\n*)\n\n//get the padded data\nlet paddedDataLinear =\n    //if a gap is greater than 10. the LinearInterpolation padding method is applied\n    Padding.pad data minDistance maxSpacing getDiffFu addXValue borderpadding borderPadMethod innerPadMethod Padding.HugeGapPaddingMethod.LinearInterpolation\n\nlet paddedDataLinearChart=\n    [\n    Chart.Line (paddedDataLinear,Name=\u0022paddedData\u0022)\n    Chart.Area (data,Name = \u0022rawData\u0022)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022Time\u0022 \u0022Temperature\u0022\n    |\u003E Chart.withSize(900.,450.)\n\n(*** condition: ipynb ***)\n#if IPYNB\npaddedDataLinearChart\n#endif // IPYNB\n\n(***hide***)\npaddedDataLinearChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Wavelet\n\n### Continuous Wavelet\n\nThe Continuous Wavelet Transform (CWT) is a multiresolution analysis method to gain insights into frequency components of a signal with simultaneous \ntemporal classification. Wavelet in this context stands for small wave and describes a window function which is convoluted with the original signal at \nevery position in time. Many wavelets exist, every one of them is useful for a certain application, thereby \u0027searching\u0027 for specific patterns in the data. \nBy increasing the dimensions (scale) of the wavelet function, different frequency patterns are studied.\n\nIn contrast to the Fourier transform, that gives a perfect frequency resolution but no time resolution, the CWT is capable of mediating between the two opposing \nproperties of time resolution and frequency resolution (Heisenberg\u0027s uncertainty principle).\n\nFor further information please visit [The Wavelet Tutorial](http://web.iitd.ac.in/~sumeet/WaveletTutorial.pdf).\n*)\n\nopen FSharp.Stats\nopen StyleParam\n\n///Array containing wavelets of all scales that should be investigated. The propagated frequency corresponds to 4 * Ricker.Scale\nlet rickerArray = \n    [|2. .. 10.|] |\u003E Array.map (fun x -\u003E Wavelet.createRicker (x**1.8))\n\n///the data already was padded with 1000 additional datapoints in the beginning and end of the data set (see above). \n///Not it is transformed with the previous defined wavelets.\nlet transformedData = \n    rickerArray\n    |\u003E Array.map (fun wavelet -\u003E ContinuousWavelet.transform paddedData (-) 1000 wavelet)\n\n///combining the raw and transformed data in one chart\nlet combinedChart =\n    //CWT-chart\n    let heatmap =\n        let rowNames,colNames = \n            transformedData.[0] |\u003E Array.mapi (fun i (x,_) -\u003E string i, string x) |\u003E Array.unzip\n        transformedData\n        |\u003E JaggedArray.map snd\n        |\u003E fun x -\u003E Chart.Heatmap(x,colNames=colNames,rowNames=rowNames,ShowScale=false)\n        |\u003E Chart.withAxisAnchor(X=1)\n        |\u003E Chart.withAxisAnchor(Y=1)\n\n    //Rawchart\n    let rawChart = \n        Chart.Area (data,LineColor = Color.fromHex \u0022#1f77b4\u0022,Name = \u0022rawData\u0022)\n        |\u003E Chart.withAxisAnchor(X=2)\n        |\u003E Chart.withAxisAnchor(Y=2) \n\n    //combine the charts and add additional styling\n    Chart.combine([heatmap;rawChart])\n    |\u003E Chart.withXAxisStyle(\u0022Time\u0022,Side=Side.Bottom,Id=SubPlotId.XAxis 2,ShowGrid=false)\n    |\u003E Chart.withXAxisStyle(\u0022\u0022, Side=Side.Top,ShowGrid=false, Id=SubPlotId.XAxis 1,Overlaying=LinearAxisId.X 2)\n    |\u003E Chart.withYAxisStyle(\u0022Temperature\u0022, MinMax=(-25.,30.), Side=Side.Left,Id=SubPlotId.YAxis 2)\n    |\u003E Chart.withYAxisStyle(\n        \u0022Correlation\u0022, MinMax=(0.,19.),ShowGrid=false, Side=Side.Right,\n        Id=SubPlotId.YAxis 1,Overlaying=LinearAxisId.Y 2)\n    |\u003E Chart.withLegend true\n    //|\u003E Chart.withSize(900.,700.)\n    \n\n(*** condition: ipynb ***)\n#if IPYNB\ncombinedChart\n#endif // IPYNB\n\n(***hide***)\ncombinedChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n\nBecause in most cases default parameters are sufficient to transform the data, there are two additional functions to process the raw data with automated padding:\n \n1. \u0060ContinuousWavelet.transformDefault\u0060\n   \n - padding is chosen in an automated manner based on the used wavelet\n\n - minDistance: median spacing / 2\n\n - maxDistance: median spacing * 10\n\n - internalPadding: LinearInterpolation\n\n - hugeGapPadding: Random\n\n2. \u0060ContinuousWavelet.transformDefaultZero\u0060\n\n - padding is chosen in an automated manner based on the used wavelet  \n\n - minDistance: smallest occurring spacing\n\n - maxDistance: Infinity\n\n - internalPadding: Zero\n\n - hugeGapPadding: Zero (redundant)\n\n*)\n\n//used wavelets\nlet rickerArrayDefault = \n    [|2. .. 2. .. 10.|] |\u003E Array.map (fun x -\u003E Wavelet.createRicker (x**1.8))\n\n//transforms the data with default parameters (InternalPadding=LinearInterpol;HugeGapPadd=Random)\nlet defaultTransform =\n    rickerArrayDefault\n    |\u003E Array.map (ContinuousWavelet.transformDefault data)\n\n//alternative presentation of the wavelet correlation coefficients as line charts\nlet defaultChart =\n    let rawDataChart =\n        [|Chart.Area(data,Name= \u0022rawData\u0022)|]\n    let cwtCharts =\n        let scale i = rickerArrayDefault.[i].Scale\n        defaultTransform \n        |\u003E Array.mapi (fun i x -\u003E Chart.Line(x,Name=(sprintf \u0022s: %.1f\u0022 (scale i))))\n\n    Array.append rawDataChart cwtCharts\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022Time\u0022 \u0022Temperature and Correlation\u0022\n    |\u003E Chart.withTitle \u0022default transform\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\ndefaultChart\n#endif // IPYNB\n\n(***hide***)\ndefaultChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n- Because random y-values are introduced, small wavelets are going to receive a high correlation in big gaps!\n- s = scale\n- f = frequency [days]\n*)\n(*** include-value:defaultChart ***)\n\n//transforms the data with default parameters (InternalPadding=Zero;HugeGapPadd=Zero)\nlet defaultZeroTransform =\n    rickerArrayDefault\n    |\u003E Array.map (ContinuousWavelet.transformDefaultZero data)\n\nlet defaultZeroChart =\n    let rawDataChart =\n        [|Chart.Area(data,Name= \u0022rawData\u0022)|]\n    let cwtCharts =\n        let scale i = rickerArrayDefault.[i].Scale\n        defaultZeroTransform \n        |\u003E Array.mapi (fun i x -\u003E Chart.Line(x,Name=(sprintf \u0022s: %.1f\u0022 (scale i) )))\n\n    Array.append rawDataChart cwtCharts\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022Time\u0022 \u0022Temperature and Correlation\u0022\n    |\u003E Chart.withTitle \u0022default Zero transform\u0022\n\n\n(**\n- Because zeros are introduced, the adjacent signals are going to receive a high correlation!\n- In this example the correlation coefficients in general drop to a reduced intensity because a zero values are introduced between every data point (minDistance = minimal spacing / 2.). So here a zero padding makes no sense. The Temperature wont drop to zero between two measurements.\n- s = scale\n- f = frequency [days]\n*)\n\n(*** condition: ipynb ***)\n#if IPYNB\ndefaultZeroChart\n#endif // IPYNB\n\n(***hide***)\ndefaultZeroChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n### Continuous Wavelet 3D\n\nWhen dealing with three dimensional data a three dimensional wavelet has to be used for signal convolution. Here the Marr wavelet (3D mexican hat wavelet) is used for analysis.\nCommon cases are:\n\n- (microscopic) images\n\n- micro arrays\n\n*)\n\nopen FSharp.Stats.Signal\n\nlet data2D =\n    let rnd = System.Random()\n    Array2D.init 50 50 (fun i j -\u003E \n        if (i,j) = (15,15) then 5.\n        elif (i,j) = (35,35) then -5.\n        else rnd.NextDouble())\n\nlet data2DChart = \n    data2D\n    |\u003E JaggedArray.ofArray2D\n    |\u003E fun data -\u003E Chart.Heatmap(data,ShowScale=false)\n    |\u003E Chart.withXAxisStyle \u0022raw data\u0022\n\n//has to be greater than the padding area of the used wavelet\nlet padding = 11\n\nlet paddedData2D =\n    //padding the data points with 50 artificial random points on each side\n    Padding.Discrete.ThreeDimensional.pad data2D padding Padding.Discrete.ThreeDimensional.Random\n\nlet marrWavelet = \n    Wavelet.createMarr 3.\n\nlet transformedData2D =\n    ContinuousWavelet.Discrete.ThreeDimensional.transform paddedData2D padding marrWavelet\n\nlet chartHeatmap =\n    transformedData2D\n    |\u003E JaggedArray.ofArray2D\n    |\u003E fun data -\u003E Chart.Heatmap(data,ShowScale=false)\n    |\u003E Chart.withXAxisStyle \u0022wavelet transformed\u0022\n\nlet combined2DChart =\n    [data2DChart;chartHeatmap]\n    |\u003E Chart.Grid(1,2)\n\n(*** condition: ipynb ***)\n#if IPYNB\ncombined2DChart\n#endif // IPYNB\n\n(***hide***)\ncombined2DChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n## Fast Fourier transform\n\nThe FFT analysis converts a signal from its original domain (often time or space) to a representation in the frequency domain and vice versa.\n\n*)\n\nopen FSharp.Stats \nopen System.Numerics\n\n// Fast fourier transform\n\n// Sampling frequency   \nlet fs = 1000  \n// Sampling period      \nlet tp = 1. / float fs\n// Length of signal\nlet l = 1500;            \n\n// Time vector\nlet time = Array.init (l-1) (fun x -\u003E float x * tp)       \n\nlet pi = System.Math.PI\n\nlet signal t = 0.7 * sin (2.*pi*50.*t) \u002B sin (2.*pi*120.*t)\nlet timeSignal = time |\u003E Array.map signal\n\nlet fft = \n    Signal.FFT.inverseInPlace (\n        timeSignal \n        |\u003E Array.map (fun v -\u003E  Complex(v, 0.) )) \n    |\u003E Array.map (fun c -\u003E c.Real)\n\nlet fftChart = \n    [\n        Chart.Line(time,timeSignal) |\u003E Chart.withTraceInfo \u0022signal\u0022\n        Chart.Line(time,fft) |\u003E Chart.withTraceInfo \u0022fft\u0022\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nfftChart\n#endif // IPYNB\n\n(***hide***)\nfftChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/FSharp.Stats/Testing.html","title":"Statistical testing","content":"(**\n---\ntitle: Statistical testing\nindex: 2\ncategory: Documentation\ncategoryindex: 0\n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#I \u0022../src/FSharp.Stats/bin/Release/netstandard2.0/\u0022\n#r \u0022FSharp.Stats.dll\u0022\n#r \u0022nuget: Plotly.NET, 3.0.1\u0022\n#r \u0022nuget: FSharpAux, 1.1.0\u0022\n#r \u0022nuget: Deedle, 3.0.0\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Plotly.NET, 3.0.1\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 3.0.2\u0022\n#r \u0022nuget: FSharp.Stats\u0022\n#r \u0022nuget: FSharpAux, 1.1.0\u0022\n#r \u0022nuget: Deedle, 3.0.0\u0022\n#endif // IPYNB\n\nopen Plotly.NET\nopen Plotly.NET.StyleParam\nopen Plotly.NET.LayoutObjects\nopen FSharpAux\nopen Deedle\n\n//some axis styling\nmodule Chart = \n    let myAxis name = LinearAxis.init(Title=Title.init name,Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let myAxisRange name (min,max) = LinearAxis.init(Title=Title.init name,Range=Range.MinMax(min,max),Mirror=StyleParam.Mirror.All,Ticks=StyleParam.TickOptions.Inside,ShowGrid=false,ShowLine=true)\n    let withAxisTitles x y chart = \n        chart \n        |\u003E Chart.withTemplate ChartTemplates.lightMirrored\n        |\u003E Chart.withXAxis (myAxis x) \n        |\u003E Chart.withYAxis (myAxis y)\n\n\n        \n(**\n\n# Statistical testing\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fslaborg/FSharp.Stats/gh-pages?filepath=Testing.ipynb)\n\n_Summary:_ this tutorial explains how to perform various statistical tests with FSharp.Stats.\n\n### Table of contents\n\n - [Test Statistics](#Test-Statistics)\n    - [T-Test](#T-Test)\n    - [Anova](#Anova)\n    - [F-Test](#F-Test)\n    - [H-Test](#H-Test)\n    - [Friedman-Test](#Friedman-Test)\n    - [Wilcoxon signed-rank Test](#Wilcoxon-Test)\n    - [Chi-Squared Test](#Chi-Squared-Test)\n    - [Bartlett](#Bartlett)\n - [PostHoc](#PostHoc)\n    - [Fisher\u0027s LSD](#Fisher-s-LSD)\n    - [Hays](#Hays)\n    - [Tukey HSD](#Tukey-HSD)\n    - [Dunnetts test](#Dunnetts-test)\n    - [Fisher Hotelling](#Fisher-Hotelling)\n- [Multiple testing](#Multiple-testing)\n    - [Benjamini-Hochberg](#Benjamini-Hochberg)\n    - [Q Value](#Q-Value)\n    - [SAM](#SAM)\n\nFSharp.Stats provides hypothesis tests for different applications.\nA hypothesis test is a statistical test that is used to determine whether there is enough evidence \nin a sample of data to infer that a certain condition is true for the entire population. \nA hypothesis test examines two opposing hypotheses about a population: the null hypothesis and the alternative hypothesis.\n\n## Test Statistics\n\n### T-Test\n\nBy using a t test a difference of means can be evaluated. There are different kinds of t test designs implemented in FSharp.Stats.\n\n1. One sample t test:\n\n  - Is the population mean equal to the value of H0?\n\n  - e.g. \u201CIs my grade different from the distribution mean?\u201D\n  \n2. Two sample t test with equal variances:\n\n  - Prerequisite: equal variances\n  \n  - Is the mean of Population A equal to the mean of Population B?\n  \n  - 2.1 unpaired t test:\n\n    - e.g.: Does the cell size differ between wildtype and mutant?\n\n  - 2.2 paired t test:\n\n    - e.g.: Does the medication influence the blood pressure? Measurement of the same persons before and after medication.\n\n3. Two sample t test with unequal variances\n  \n  - Welch test (unpaired)\n  \n\n\n*Case 1: One sample t test*\n\n*)\n\nopen FSharp.Stats\nopen FSharp.Stats.Testing\n\nlet sampleA = vector [|4.5; 5.1; 4.8; 4.4; 5.0|]\n\n// calculates a one sample t test with a given sample and the fixed value the sample should be compared with\nlet oneSampleTTest = TTest.oneSample sampleA 5.\n\n(*\n    The test returns no significant p value:\n    oneSampleTTest.PValue = 0.1533\n*)\n\n\n(**\n\n*Case 2: Two sample t test with equal variances (unpaired)*\n\nA standard two sample t test expects the samples to be taken from populations with equal standard deviations.\nViolations of this requirement result in an inflated false positive rate.\n\n*)\n\nlet sample1 = vector [|4.9;5.0;6.7;4.8;5.2|]\nlet sample2 = vector [|3.9;4.9;3.8;4.5;4.5|]\n\nlet twoSampleTTest = TTest.twoSample true sample1 sample2\n\n(*\n    The test returns a significant p value:\n    twoSampleTTest.PValue = 0.0396\n*)\n\n\n(**\n\n*Case 3: Two sample t test with equal variances (paired)*\n\n\nA paired t-test is used to compare two population means where you have two samples in\nwhich observations in one sample can be paired with observations in the other sample.\nExamples of where this might occur are:\n\n-   Before-and-after observations on the same subjects (e.g. students\u2019 diagnostic test\n    results before and after a particular module or course).\n-   A comparison of two different methods of measurement or two different treatments\n    where the measurements/treatments are applied to the same subjects (e.g. blood\n    pressure measurements using a stethoscope and a dynamap).\n*)\n\n\nlet sampleP1 = vector [18.;21.;16.;22.;19.;24.;17.;21.;23.;18.;14.;16.;16.;19.;18.;20.;12.;22.;15.;17.;]\nlet sampleP2 = vector [22.;25.;17.;24.;16.;29.;20.;23.;19.;20.;15.;15.;18.;26.;18.;24.;18.;25.;19.;16.;]\n\nlet paired = TTest.twoSamplePaired sampleP1 sampleP2\n\n(*\n    The test returns a significant p value:\n    paired.PValue = 0.00439\n*)\n\n\n(**\n\n*Case 4: Two sample t test with unequal variances (Welch test)*\n\nIf you are unsure about the nature of the underlying population, you may ask if the theoretical population distributions \nyou want to compare do have the same standard deviations. \n\nIf not the welch test can serve as an appropriate hypothesis test for mean differences.\n\n*)\n\n\nlet sampleW1 = vector [0.8;0.9;1.0;1.1;1.2]\nlet sampleW2 = vector [0.8;1.1;1.3;1.5;2.0]\n\nlet welch = TTest.twoSample false sampleW1 sampleW2\n\n(*\n    The test returns a not significant p value:\n    welch.PValue = 0.1725626595\n*)\n\n(**\n### Anova\n*)\n\nlet dataOneWay =\n    [|\n    [|0.28551035; 0.338524035; 0.088313218; 0.205930807; 0.363240102;|];\n    [|0.52173913; 0.763358779; 0.32546786; 0.425305688; 0.378071834; |];\n    [|0.989119683; 1.192718142; 0.788288288; 0.549176236; 0.544588155;|];\n    [|1.26705653; 1.625320787; 1.266108976; 1.154187629; 1.268498943; 1.069518717;|];\n    |]\n\nlet contrastMatrix = \n    [| \n    [|1.0;-1.0;0.0;0.0;|]\n    [|1.0;0.0;-1.0;0.0;|]\n    [|1.0;0.0;0.0;-1.0;|]\n    [|0.0;1.0;-1.0;0.0;|]\n    [|0.0;1.0;0.0;-1.0;|]\n    [|0.0;0.0;1.0;-1.0;|]\n    |]\n\nlet oneWayResult = Anova.oneWayAnova dataOneWay\n\n(*** include-value:oneWayResult ***)\n\n(*\nanovaResult.Factor.Statistic = 27.594\nThe factor statistic indicates how much more variability there is between the the samples \nthan within the samples.\nanovaResult.Factor.PValue = 9.257958872e-07\nA strong significant p value in the factor field indicates that one or more means differ from each other\n*)\n// http://astatsa.com/OneWay_Anova_with_TukeyHSD/\n// https://www.wessa.net/rwasp_Two%20Factor%20ANOVA.wasp\n\nlet data =\n    [\n        (0.28, \u0027A\u0027, \u0027M\u0027);\n        (0.95, \u0027A\u0027, \u0027M\u0027);\n        (0.96, \u0027A\u0027, \u0027M\u0027);\n        (0.97, \u0027A\u0027, \u0027M\u0027);\n        (0.40, \u0027A\u0027, \u0027M\u0027);\n        (0.18, \u0027A\u0027, \u0027M\u0027);\n        (0.12, \u0027A\u0027, \u0027M\u0027);\n        (0.62, \u0027A\u0027, \u0027M\u0027);\n        (1.81, \u0027A\u0027, \u0027F\u0027);\n        (1.51, \u0027A\u0027, \u0027F\u0027);\n        (1.41, \u0027A\u0027, \u0027F\u0027);\n        (1.39, \u0027A\u0027, \u0027F\u0027);\n        (1.20, \u0027A\u0027, \u0027F\u0027);\n        (1.55, \u0027A\u0027, \u0027F\u0027);\n        (1.48, \u0027A\u0027, \u0027F\u0027);\n        (1.25, \u0027A\u0027, \u0027F\u0027);\n        (0.95, \u0027B\u0027, \u0027M\u0027);\n        (1.33, \u0027B\u0027, \u0027M\u0027);\n        (0.92, \u0027B\u0027, \u0027M\u0027);\n        (0.85, \u0027B\u0027, \u0027M\u0027);\n        (1.06, \u0027B\u0027, \u0027M\u0027);\n        (0.69, \u0027B\u0027, \u0027M\u0027);\n        (0.70, \u0027B\u0027, \u0027M\u0027);\n        (0.79, \u0027B\u0027, \u0027M\u0027);\n        (2.93, \u0027B\u0027, \u0027F\u0027);\n        (3.24, \u0027B\u0027, \u0027F\u0027);\n        (3.42, \u0027B\u0027, \u0027F\u0027);\n        (2.79, \u0027B\u0027, \u0027F\u0027);\n        (2.54, \u0027B\u0027, \u0027F\u0027);\n        (3.28, \u0027B\u0027, \u0027F\u0027);\n        (2.80, \u0027B\u0027, \u0027F\u0027);\n        (3.40, \u0027B\u0027, \u0027F\u0027);\n    ]\n    //f1\n    |\u003E Seq.groupBy (fun (v,f1,f2) -\u003E f1)\n    //f2\n    |\u003E Seq.map (fun (k,vls) -\u003E \n        vls \n        |\u003E Seq.groupBy (fun (v,f1,f2) -\u003E f2)\n        |\u003E Seq.map (fun (k,vls\u0027) -\u003E vls\u0027 |\u003E Seq.map (fun (v,f1,f2) -\u003E v) |\u003E Seq.toArray)\n        |\u003E Seq.toArray\n        ) \n    |\u003E Seq.toArray\n    \n\nAnova.twoWayANOVA Anova.TwoWayAnovaModel.Mixed data\n\n// http://statweb.stanford.edu/~susan/courses/s141/exanova.pdf\n// http://scistatcalc.blogspot.de/2013/11/two-factor-anova-test-calculator.html#\n\nlet data\u0027 =\n    [|\n      // super\n        // cold super\n      [|[|4.;5.;6.;5.;|];\n        // warm super\n        [|7.;9.;8.;12.;|];\n        // hot super\n        [|10.;12.;11.;9.; |]|];\n      // best \n        // cold best\n      [|[|6.;6.;4.;4.;|];\n        // warm best\n        [|13.;15.;12.;12.;|];\n        // hot best\n        [|12.;13.;10.;13.;|]|]\n    |]\n\nAnova.twoWayANOVA Anova.TwoWayAnovaModel.Mixed data\u0027\n\n(**\n\n### F-Test\n\nThe F-test is a method to determine if the variances of two samples are homogeneous.\nAlso, ANOVA (analysis of variance) is based on the F-test and is used for the comparison of more than two samples.\nKnowing if your variances are equal (H\u003Csub\u003E0\u003C/sub\u003E is true) helps to decide which test should be performed next.\nTo determine if your variances are in fact equal you can perform a F-test. \n\nPrerequisites: \n\n  -   population distributions are normally distributed \n\n  -   samples are independent\n\nPossible further tests:\n\n  -   two sample t-test with equal variances\n\n  -   two sample t-test with unequal variances (Welch-test)\n\n  -   ...\n\nNote that there is no information about the direction of variance difference (e.g. Zimmermann 2004).\nIn this implemented test the larger variance is always the numerator, therefore the comparison to F\u003Csub\u003Edf1,df2,1-(alpha/2)\u003C/sub\u003E is used for a two sided test. \n\n_Important note: The effectiveness of a preliminary test of variances is discussed. \nThe F-test is extremely sensitive to normality-violations, and even if the samples follow a normal distribution, it often does not detect situations where a t-test should be avoided._ \n\nReferences:\n\n  - J\u00FCrgen Bortz \u0026 Christof Schuster, Statistik f\u00FCr Human- und Sozialwissenschaftler (2010) Chapter 8.6\n\n  - Markowski, Conditions for the Effectiveness of a Preliminary Test of Variance (1990)\n\n  - Shlomo S. Sawilowsky, The Probable Difference Between Two Means When \u03C3\u003Csub\u003E1\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E\u2260\u03C3\u003Csub\u003E2\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E (2002)\n\n  - Ronald Ley, F curves have two tails but the F test is a one-tailed two-tailed test (1979) \u002B Reviewer comments\n\n  - Donald W. Zimmermann, A note on preliminary tests of equality of variances (2004)\n  \n*F-Test from data:*\n*)\n\nlet sampleFA = vector [|5.0; 6.0; 5.8; 5.7|] \nlet sampleFB = vector [|3.5; 3.7; 4.0; 3.3; 3.6|]\n\n// comparison of sample variances \nlet fTestFromData = FTest.testVariances sampleFA sampleFB\n(* \n    { Statistic = 2.823383085\n    DegreesOfFreedom1 = 3.0\n    DegreesOfFreedom2 = 4.0\n    PValue = 0.1708599931 }\n    Using a significance level of 0.05 the sample variances do differ significantly.\n\n*F-Test from given parameters:*\n*)\n\n// sample properties are given as (variance,degree of freedom) \nlet sampleF1 = (0.1, 15.)\nlet sampleF2 = (0.05, 7.)\n\n// comparison of sample variances \nlet fTestFromParameters = FTest.testVariancesFromVarAndDof sampleF1 sampleF2\n\n(***include-value:fTestFromParameters***)\n\n(**\nUsing a significance level of 0.05 the sample variances do differ significantly.\n\n### H-Test\n\nThe H-test is also known as Kruskal-Wallis one-way analysis-of-variance-by-ranks and is the non-parametric equivalent of one-way ANOVA. \nIt is a non-parametric test for comparing the means of more than two independent samples (equal or different sample size), and therefore is an extension of Wilcoxon-Mann-Whitney two sample test.\nTesting with H test gives information whether the samples are from the same distribution.\n\nA benefit of the H-test is that it does not require normal distribution of the samples.\nThe downside is that there is no information which samples are different from each other, or how many differences occur. For further investigation a post hoc test is recommended. \n\nThe distribution of the H-test statistic is approximated by chi-square distribution with degrees of freedom = sample count - 1. \n\nThe implemented H-test is testing for duplicate values in the data. \nDuplicates lead to ties in the ranking, and are corrected by using a correction factor. \n\nPrerequisites:\n\n  - random and independent samples\n\n  - observations are from populations with same shape of distribution\n\n  - nominal scale, ordinal scale, ratio scale or interval scale data\n\nReferences:\n\n  - E. Ostertagov\u00E1,  Methodology and Application of the Kruskal-Wallis Test (2014)\n\n  - Y. Chan, RP Walmsley, Learning and understanding the Kruskal-Wallis one-way analysis-of-variance-by-ranks test for differences among three or more independent groups (1997)\n\n*)\n\nlet groupA = [44.;44.;54.;32.;21.;28.]\nlet groupB = [70.;77.;48.;64.;71.;75.]\nlet groupC = [80.;76.;34.;80.;73.;80.] \nlet samples = [groupA;groupB;groupC]\n\n// calculation of the H-test \nlet hResult = HTest.createHTest samples \n\n(*** include-value:hResult ***)\n\n(**\n_PValueRight is significant at a alpha level of 0.05_\n\nA suitable post hoc test for H-tests is Dunn\u0027s test.\n*)\n\n(** \n\n### Friedman-Test\n\nThe Friedman-Test is a nonparametric method to detect differences in more than two related samples.\nIt\u0027s used for dependent samples, e.g. with measurements of different treatments or at different timepoints. \nThe test can be performed even on small sample sizes.\nOne benefit of the implemented version in FSharp.Stats is that a correction factor is applied if there are any ties in the measurements. \n\nRequirements:\n\n   -   sample sizes *must* be identical\n   -   repeated measurements \n   -   no need for normal distribution of the samples\n   -   samples must be at least ordinal scaled\n\nThe idea of the test is to rank each value in every ID (as seen below).\nThe test statistic approximately follows a chi-squared distribution (dof = k-1). \nThe recommended Post-Hoc-Test is Wilcoxon-signed-rank-test or a Bonferroni-correction. \nExample taken from Universitaet Zuerich - Methodenberatung Friedman-Test ( https://www.methodenberatung.uzh.ch/de/datenanalyse_spss/unterschiede/zentral/friedman.html ) with a modification for 3 ties in one ID. \n\nReferences: \n\n  - Viv Bewick, Liz Cheek \u0026 Jonathan Ball, Statistics review 10: Further nonparametric methods (2004)\n  \n  - Salvador Garc\u00EDa,  Alberto Fern\u00E1ndez, Juli\u00E1n Luengo, Francisco Herrera, Advanced nonparametric tests for multiple comparisons in the design of experiments in computational intelligence and data mining: Experimental analysis of power (2010)\n\n\n\u003Cpre\u003E\n\nID   |  pre   | month 1| month 2| month 3| month 4\n1       275     273      288      273      273            \n2       292     283      284      285      329     \n3       281     274      298      270      252           \n4       284     275      271      272      258           \n5       285     294      307      278      275\n6       283     279      301      276      279\n7       290     265      298      291      295\n8       294     277      295      290      271\n9       300     304      293      279      271\n10      284     297      284      292      284\n\n\n\u003C/pre\u003E\n\nRanking the results - average if values appear multiple times in one ID \n\n\n\u003Cpre\u003E\nID   |  pre   | month 1| month 2| month 3| month 4\n1       4       2        5        2        2      \n2       4       1        2        3        5\n3       4       3        5        2        1          \n4       5       4        2        3        1          \n5       3       4        5        2        1\n6       4       2.5      5        1        2.5\n7       2       1        5        3        4\n8       4       2        5        3        1\n9       4       5        3        2        1\n10      2       5        2        4        2     \nrank-sums\n        36      29.5     39       25       20.5\n\u003C/pre\u003E\n\n*)\n// The data have to be entered in this format: \n\nlet A = [|275.;273.;288.;273.;273.|]\nlet B = [|292.;283.;284.;285.;329.|]\nlet C = [|281.;274.;298.;270.;252.|]\nlet D = [|284.;275.;271.;272.;258.|]\nlet E = [|285.;294.;307.;278.;275.|]\nlet F = [|283.;279.;301.;276.;279.|]\nlet G = [|290.;265.;298.;291.;295.|]\nlet H = [|294.;277.;295.;290.;271.|]\nlet I = [|300.;304.;293.;279.;271.|]\nlet J = [|284.;297.;284.;292.;284.|]\n\n// add everything in one sequence\nlet samplesMany =  [|A;B;C;D;E;F;G;H;I;J|]\n\n// create the test \nlet friedmanResult = FriedmanTest.createFriedmanTest samplesMany \n\n// results \n(*** include-value:friedmanResult ***)\n\n\n(**\n### Wilcoxon-Test\n\nThe Wilcoxon signed-rank test is a non-parametric alternative to the paired t-test. The test is used to determine if two samples stem from a similar distributed population.\nIt calculates the differences between sets of pairs and ranks them to analyze if they are statistically significantly different. If at least one of the assumptions for the t-test is not given the Wilcoxon signed-rank\ntest can be used. This implemented test uses a normal distribution approximation (validated against SciPy with mode=\u0022approx\u0022). It also includes automatic tie correction as well as optional continuity correction. \n\nCases where Wilcoxon signed-rank test can be used:\n\n  - Compare 2 dependent samples\n  - Repeated measurements on single samples\n  - Matched samples\n\nAssumptions for the test:\n\n  - Data are paired and from the same population\n  - Each pair is chosen randomly and independently \n  - At least interval scaled data\n\n*) \nlet before = [78.;24.;64.;45.;64.;52.;30.;50.;64.;50.;78.;22.;84.;40.;90.;72.]\nlet after  = [78.;24.;62.;48.;68.;56.;25.;44.;56.;40.;68.;36.;68.;20.;58.;32.]\n\n// create the test\n// Results with continuity correction: \nlet wilcoxonResult = WilcoxonTest.createWilcoxonTest before after true \n// results \n(*** include-value:wilcoxonResult ***)\n\n// Results without continuity correction: \nlet wilcoxonResult2 = WilcoxonTest.createWilcoxonTest before after false \n// results \n(*** include-value:wilcoxonResult2 ***)\n\n//alternatively you can use just the differences \nlet differences = [0.;0.;2.;-3.;-4.;-4.;5.;6.;8.;10.;10.;-14.;16.;20.;32.;40.]\n// results from differences\nlet wilcoxonResult3 = WilcoxonTest.createWilcoxonTestFromDifferences differences true \n// results \n(*** include-value:wilcoxonResult3 ***)\n\n(** \nReferences: \n\n  - Concepts \u0026 Applications of Inferential Statistics - VassarStats\n  - [Wilcoxon Test](https://www.investopedia.com/terms/w/wilcoxon-test.asp ), Adam Hayes, 13 April 2020, accessed 20.09.2021 \n\n  *)\n\n\n(**\n### Chi-Squared Test\n\nWIP\n\n### Bartlett\n\nWIP\n\n## PostHoc\n\nANOVA provides the user with a global statement if samples differ from each other. It does not provide detailed information regarding\ndifferences of the single samples.\n\nIf the H\u003Csub\u003E0\u003C/sub\u003E hypothesis is neglected (so significant differences are assumed), a post hoc test (multiple comparison test) allows the pairwise comparison of the \nindividual groups.\n\nReference: What is the proper way to apply the multiple comparison test?, Sangseok Lee and Dong Kyu Lee, 2018\n\n### Fisher\u0027s LSD\n\nThe simplest method is Fisher\u0027s least significant difference (Fisher\u0027s LSD). It calculates Student\u0027s t tests for all pairwise comparisons. But instead of \nestimating the variance for each sample separately it takes all groups into account. Violations of the homogeneity of variances reduce the test power.\nSince no correction for multiple comparisons is performed, the resulting p values must be corrected (for example with Benjamini-Hochberg method).\n\n_Important: Fishers LSD is dependent to a significant ANOVA (ANOVA-protected post-hoc test)._\n\n*)\nopen PostHoc\n\nlet lsd = Testing.PostHoc.fishersLSD contrastMatrix dataOneWay\n\n// For multi comparison correction, the p values are adjusted by the Benjamini-Hochberg approach\nlet (index,pValue,pValueAdj) = \n    lsd\n    |\u003E Testing.MultipleTesting.benjaminiHochbergFDRBy (fun x -\u003E x,x.Significance)\n    |\u003E List.sortBy (fun (x,_) -\u003E x.Index)\n    |\u003E List.map (fun (x,pValAdj) -\u003E x.Index, x.Significance, pValAdj)\n    |\u003E List.unzip3\n\nlet lsdCorrected =\n    let header = [\u0022\u003Cb\u003EContrast index\u003C/b\u003E\u0022;\u0022\u003Cb\u003Ep Value\u003C/b\u003E\u0022;\u0022\u003Cb\u003Ep Value adj\u003C/b\u003E\u0022]\n    let rows = \n        [\n            [sprintf \u0022%i\u0022 index.[0];sprintf \u0022%.6f\u0022 pValue.[0];sprintf \u0022%.6f\u0022 pValueAdj.[0];]    \n            [sprintf \u0022%i\u0022 index.[1];sprintf \u0022%.6f\u0022 pValue.[1];sprintf \u0022%.6f\u0022 pValueAdj.[1];]    \n            [sprintf \u0022%i\u0022 index.[2];sprintf \u0022%.6f\u0022 pValue.[2];sprintf \u0022%.6f\u0022 pValueAdj.[2];]       \n            [sprintf \u0022%i\u0022 index.[3];sprintf \u0022%.6f\u0022 pValue.[3];sprintf \u0022%.6f\u0022 pValueAdj.[3];]       \n            [sprintf \u0022%i\u0022 index.[4];sprintf \u0022%.6f\u0022 pValue.[4];sprintf \u0022%.6f\u0022 pValueAdj.[4];]    \n            [sprintf \u0022%i\u0022 index.[5];sprintf \u0022%.6f\u0022 pValue.[5];sprintf \u0022%.6f\u0022 pValueAdj.[5];]\n        ]\n    \n    Chart.Table(\n        header, \n        rows,\n        HeaderFillColor = Color.fromHex \u0022#45546a\u0022,\n        CellsFillColor = Color.fromColors [Color.fromHex \u0022#deebf7\u0022;Color.fromString \u0022lightgrey\u0022]\n        )\n\n(*** condition: ipynb ***)\n#if IPYNB\nlsdCorrected\n#endif // IPYNB\n\n(***hide***)\nlsdCorrected |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n### Hays\n*)\n\nTesting.PostHoc.hays contrastMatrix dataOneWay \n\n\n//let m1 = Seq.mean dataOneWay.[0]\n//let m2 = Seq.mean dataOneWay.[1]\n\n//let s1 = Seq.sum dataOneWay.[0]\n//let s2 = Seq.sum dataOneWay.[1]\n//let s3 = Seq.sum dataOneWay.[2]\n\n\n//let d = (m1-m2)**2.0\n//d / (3.926003843 * (1./5. \u002B 1./5.))\n\n// http://www.statisticslectures.com/topics/posthoconewayanova/\nlet dmg = \n    [|\n     [|9.;8.;7.;8.;8.;9.;8.;|];\n     [|7.;6.;6.;7.;8.;7.;6.;|];\n     [|4.;3.;2.;3.;4.;3.;2.;|] ; \n    |]\n\nlet contrastMatrixDmg = \n    [| \n     [|1.0;-1.0;0.0;|] ; \n     [|1.0;0.0;-1.0;|] ; \n     [|0.0;1.0;-1.0;|]   \n    |]\n\n\nTesting.PostHoc.hays contrastMatrixDmg dmg \n\nAnova.oneWayAnova dmg\n\n(**\n### Tukey HSD \n\nTukeys honestly significant difference (HSD) can be used to inspect a significant ANOVA result for underlying causes.\n\n_Important note: Various discussions question the application of Tukeys HSD only to significant ANOVA results (Anova-protected post-hoc test), since Tukeys HSD already controls for multiple testing._\n_Inform yourself prior to using an post hoc test appropriate to your experimental design. Fishers LSD however is dependent to a significant ANOVA._\n\nUsing this post hoc test you can determine which of the means differ significantly from each other.\nIn the classis Tukeys HSD approach, the population variances are pooled for a more robust estimation (especially with small sample sizes). If the population variances\ndiffer, Tukeys HSD is not appropriate. \n\nThe implemented Tukey-Kramer-Method can be applied on unequal sample sizes and estimates the variance based on the means to compare.\nThe Tukey-Kramer method can be used as stand-alone method for comparing multiple means.\n\nA comparison of ANOVA and Tukey-Kramer-HSD with simulations for the robustness of normality-violations of the data can be found in:\n\n_Robustness of the ANOVA and Tukey-Kramer Statistical Tests, Wade C. Driscoll, Computers ind. Engng Vol 31, No. 1/2, pp. 265 - 268, 1996_\n\n\nMultiple-to-one comparisons can alternatively performed with Dunnet\u0027s test, which was designed for performing k-1 tests, while Tukeys\nHSD performs k((k-1)/2) tests.\n\nTask: It should be tested if one or more means of samples taken from different mutants differ from each other.\n\n*)\n\n// Example values from: https://brownmath.com/stat/anova1.htm\nlet hsdExample = \n    [|\n        [|64.; 72.; 68.; 77.; 56.; 95.;|] // sample of mutant/drug/factor 1 \n        [|78.; 91.; 97.; 82.; 85.; 77.;|] // sample of mutant/drug/factor 2 \n        [|75.; 93.; 78.; 71.; 63.; 76.;|] // sample of mutant/drug/factor 3 \n        [|55.; 66.; 49.; 64.; 70.; 68.;|] // sample of mutant/drug/factor 4    \n    |]\n\nlet anovaResult = Anova.oneWayAnova hsdExample\n\n(*\n    anovaResult.Factor.Statistic = 5.41\n    The factor statistic indicates how much more variability there is between the the samples \n    than within the samples.\n    anovaResult.Factor.PValue = 0.0069\n    A significant p value in the factor field indicates that one or more means differ from each other\n*)\n\n(**\nFor tukey HSD calculations you need a contrast matrix, that defines the groups you want to compare for \nmore detailed information.\n\nEvery contrast has as many entries as there are groups (samples). The groups, that should be compared are labelled with -1 or 1 respectively.\n\n*)\n\n// In this contrast matrix every possible scenario is covered.\nlet contrastMatrixHSD = \n    [| \n    [|1.;-1.; 0.; 0.;|] // sample 1 is compared to sample 2\n    [|1.; 0.;-1.; 0.;|] // sample 1 is compared to sample 3\n    [|1.; 0.; 0.;-1.;|] \n    [|0.; 1.;-1.; 0.;|]\n    [|0.; 1.; 0.;-1.;|]\n    [|0.; 0.; 1.;-1.;|] // sample 3 is compared to sample 4\n    |]\n\nlet hsdResult = tukeyHSD contrastMatrixHSD hsdExample \n\n(*** hide ***)\nlet tukeySignificance = \n    hsdResult\n    |\u003E Array.map (fun x -\u003E \n        sprintf \u0022%5i\\t%6f\\t%f\\t%f\u0022 x.Index x.L x.Statistic x.Significance)\n    |\u003E fun x -\u003E \n        Array.append [|\u0022index\\tmeanDiff\\tqStatistic\\tpValue\u0022|] x\n        |\u003E String.concat \u0022\\n\u0022\n\n(*** include-value:tukeySignificance ***)\n\n(*\n    For every generated contrast an output p value is calculated.\n    e.g.\n    hsdResult.[0].Significance = 0.0364\n    hsdResult.[1].Significance = 0.4983 \n    hsdResult.[2].Significance = 0.1001\n    hsdResult.[3].Significance = 0.1364\n    hsdResult.[4].Significance = 0.0008\n    hsdResult.[5].Significance = 0.0255\n*)\n\n//TTest.twoSample true (vector hsdExample.[0]) (vector hsdExample.[1])\n//TTest.twoSample true (vector hsdExample.[0]) (vector hsdExample.[2])\n//TTest.twoSample true (vector hsdExample.[0]) (vector hsdExample.[3])\n//TTest.twoSample true (vector hsdExample.[1]) (vector hsdExample.[2])\n//TTest.twoSample true (vector hsdExample.[1]) (vector hsdExample.[3])\n//TTest.twoSample true (vector hsdExample.[2]) (vector hsdExample.[3])\n\n(**\n### Dunnett\u0027s (t) test\n\nWhen there is one control group which should be compared with all treatment-groups, Tukeys HSD would lead \nto an explosion of comparisons if the number of conditions increases. If just the comparison of each \ntreatment to an control is required you can use Dunnett\u0027s test. It is a multiple-to-one post hoc test for **homoscedastic** samples with **equal variance**\nthat has a higher power than Tukey\u0027s HSD since fewer comparisons have to be performed, and therefore the Confidence \nlimits are wider than necessary. \u0022ANOVA is not a necessary part of the multiple comparisons procedure\u0022 (Dunnett, 1964). \n\n_Note: Dunnett\u0027s test is designed for equal group sizes and will only provide approximate values when group sizes differ (Dunnett 1955)._\n\nReference:\n\n  - A Multiple Comparison Procedure for Comparing Several Treatments with a Control; CW Dunnett; Journal of the American Statistical Association; Dec. 1955 \n\n  - New Tables for Multiple Comparisons with a Control; CW Dunnett; Biometrics; Sep. 1964\n\n*)\n\nlet dunnetExample = \n    [|\n        [|1.84;2.49;1.50;2.42;|]\n        [|2.43;1.85;2.42;2.73;|]\n        [|3.95;3.67;3.23;2.31;|]\n        [|3.21;3.20;2.32;3.30;|]\n        //only gives aproximate results when group sizes are unequal\n        [|3.21;3.13;2.32;3.30;3.20;2.42;|]\n    |]\n\n//first sample serves as control\nlet dunnetContrastMatrix = \n    [|                \n        [|-1.;1.;0.;0.;0.|]\n        [|-1.;0.;1.;0.;0.|]\n        [|-1.;0.;0.;1.;0.|]\n        [|-1.;0.;0.;0.;1.|]\n    |]\n\nlet dunnettResult = \n    PostHoc.dunnetts dunnetContrastMatrix dunnetExample Tables.dunnettsTwoSided095\n\n(*** include-value:dunnettResult ***)\n\n\n(**\n\n\n\n### Fisher Hotelling\n\n*)\n\nlet d1 = [159.;179.;100.;45.;384.;230.;100.;320.;80.;220.;320.;210.;]\nlet d2 = [14.4;15.2;11.3;2.5;22.7;14.9;1.41;15.81;4.19;15.39;17.25;9.52; ]\n    \nTesting.FisherHotelling.test d1 d2\n\n(**\n\n## Multiple testing\n\nWhen conducting multiple hypothesis test the \u0026alpha;-error accumulates. This is because the p value just describes the probability for \na false positive for one single test. If you perform 10 t-test at an \u0026alpha; level of 0.05, the probability of getting a significant result by chance\nis 40.1% [ (1-(1-\u0026alpha;)\u003Csup\u003Ek\u003C/sup\u003E ].\n\n*)\n\nlet aErrorAcc = \n    [1. .. 100.]\n    |\u003E List.map (fun x -\u003E x,(1. - 0.95**x))\n    |\u003E Chart.Line\n    |\u003E Chart.withXAxisStyle ( \u0022number of tests (k)\u0022 )\n    |\u003E Chart.withYAxisStyle ( \u0022probability of at least one false positive test\u0022)\n(*** condition: ipynb ***)\n#if IPYNB\naErrorAcc\n#endif // IPYNB\n\n(***hide***)\naErrorAcc |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\nTo compensate this inflation, several multiple testing corrections were published. \nThe most conservative method is the Bonferroni correction, where the used \u0026alpha; level is divided by the number of performed tests.\n\nA modern correction approach is the Benjamini-Hochberg method also known as FDR (false discovery rate).\n\n### Benjamini-Hochberg \n\n*)\nlet pValues =\n    [|\n        0.000002;0.000048;0.000096;0.000096;0.000351;0.000368;0.000368;0.000371;0.000383;0.000383;0.000705;0.000705;0.000705;0.000705;0.000739;0.00101;0.001234;0.001509;0.001509;0.001509;0.001509;0.001686;0.001686;0.001964;0.001964;0.001964;0.001964;0.001964;0.001964;0.001964;0.002057;0.002295;0.002662;0.002662;\n        0.002662;0.002662;0.002662;0.002662;0.002662;0.002672;0.002714;0.002922;0.00348;0.004066;0.004176;0.004176;0.004562;0.004562;0.005848;0.005848;0.006277;0.007024;0.007614;0.007614;0.007614;0.007614;0.007614;0.00979;0.01049;0.01049;0.012498;0.012498;0.012498;0.017908;0.018822;0.019003;0.019003;0.019003;\n        0.020234;0.02038;0.021317;0.023282;0.026069;0.026773;0.027255;0.027255;0.027255;0.027255;0.0274;0.030338;0.03128;0.034516;0.034516;0.037267;0.037267;0.040359;0.042706;0.043506;0.04513;0.04513;0.047135;0.049261;0.049261;0.049261;0.049261;0.049333;0.050457;0.052112;0.052476;0.060504;0.063031;0.063031;\n        0.063031;0.063031;0.065316;0.065316;0.066751;0.067688;0.069676;0.073043;0.078139;0.078594;0.078594;0.095867;0.098913;0.102606;0.102606;0.102606;0.107444;0.116213;0.126098;0.135099;0.135099;0.159786;0.179654;0.199372;0.203542;0.203542;0.211249;0.211968;0.226611;0.228287;0.238719;0.247204;0.263942;\n        0.263942;0.289175;0.306064;0.330191;0.330191;0.340904;0.343869;0.350009;0.355614;0.355614;0.359354;0.386018;0.386018;0.434486;0.438791;0.464694;0.471015;0.4715;0.479307;0.490157;0.505652;0.539465;0.539465;0.558338;0.558338;0.601991;0.61052;0.634365;0.637835;0.677506;0.678222;0.727881;0.748533;\n        0.753718;0.758701;0.810979;0.838771;0.854833;0.872159;0.878727;0.890621;0.916361;0.954779;0.98181;0.985365;0.986261;0.98958;0.99861;0.99861;0.999602;0.999895\n    |] |\u003E Array.sort\n\nlet pValsAdj =\n    MultipleTesting.benjaminiHochbergFDRBy (fun x -\u003E \u0022\u0022,x) pValues\n    |\u003E List.rev\n\nlet bhValues =\n    [\n        Chart.Line(pValues,pValues,Name=\u0022diagonal\u0022)\n        Chart.Line(pValsAdj,Name=\u0022adj\u0022)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withXAxisStyle \u0022pValue\u0022 \n    |\u003E Chart.withYAxisStyle \u0022BH corrected pValue\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nbhValues\n#endif // IPYNB\n\n(***hide***)\nbhValues |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(**\n\n### Q Value\n\nSee q value blog post at [fslabs](https://fslab.org/).\n\n$m = \\#tests$\n\n####qValues\n\n$qvalue_p = \\frac{\\#(false positives)}{\\#positives}$\n\n####qValues robust\n\nCorrects for small p values especially if the number of tests is low or the population distributions do not follow a normal distribution.  The correction takes into account the probability of a false positive being reported in the first place.\n\n$qvalueRobust_p = \\frac{\\#(false positives)}{\\#positives * (1 - (1 - p)**m)}$\n\n\n*)\nlet pi0 = \n    pValues\n    |\u003E MultipleTesting.Qvalues.pi0Bootstrap \n\npi0\n(***include-it-raw***)\n\nlet qValues = \n    pValues\n    |\u003E MultipleTesting.Qvalues.ofPValues pi0\n\nlet qValuesRob =\n    pValues\n    |\u003E MultipleTesting.Qvalues.ofPValuesRobust pi0 \n\nlet qChart =    \n    [\n        Chart.Line(pValues,qValues,Name=\u0022qValue\u0022)\n        Chart.Line([(0.,pi0);(1.,pi0)],Name=\u0022pi\u003Csub\u003E0\u003C/sub\u003E\u0022,LineDash=StyleParam.DrawingStyle.Dash)\n        Chart.Line(pValues,qValuesRob,Name=\u0022qValueRobust\u0022)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022\u0022 \u0022\u0022\n    |\u003E Chart.withXAxisStyle (\u0022p value\u0022,MinMax=(0.,1.))\n    |\u003E Chart.withYAxisStyle (\u0022q Values\u0022,MinMax=(0.,1.))\n\n\nlet qHisto =\n    [\n        Chart.Histogram(pValues,XBins=TraceObjects.Bins.init(0.,1.,0.05),Name=\u0022pValues\u0022,HistNorm=HistNorm.ProbabilityDensity)\n        Chart.Line([(0.,pi0);(1.,pi0)],Name=\u0022pi\u003Csub\u003E0\u003C/sub\u003E\u0022,LineDash=StyleParam.DrawingStyle.Dash)\n    ]\n    |\u003E Chart.combine\n    |\u003E Chart.withAxisTitles \u0022p value\u0022 \u0022density\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\nqChart\n#endif // IPYNB\n\n(***hide***)\nqChart |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n(*** condition: ipynb ***)\n#if IPYNB\nqHisto\n#endif // IPYNB\n\n(***hide***)\nqHisto |\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n\n\n(**\n###SAM\n\nSAM (Significance Analysis of Microarrays) is a method developed to overcome multiple testing problems. It was proposed, but not restricted for, microarray analysis. \nIt serves as a blue print for a variety of permutation test.\nTherefore, high throughput experiments can be analysed using a combined permutation-bootstrap-method. For more in depth information see the [SAM BlogPost](https://csbiology.github.io/CSBlog/posts/7_SAM.html).\n*)\n\n(** \nData: \nTo use SAM, expression or intensity data need to be in the format (string*float[])[]), with string being the name and float array being the replicates. One way of achieving this is the following data preparation:\n\u003Ccenter\u003E\u003Cimg style=\u0022max-width:40%\u0022 src=\u0022../img/DataStructureSAM.jpeg\u0022\u003E\u003C/img\u003E\u003C/center\u003E\n*)\n(**\nColumns are samples, here 1 and 2, representing control and factor group. Rows are transcript counts (here indicated with gene identifier).\nThe next step is to read in the data, e.g. via deedle, and to create a dataframe. The rows are indexed by the sample name and the rowkeys are extracted.\n*)\n\nlet df:Frame\u003Cstring,string\u003E = \n    Frame.ReadCsv(@\u0022data/TestDataSAM.txt\u0022,hasHeaders=true,separators = \u0022\\t\u0022)\n    // here, the name of A1 is needed. \n    |\u003E Frame.indexRows \u0022gene\u0022\n\n// get Rowkeys as Array\nlet rowheader :string[] = df.RowKeys |\u003E Seq.toArray\n\n// to separate control and factor sets (sample1 and sample2, respectively), \n// the datasets are chunked by the number of replicates (here: triplicates -\u003E chunkBySize 3).\nlet (preData1,preData2) :float[][] * float [][]=  \n    df\n    |\u003E Frame.getRows\n    |\u003E Series.values\n    |\u003E Seq.map (Series.values \u003E\u003E Seq.toArray \u003E\u003E Array.chunkBySize 3 \u003E\u003E fun x -\u003E x.[0],x.[1])\n    |\u003E Array.ofSeq\n    |\u003E Array.unzip\n\n// After chunking, the datasets are separated by factor and the rowkey is added to the data for later identification.\nlet data1 = Array.zip rowheader preData1 \nlet data2 = Array.zip  rowheader preData2 \n(**\nOptional: Data can be normalised by median centering using the following function. Thereby the median of each column is determined \nand subtracted it from each value in the respective column. \nSince samples do not influence each other it makes no difference if you center each column individually or center the whole data matrix prior to segragation.\n\nWith data1 and data2, or corrected1 and corrected2, SAM can be performed.\n*)\nopen SAM\nlet corrected1 = \n    let medCorrect = \n        medianCentering data1 \n    Array.zip rowheader medCorrect\n\nlet corrected2 = \n    let medCorrect = \n        medianCentering data2\n    Array.zip rowheader medCorrect\n \nlet res = FSharp.Stats.Testing.SAM.twoClassUnpaired 100 0.05 data1 data2 (System.Random(1234))\n\n(**\nBesides the data itself SAM requires the definition of some parameters:\n\n  - _number of permutations_: It seems to be sufficient to use ~ 100 permutations (also default in samR).\n  - _desired FDR_: While FDRs are given for each BioItem it is recommended to set a global FDR for the generation of the SAM plot.\n  - _random seed_: The seed is used for randomization of the permutations (System.Random()), or can be fixed to achieve the same results multiple times (e.g. System.Random(1234)).\n\n\nThe \u0060SAMResult\u0060 type summarizes all information required to construct the typical SAM plot: \n\n  - _s0_: fudge factor as described by Tusher et al. (2001)\n  - _pi0_: {pi0 \u2208 R \u2223 0 \u003C x \u003C 1} estimated for the determination of qvalues \n  - _delta_: distance between the bisector and the parallel margins that separate nonsignificant from significant results\n  - _upper/lower cut_: y-axis intercepts that define significance-thresholds for the observed statistics\n  - _positive/negative/non-significant bioitems_\n  - _False Discovery Rate (FDR)_\n  - _median number of false positives_\n\nThe following snippet helps to generate the typical SAM plot.\n*)\n\nlet SAMChart = \n\n    let observed = [| res.NegSigBioitem; res.NonSigBioitem; res.PosSigBioitem|] |\u003E Array.concat \n    let obs = observed |\u003E Array.map (fun x -\u003E x.Statistics) \n    let expected = res.AveragePermutations |\u003E Array.map (fun x -\u003E x.Statistics)\n    let minDi = Seq.min obs\n    let maxDi = Seq.max obs\n\n\n    // positive significant changes \n    let posExpected = expected.[res.NegSigBioitem.Length \u002B res.NonSigBioitem.Length .. res.NegSigBioitem.Length \u002B res.NonSigBioitem.Length \u002B res.PosSigBioitem.Length-1]\n    let posChart = \n        Chart.Point(posExpected,res.PosSigBioitem |\u003E Array.map (fun x -\u003E x.Statistics))\n        |\u003E Chart.withLineStyle(Color=Color.fromKeyword Green)\n        |\u003E Chart.withTraceInfo(\u0022positive change\u0022,Visible = Visible.True )\n\n\n    // no significant changes\n    let nonex = expected.[res.NegSigBioitem.Length .. res.NegSigBioitem.Length \u002B res.NonSigBioitem.Length-1]\n    let nonchart = \n        Chart.Point(nonex,res.NonSigBioitem |\u003E Array.map (fun x -\u003E x.Statistics))\n        |\u003E Chart.withLineStyle(Color=Color.fromKeyword Gray)\n        |\u003E Chart.withTraceInfo(\u0022no change\u0022,Visible = Visible.True)\n\n    // negative significant changes \n    let negex = expected.[0 .. res.NegSigBioitem.Length-1]\n    let negchart = \n        Chart.Point(negex,res.NegSigBioitem |\u003E Array.map (fun x -\u003E x.Statistics))\n        |\u003E Chart.withLineStyle(Color=Color.fromKeyword Red)\n        |\u003E Chart.withTraceInfo(\u0022negative change\u0022,Visible = Visible.True)\n\n    let samValues = \n        [\n            negchart\n            nonchart\n            posChart\n        ]\n        |\u003E Chart.combine\n        \n    let chartConfig =\n        let svdConfig =\n            ConfigObjects.ToImageButtonOptions.init(\n                Format = StyleParam.ImageFormat.SVG)\n        Config.init (\n            ToImageButtonOptions = svdConfig,\n            ModeBarButtonsToAdd=[ModeBarButton.HoverCompareCartesian]\n            \n        )\n\n    let cutLineUp = [(minDi \u002B res.Delta) ; (maxDi \u002B res.Delta)]\n    let cutsUp = \n        Chart.Line(cutLineUp,[minDi;maxDi])\n        |\u003E Chart.withLineStyle(Color=Color.fromKeyword Purple,Dash = StyleParam.DrawingStyle.Dash, Width = 0.5)\n        |\u003E Chart.withTraceInfo(\u0022delta\u0022,Visible = Visible.True)\n    let cutLineLow = [(minDi - res.Delta) ; (maxDi - res.Delta)]\n    let cutsLow = \n        Chart.Line(cutLineLow,[minDi;maxDi])\n        |\u003E Chart.withLineStyle(Color=Color.fromKeyword Purple,Dash = StyleParam.DrawingStyle.Dash, Width = 0.5)\n        |\u003E Chart.withTraceInfo(\u0022delta\u0022,Visible = Visible.True)\n    let linechart = \n        Chart.Line([minDi;maxDi], [minDi;maxDi])\n        |\u003E Chart.withTraceInfo(\u0022bisecting angle\u0022,Visible = Visible.True)\n        |\u003E Chart.withLineStyle(Color=Color.fromKeyword Black, Width = 1)\n\n    let uppercut = \n        let xAnchorUppercut = [minDi .. 5. .. maxDi]\n        Chart.Line (xAnchorUppercut, List.init xAnchorUppercut.Length (fun x -\u003E res.UpperCut))\n\n        |\u003E Chart.withTraceInfo(\u0022upper cut\u0022,Visible = Visible.True)\n        |\u003E Chart.withLineStyle(Color=Color.fromKeyword Black,Dash = StyleParam.DrawingStyle.Dash, Width = 0.3)\n\n    let lowercut = \n        Chart.Line([minDi;maxDi],[res.LowerCut;res.LowerCut])\n        |\u003E Chart.withTraceInfo(\u0022lower cut\u0022,Visible = Visible.True)\n        |\u003E Chart.withLineStyle(Color=Color.fromKeyword Black,Dash = StyleParam.DrawingStyle.Dash,Width = 0.3)\n        //|\u003E Chart.withXAxisStyle(MinMax = (-15,20))\n        \n        |\u003E Chart.withTraceInfo(\u0022lower cut\u0022,Visible = Visible.True)\n    let plot = \n        [linechart;\n        samValues;\n        cutsUp;\n        cutsLow;\n        uppercut;\n        lowercut]\n        |\u003E Chart.combine\n        |\u003E Chart.withTitle(title = \u0022SAM results\u0022)\n        |\u003E Chart.withXAxisStyle(\u0022expected Score\u0022)\n        |\u003E Chart.withYAxisStyle (\u0022observed Score\u0022)\n        |\u003E Chart.withConfig(chartConfig)\n        |\u003E Chart.withTemplate(ChartTemplates.lightMirrored)\n    plot \n\n\n\n\n(*** condition: ipynb ***)\n#if IPYNB\nSAMChart\n#endif // IPYNB\n\n(***hide***)\nSystem.IO.File.ReadAllText (__SOURCE_DIRECTORY__ \u002B \u0022/img/SAM005.html\u0022)\n(*** include-it-raw ***)"}]